/* Generated by Cython 0.24.1 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_24_1"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
  #define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__yoda__core
#define __PYX_HAVE_API__yoda__core
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <utility>
#include <map>
#include "YODA/Config/YodaConfig.h"
#include "errors.hh"
#include "YODA/Utils/MathUtils.h"
#include "YODA/Dbn0D.h"
#include "YODA/Dbn1D.h"
#include "YODA/Dbn2D.h"
#include "YODA/Dbn3D.h"
#include "YODA/Point.h"
#include "YODA/Point1D.h"
#include "YODA/Point2D.h"
#include "YODA/Point3D.h"
#include "YODA/Bin.h"
#include "YODA/Bin1D.h"
#include "YODA/Bin2D.h"
#include "YODA/HistoBin1D.h"
#include "merge.hh"
#include "YODA/HistoBin2D.h"
#include "YODA/ProfileBin1D.h"
#include "YODA/ProfileBin2D.h"
#include "YODA/AnalysisObject.h"
#include "YODA/Utils/sortedvector.h"
#include "YODA/Counter.h"
#include "YODA/Scatter1D.h"
#include "YODA/Scatter2D.h"
#include "YODA/Scatter3D.h"
#include "YODA/Histo1D.h"
#include "YODA/Histo2D.h"
#include "YODA/Profile1D.h"
#include "YODA/Profile2D.h"
#include <sstream>
#include "YODA/Reader.h"
#include "YODA/ReaderYODA.h"
#include "YODA/ReaderFLAT.h"
#include "YODA/ReaderAIDA.h"
#include "YODA/Writer.h"
#include "YODA/WriterYODA.h"
#include "YODA/WriterFLAT.h"
#include "YODA/WriterAIDA.h"
#include "YODA/Axis1D.h"
#include "YODA/Axis2D.h"
#include "stdio.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "yoda/include/Histo2D.pyx",
  "yoda/include/Scatter1D.pyx",
  "yoda/include/IO.pyx",
  "yoda/core.pyx",
  "yoda/include/Dbn0D.pyx",
  "yoda/include/Dbn1D.pyx",
  "yoda/include/Dbn2D.pyx",
  "yoda/include/Dbn3D.pyx",
  "yoda/include/Counter.pyx",
  "yoda/include/Bin.pyx",
  "yoda/include/generated/Bin1D_Dbn1D.pyx",
  "yoda/include/generated/Bin1D_Dbn2D.pyx",
  "yoda/include/HistoBin1D.pyx",
  "yoda/include/ProfileBin1D.pyx",
  "yoda/include/AnalysisObject.pyx",
  "yoda/include/Histo1D.pyx",
  "yoda/include/Profile1D.pyx",
  "yoda/include/generated/Bin2D_Dbn2D.pyx",
  "yoda/include/generated/Bin2D_Dbn3D.pyx",
  "yoda/include/ProfileBin2D.pyx",
  "yoda/include/HistoBin2D.pyx",
  "yoda/include/Profile2D.pyx",
  "yoda/include/Point.pyx",
  "yoda/include/Point1D.pyx",
  "yoda/include/Point2D.pyx",
  "yoda/include/Point3D.pyx",
  "yoda/include/Scatter2D.pyx",
  "yoda/include/Scatter3D.pyx",
  "yoda/include/Functions.pyx",
  "yoda/util.pxd",
  "yoda/stringsource",
  "type.pxd",
  "yoda/include/Errors.pyx",
};

/*--- Type declarations ---*/
struct __pyx_obj_4yoda_4util_Base;
struct __pyx_obj_4yoda_4core_Dbn0D;
struct __pyx_obj_4yoda_4core_Dbn1D;
struct __pyx_obj_4yoda_4core_Dbn2D;
struct __pyx_obj_4yoda_4core_Dbn3D;
struct __pyx_obj_4yoda_4core_Bin;
struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D;
struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D;
struct __pyx_obj_4yoda_4core_HistoBin1D;
struct __pyx_obj_4yoda_4core_ProfileBin1D;
struct __pyx_obj_4yoda_4core_AnalysisObject;
struct __pyx_obj_4yoda_4core_Counter;
struct __pyx_obj_4yoda_4core_Histo1D;
struct __pyx_obj_4yoda_4core_Profile1D;
struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D;
struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D;
struct __pyx_obj_4yoda_4core_ProfileBin2D;
struct __pyx_obj_4yoda_4core_HistoBin2D;
struct __pyx_obj_4yoda_4core_Histo2D;
struct __pyx_obj_4yoda_4core_Profile2D;
struct __pyx_obj_4yoda_4core_Point;
struct __pyx_obj_4yoda_4core_Point1D;
struct __pyx_obj_4yoda_4core_Point2D;
struct __pyx_obj_4yoda_4core_Point3D;
struct __pyx_obj_4yoda_4core_Scatter1D;
struct __pyx_obj_4yoda_4core_Scatter2D;
struct __pyx_obj_4yoda_4core_Scatter3D;
struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3;
struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr;
struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3;
struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr;
struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check;
struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr;
struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr;

/* "yoda/declarations.pxd":17
 *     void yodaerr "translate_yoda_error" ()
 * 
 * ctypedef map[string, string] Annotations             # <<<<<<<<<<<<<<
 * ctypedef double (*dbl_dbl_fptr) (double)
 * 
 */
typedef std::map<std::string,std::string>  __pyx_t_4yoda_12declarations_Annotations;

/* "yoda/declarations.pxd":18
 * 
 * ctypedef map[string, string] Annotations
 * ctypedef double (*dbl_dbl_fptr) (double)             # <<<<<<<<<<<<<<
 * 
 * 
 */
typedef double (*__pyx_t_4yoda_12declarations_dbl_dbl_fptr)(double);

/* "yoda/declarations.pxd":427
 *         Bin1D operator - (Bin1D&)
 * 
 * ctypedef Bin1D[Dbn1D] Bin1D_Dbn1D             # <<<<<<<<<<<<<<
 * ctypedef Bin1D[Dbn2D] Bin1D_Dbn2D
 * ctypedef Bin1D[Dbn3D] Bin1D_Dbn3D
 */
typedef YODA::Bin1D<YODA::Dbn1D>  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D;

/* "yoda/declarations.pxd":428
 * 
 * ctypedef Bin1D[Dbn1D] Bin1D_Dbn1D
 * ctypedef Bin1D[Dbn2D] Bin1D_Dbn2D             # <<<<<<<<<<<<<<
 * ctypedef Bin1D[Dbn3D] Bin1D_Dbn3D
 * #}}} Bin1D
 */
typedef YODA::Bin1D<YODA::Dbn2D>  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D;

/* "yoda/declarations.pxd":429
 * ctypedef Bin1D[Dbn1D] Bin1D_Dbn1D
 * ctypedef Bin1D[Dbn2D] Bin1D_Dbn2D
 * ctypedef Bin1D[Dbn3D] Bin1D_Dbn3D             # <<<<<<<<<<<<<<
 * #}}} Bin1D
 * 
 */
typedef YODA::Bin1D<YODA::Dbn3D>  __pyx_t_4yoda_12declarations_Bin1D_Dbn3D;

/* "yoda/declarations.pxd":491
 *         int adjacentTo(Bin2D) except +yodaerr
 * 
 * ctypedef Bin2D[Dbn2D] Bin2D_Dbn2D             # <<<<<<<<<<<<<<
 * ctypedef Bin2D[Dbn3D] Bin2D_Dbn3D
 * # }}} Bin2D
 */
typedef YODA::Bin2D<YODA::Dbn2D>  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D;

/* "yoda/declarations.pxd":492
 * 
 * ctypedef Bin2D[Dbn2D] Bin2D_Dbn2D
 * ctypedef Bin2D[Dbn3D] Bin2D_Dbn3D             # <<<<<<<<<<<<<<
 * # }}} Bin2D
 * 
 */
typedef YODA::Bin2D<YODA::Dbn3D>  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D;

/* "yoda/util.pxd":2
 * ## A base CppObject which prevents null pointer access
 * cdef class Base:             # <<<<<<<<<<<<<<
 *     cdef void* _ptr
 *     cdef bint _deallocate
 */
struct __pyx_obj_4yoda_4util_Base {
  PyObject_HEAD
  struct __pyx_vtabstruct_4yoda_4util_Base *__pyx_vtab;
  void *_ptr;
  int _deallocate;
  PyObject *_owner;
};


/* "include/Dbn0D.pyx":1
 * cdef class Dbn0D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A zero-dimensional 'counter', used and exposed by Counter.
 */
struct __pyx_obj_4yoda_4core_Dbn0D {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/Dbn1D.pyx":1
 * cdef class Dbn1D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A 1D distribution 'counter', used and exposed by 1D histograms and their bins.
 */
struct __pyx_obj_4yoda_4core_Dbn1D {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/Dbn2D.pyx":1
 * cdef class Dbn2D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A 2D distribution 'counter', used and exposed by 2D histograms and
 */
struct __pyx_obj_4yoda_4core_Dbn2D {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/Dbn3D.pyx":1
 * cdef class Dbn3D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A 3D distribution 'counter', used and exposed by 2D profiles and their bins.
 */
struct __pyx_obj_4yoda_4core_Dbn3D {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/Bin.pyx":1
 * cdef class Bin(util.Base):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.Bin* bptr(self) except NULL:
 */
struct __pyx_obj_4yoda_4core_Bin {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/generated/Bin1D_Dbn1D.pyx":8
 * # Instead, make your changes in Bin1D_DBN.pyx
 * #################################################
 * cdef class Bin1D_Dbn1D(Bin):             # <<<<<<<<<<<<<<
 *     """
 *     1D Bin based on an underlying Dbn1D.
 */
struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D {
  struct __pyx_obj_4yoda_4core_Bin __pyx_base;
};


/* "include/generated/Bin1D_Dbn2D.pyx":8
 * # Instead, make your changes in Bin1D_DBN.pyx
 * #################################################
 * cdef class Bin1D_Dbn2D(Bin):             # <<<<<<<<<<<<<<
 *     """
 *     1D Bin based on an underlying Dbn2D.
 */
struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D {
  struct __pyx_obj_4yoda_4core_Bin __pyx_base;
};


/* "include/HistoBin1D.pyx":1
 * cdef class HistoBin1D(Bin1D_Dbn1D):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.HistoBin1D* hb1ptr(self) except NULL:
 */
struct __pyx_obj_4yoda_4core_HistoBin1D {
  struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D __pyx_base;
};


/* "include/ProfileBin1D.pyx":1
 * cdef class ProfileBin1D(Bin1D_Dbn2D):             # <<<<<<<<<<<<<<
 *     """
 *     A 1D profile bin, as stored inside Profile1D.
 */
struct __pyx_obj_4yoda_4core_ProfileBin1D {
  struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D __pyx_base;
};


/* "include/AnalysisObject.pyx":2
 * 
 * cdef class AnalysisObject(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     AnalysisObject is the base class of the main user-facing objects, such as
 */
struct __pyx_obj_4yoda_4core_AnalysisObject {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/Counter.pyx":1
 * cdef class Counter(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     Weight counter. Like a histogram without any axis (and hence only one bin).
 */
struct __pyx_obj_4yoda_4core_Counter {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Histo1D.pyx":1
 * cdef class Histo1D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     1D histogram, with distinction between bin areas and heights.
 */
struct __pyx_obj_4yoda_4core_Histo1D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Profile1D.pyx":1
 * cdef class Profile1D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     1D profile histogram, used to measure mean values of a y variable, binned in x.
 */
struct __pyx_obj_4yoda_4core_Profile1D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/generated/Bin2D_Dbn2D.pyx":9
 * #################################################
 * # TODO: docstrings
 * cdef class Bin2D_Dbn2D(Bin):             # <<<<<<<<<<<<<<
 *     """2D Bin class templated on a Dbn2D"""
 * 
 */
struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D {
  struct __pyx_obj_4yoda_4core_Bin __pyx_base;
};


/* "include/generated/Bin2D_Dbn3D.pyx":9
 * #################################################
 * # TODO: docstrings
 * cdef class Bin2D_Dbn3D(Bin):             # <<<<<<<<<<<<<<
 *     """2D Bin class templated on a Dbn3D"""
 * 
 */
struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D {
  struct __pyx_obj_4yoda_4core_Bin __pyx_base;
};


/* "include/ProfileBin2D.pyx":2
 * #TODO improve this once we have a working Profile2D
 * cdef class ProfileBin2D(Bin2D_Dbn3D):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.ProfileBin2D* pb2ptr(self) except NULL:
 */
struct __pyx_obj_4yoda_4core_ProfileBin2D {
  struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D __pyx_base;
};


/* "include/HistoBin2D.pyx":2
 * # TODO: tidy once we have a working Histo2D
 * cdef class HistoBin2D(Bin2D_Dbn2D):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.HistoBin2D* hb2ptr(self) except NULL:
 */
struct __pyx_obj_4yoda_4core_HistoBin2D {
  struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D __pyx_base;
};


/* "include/Histo2D.pyx":1
 * cdef class Histo2D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     2D histogram.
 */
struct __pyx_obj_4yoda_4core_Histo2D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Profile2D.pyx":1
 * cdef class Profile2D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     2D profile histogram, used to measure mean values of a z variable, binned in x and y.
 */
struct __pyx_obj_4yoda_4core_Profile2D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Point.pyx":1
 * cdef class Point(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A generic point with errors, used by the Scatter classes.
 */
struct __pyx_obj_4yoda_4core_Point {
  struct __pyx_obj_4yoda_4util_Base __pyx_base;
};


/* "include/Point1D.pyx":1
 * cdef class Point1D(Point):             # <<<<<<<<<<<<<<
 *     """
 *     A 1D point with errors, used by the Scatter1D class.
 */
struct __pyx_obj_4yoda_4core_Point1D {
  struct __pyx_obj_4yoda_4core_Point __pyx_base;
};


/* "include/Point2D.pyx":1
 * cdef class Point2D(Point):             # <<<<<<<<<<<<<<
 *     """
 *     A 2D point with errors, used by the Scatter2D class.
 */
struct __pyx_obj_4yoda_4core_Point2D {
  struct __pyx_obj_4yoda_4core_Point __pyx_base;
};


/* "include/Point3D.pyx":1
 * cdef class Point3D(Point):             # <<<<<<<<<<<<<<
 *     """
 *     A 3D point with errors, used by the Scatter3D class.
 */
struct __pyx_obj_4yoda_4core_Point3D {
  struct __pyx_obj_4yoda_4core_Point __pyx_base;
};


/* "include/Scatter1D.pyx":1
 * cdef class Scatter1D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     1D scatter plot, i.e. a collection of Point1D objects with positions and errors.
 */
struct __pyx_obj_4yoda_4core_Scatter1D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Scatter2D.pyx":1
 * cdef class Scatter2D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     2D scatter plot, i.e. a collection of Point2D objects with positions and errors.
 */
struct __pyx_obj_4yoda_4core_Scatter2D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Scatter3D.pyx":1
 * cdef class Scatter3D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     3D scatter plot, i.e. a collection of Point3D objects with positions and errors.
 */
struct __pyx_obj_4yoda_4core_Scatter3D {
  struct __pyx_obj_4yoda_4core_AnalysisObject __pyx_base;
};


/* "include/Histo1D.pyx":40
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 {
  PyObject_HEAD
  PyObject *__pyx_v_bins_or_edges;
};


/* "include/Histo1D.pyx":45
 *         try:
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)             # <<<<<<<<<<<<<<
 *             cutil.set_owned_ptr(self, new c.Histo1D(edges, string(path), string(title)))
 *         except:
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *__pyx_outer_scope;
  PyObject *__pyx_v_x;
};


/* "include/Profile1D.pyx":41
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 {
  PyObject_HEAD
  PyObject *__pyx_v_bins_or_edges;
};


/* "include/Profile1D.pyx":46
 *         try:
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)             # <<<<<<<<<<<<<<
 *             cutil.set_owned_ptr(self, new c.Profile1D(edges, string(path), string(title)))
 *         except:
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr {
  PyObject_HEAD
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *__pyx_outer_scope;
  PyObject *__pyx_v_x;
};


/* "include/IO.pyx":13
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     import re
 *     if patterns:
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check {
  PyObject_HEAD
  PyObject *__pyx_v_name;
  PyObject *__pyx_v_patterns;
  PyObject *__pyx_v_re;
  PyObject *__pyx_v_unpatterns;
};


/* "include/IO.pyx":19
 *             patterns = [patterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if not any(re.compile(patt).match(name) for patt in patterns):             # <<<<<<<<<<<<<<
 *             return False
 *     if unpatterns:
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr {
  PyObject_HEAD
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *__pyx_outer_scope;
  PyObject *__pyx_v_patt;
};


/* "include/IO.pyx":25
 *             unpatterns = [unpatterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if any(re.compile(patt).match(name) for patt in unpatterns):             # <<<<<<<<<<<<<<
 *             return False
 *     return True
 */
struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr {
  PyObject_HEAD
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *__pyx_outer_scope;
  PyObject *__pyx_v_patt;
};



/* "yoda/util.pxd":2
 * ## A base CppObject which prevents null pointer access
 * cdef class Base:             # <<<<<<<<<<<<<<
 *     cdef void* _ptr
 *     cdef bint _deallocate
 */

struct __pyx_vtabstruct_4yoda_4util_Base {
  void *(*ptr)(struct __pyx_obj_4yoda_4util_Base *);
};
static struct __pyx_vtabstruct_4yoda_4util_Base *__pyx_vtabptr_4yoda_4util_Base;
static CYTHON_INLINE void *__pyx_f_4yoda_4util_4Base_ptr(struct __pyx_obj_4yoda_4util_Base *);


/* "include/Dbn0D.pyx":1
 * cdef class Dbn0D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A zero-dimensional 'counter', used and exposed by Counter.
 */

struct __pyx_vtabstruct_4yoda_4core_Dbn0D {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::Dbn0D *(*d0ptr)(struct __pyx_obj_4yoda_4core_Dbn0D *);
  YODA::Dbn0D *(*_Dbn0D)(struct __pyx_obj_4yoda_4core_Dbn0D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn0D *__pyx_vtabptr_4yoda_4core_Dbn0D;


/* "include/Dbn1D.pyx":1
 * cdef class Dbn1D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A 1D distribution 'counter', used and exposed by 1D histograms and their bins.
 */

struct __pyx_vtabstruct_4yoda_4core_Dbn1D {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::Dbn1D *(*d1ptr)(struct __pyx_obj_4yoda_4core_Dbn1D *);
  YODA::Dbn1D *(*_Dbn1D)(struct __pyx_obj_4yoda_4core_Dbn1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn1D *__pyx_vtabptr_4yoda_4core_Dbn1D;


/* "include/Dbn2D.pyx":1
 * cdef class Dbn2D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A 2D distribution 'counter', used and exposed by 2D histograms and
 */

struct __pyx_vtabstruct_4yoda_4core_Dbn2D {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::Dbn2D *(*d2ptr)(struct __pyx_obj_4yoda_4core_Dbn2D *);
  YODA::Dbn2D *(*_Dbn2D)(struct __pyx_obj_4yoda_4core_Dbn2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn2D *__pyx_vtabptr_4yoda_4core_Dbn2D;


/* "include/Dbn3D.pyx":1
 * cdef class Dbn3D(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A 3D distribution 'counter', used and exposed by 2D profiles and their bins.
 */

struct __pyx_vtabstruct_4yoda_4core_Dbn3D {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::Dbn3D *(*d3ptr)(struct __pyx_obj_4yoda_4core_Dbn3D *);
  YODA::Dbn3D *(*_Dbn3D)(struct __pyx_obj_4yoda_4core_Dbn3D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn3D *__pyx_vtabptr_4yoda_4core_Dbn3D;


/* "include/AnalysisObject.pyx":2
 * 
 * cdef class AnalysisObject(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     AnalysisObject is the base class of the main user-facing objects, such as
 */

struct __pyx_vtabstruct_4yoda_4core_AnalysisObject {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::AnalysisObject *(*aoptr)(struct __pyx_obj_4yoda_4core_AnalysisObject *);
  YODA::AnalysisObject *(*_AnalysisObject)(struct __pyx_obj_4yoda_4core_AnalysisObject *);
};
static struct __pyx_vtabstruct_4yoda_4core_AnalysisObject *__pyx_vtabptr_4yoda_4core_AnalysisObject;
static CYTHON_INLINE YODA::AnalysisObject *__pyx_f_4yoda_4core_14AnalysisObject_aoptr(struct __pyx_obj_4yoda_4core_AnalysisObject *);
static CYTHON_INLINE YODA::AnalysisObject *__pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(struct __pyx_obj_4yoda_4core_AnalysisObject *);


/* "include/Counter.pyx":1
 * cdef class Counter(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     Weight counter. Like a histogram without any axis (and hence only one bin).
 */

struct __pyx_vtabstruct_4yoda_4core_Counter {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Counter *(*cptr)(struct __pyx_obj_4yoda_4core_Counter *);
  YODA::Counter *(*_Counter)(struct __pyx_obj_4yoda_4core_Counter *);
};
static struct __pyx_vtabstruct_4yoda_4core_Counter *__pyx_vtabptr_4yoda_4core_Counter;
static CYTHON_INLINE YODA::Counter *__pyx_f_4yoda_4core_7Counter_cptr(struct __pyx_obj_4yoda_4core_Counter *);
static CYTHON_INLINE YODA::Counter *__pyx_f_4yoda_4core_7Counter__Counter(struct __pyx_obj_4yoda_4core_Counter *);


/* "include/Bin.pyx":1
 * cdef class Bin(util.Base):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.Bin* bptr(self) except NULL:
 */

struct __pyx_vtabstruct_4yoda_4core_Bin {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::Bin *(*bptr)(struct __pyx_obj_4yoda_4core_Bin *);
};
static struct __pyx_vtabstruct_4yoda_4core_Bin *__pyx_vtabptr_4yoda_4core_Bin;
static CYTHON_INLINE YODA::Bin *__pyx_f_4yoda_4core_3Bin_bptr(struct __pyx_obj_4yoda_4core_Bin *);


/* "include/generated/Bin1D_Dbn1D.pyx":8
 * # Instead, make your changes in Bin1D_DBN.pyx
 * #################################################
 * cdef class Bin1D_Dbn1D(Bin):             # <<<<<<<<<<<<<<
 *     """
 *     1D Bin based on an underlying Dbn1D.
 */

struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn1D {
  struct __pyx_vtabstruct_4yoda_4core_Bin __pyx_base;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *(*b1ptr)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *);
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *(*_Bin1D)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn1D *__pyx_vtabptr_4yoda_4core_Bin1D_Dbn1D;
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *);
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_f_4yoda_4core_11Bin1D_Dbn1D__Bin1D(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *);


/* "include/generated/Bin1D_Dbn2D.pyx":8
 * # Instead, make your changes in Bin1D_DBN.pyx
 * #################################################
 * cdef class Bin1D_Dbn2D(Bin):             # <<<<<<<<<<<<<<
 *     """
 *     1D Bin based on an underlying Dbn2D.
 */

struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn2D {
  struct __pyx_vtabstruct_4yoda_4core_Bin __pyx_base;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *(*b1ptr)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *);
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *(*_Bin1D)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn2D *__pyx_vtabptr_4yoda_4core_Bin1D_Dbn2D;
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *);
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_f_4yoda_4core_11Bin1D_Dbn2D__Bin1D(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *);


/* "include/HistoBin1D.pyx":1
 * cdef class HistoBin1D(Bin1D_Dbn1D):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.HistoBin1D* hb1ptr(self) except NULL:
 */

struct __pyx_vtabstruct_4yoda_4core_HistoBin1D {
  struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn1D __pyx_base;
  YODA::HistoBin1D *(*hb1ptr)(struct __pyx_obj_4yoda_4core_HistoBin1D *);
  YODA::HistoBin1D *(*_HistoBin1D)(struct __pyx_obj_4yoda_4core_HistoBin1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_HistoBin1D *__pyx_vtabptr_4yoda_4core_HistoBin1D;
static CYTHON_INLINE YODA::HistoBin1D *__pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(struct __pyx_obj_4yoda_4core_HistoBin1D *);
static CYTHON_INLINE YODA::HistoBin1D *__pyx_f_4yoda_4core_10HistoBin1D__HistoBin1D(struct __pyx_obj_4yoda_4core_HistoBin1D *);


/* "include/ProfileBin1D.pyx":1
 * cdef class ProfileBin1D(Bin1D_Dbn2D):             # <<<<<<<<<<<<<<
 *     """
 *     A 1D profile bin, as stored inside Profile1D.
 */

struct __pyx_vtabstruct_4yoda_4core_ProfileBin1D {
  struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn2D __pyx_base;
  YODA::ProfileBin1D *(*pb1ptr)(struct __pyx_obj_4yoda_4core_ProfileBin1D *);
  YODA::ProfileBin1D *(*_ProfileBin1D)(struct __pyx_obj_4yoda_4core_ProfileBin1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_ProfileBin1D *__pyx_vtabptr_4yoda_4core_ProfileBin1D;
static CYTHON_INLINE YODA::ProfileBin1D *__pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(struct __pyx_obj_4yoda_4core_ProfileBin1D *);
static CYTHON_INLINE YODA::ProfileBin1D *__pyx_f_4yoda_4core_12ProfileBin1D__ProfileBin1D(struct __pyx_obj_4yoda_4core_ProfileBin1D *);


/* "include/Histo1D.pyx":1
 * cdef class Histo1D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     1D histogram, with distinction between bin areas and heights.
 */

struct __pyx_vtabstruct_4yoda_4core_Histo1D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Histo1D *(*h1ptr)(struct __pyx_obj_4yoda_4core_Histo1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Histo1D *__pyx_vtabptr_4yoda_4core_Histo1D;
static CYTHON_INLINE YODA::Histo1D *__pyx_f_4yoda_4core_7Histo1D_h1ptr(struct __pyx_obj_4yoda_4core_Histo1D *);


/* "include/Profile1D.pyx":1
 * cdef class Profile1D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     1D profile histogram, used to measure mean values of a y variable, binned in x.
 */

struct __pyx_vtabstruct_4yoda_4core_Profile1D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Profile1D *(*p1ptr)(struct __pyx_obj_4yoda_4core_Profile1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Profile1D *__pyx_vtabptr_4yoda_4core_Profile1D;
static CYTHON_INLINE YODA::Profile1D *__pyx_f_4yoda_4core_9Profile1D_p1ptr(struct __pyx_obj_4yoda_4core_Profile1D *);


/* "include/generated/Bin2D_Dbn2D.pyx":9
 * #################################################
 * # TODO: docstrings
 * cdef class Bin2D_Dbn2D(Bin):             # <<<<<<<<<<<<<<
 *     """2D Bin class templated on a Dbn2D"""
 * 
 */

struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn2D {
  struct __pyx_vtabstruct_4yoda_4core_Bin __pyx_base;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *(*b2ptr)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *);
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *(*_Bin2D)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn2D *__pyx_vtabptr_4yoda_4core_Bin2D_Dbn2D;
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *);
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_f_4yoda_4core_11Bin2D_Dbn2D__Bin2D(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *);


/* "include/generated/Bin2D_Dbn3D.pyx":9
 * #################################################
 * # TODO: docstrings
 * cdef class Bin2D_Dbn3D(Bin):             # <<<<<<<<<<<<<<
 *     """2D Bin class templated on a Dbn3D"""
 * 
 */

struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn3D {
  struct __pyx_vtabstruct_4yoda_4core_Bin __pyx_base;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *(*b2ptr)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *);
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *(*_Bin2D)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn3D *__pyx_vtabptr_4yoda_4core_Bin2D_Dbn3D;
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *);
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_f_4yoda_4core_11Bin2D_Dbn3D__Bin2D(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *);


/* "include/ProfileBin2D.pyx":2
 * #TODO improve this once we have a working Profile2D
 * cdef class ProfileBin2D(Bin2D_Dbn3D):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.ProfileBin2D* pb2ptr(self) except NULL:
 */

struct __pyx_vtabstruct_4yoda_4core_ProfileBin2D {
  struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn3D __pyx_base;
  YODA::ProfileBin2D *(*pb2ptr)(struct __pyx_obj_4yoda_4core_ProfileBin2D *);
  YODA::ProfileBin2D *(*_ProfileBin2D)(struct __pyx_obj_4yoda_4core_ProfileBin2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_ProfileBin2D *__pyx_vtabptr_4yoda_4core_ProfileBin2D;
static CYTHON_INLINE YODA::ProfileBin2D *__pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(struct __pyx_obj_4yoda_4core_ProfileBin2D *);
static CYTHON_INLINE YODA::ProfileBin2D *__pyx_f_4yoda_4core_12ProfileBin2D__ProfileBin2D(struct __pyx_obj_4yoda_4core_ProfileBin2D *);


/* "include/HistoBin2D.pyx":2
 * # TODO: tidy once we have a working Histo2D
 * cdef class HistoBin2D(Bin2D_Dbn2D):             # <<<<<<<<<<<<<<
 * 
 *     cdef inline c.HistoBin2D* hb2ptr(self) except NULL:
 */

struct __pyx_vtabstruct_4yoda_4core_HistoBin2D {
  struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn2D __pyx_base;
  YODA::HistoBin2D *(*hb2ptr)(struct __pyx_obj_4yoda_4core_HistoBin2D *);
  YODA::HistoBin2D *(*_HistoBin2D)(struct __pyx_obj_4yoda_4core_HistoBin2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_HistoBin2D *__pyx_vtabptr_4yoda_4core_HistoBin2D;
static CYTHON_INLINE YODA::HistoBin2D *__pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(struct __pyx_obj_4yoda_4core_HistoBin2D *);
static CYTHON_INLINE YODA::HistoBin2D *__pyx_f_4yoda_4core_10HistoBin2D__HistoBin2D(struct __pyx_obj_4yoda_4core_HistoBin2D *);


/* "include/Histo2D.pyx":1
 * cdef class Histo2D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     2D histogram.
 */

struct __pyx_vtabstruct_4yoda_4core_Histo2D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Histo2D *(*h2ptr)(struct __pyx_obj_4yoda_4core_Histo2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Histo2D *__pyx_vtabptr_4yoda_4core_Histo2D;
static CYTHON_INLINE YODA::Histo2D *__pyx_f_4yoda_4core_7Histo2D_h2ptr(struct __pyx_obj_4yoda_4core_Histo2D *);


/* "include/Profile2D.pyx":1
 * cdef class Profile2D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     2D profile histogram, used to measure mean values of a z variable, binned in x and y.
 */

struct __pyx_vtabstruct_4yoda_4core_Profile2D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Profile2D *(*p2ptr)(struct __pyx_obj_4yoda_4core_Profile2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Profile2D *__pyx_vtabptr_4yoda_4core_Profile2D;
static CYTHON_INLINE YODA::Profile2D *__pyx_f_4yoda_4core_9Profile2D_p2ptr(struct __pyx_obj_4yoda_4core_Profile2D *);


/* "include/Point.pyx":1
 * cdef class Point(util.Base):             # <<<<<<<<<<<<<<
 *     """
 *     A generic point with errors, used by the Scatter classes.
 */

struct __pyx_vtabstruct_4yoda_4core_Point {
  struct __pyx_vtabstruct_4yoda_4util_Base __pyx_base;
  YODA::Point *(*pptr)(struct __pyx_obj_4yoda_4core_Point *);
};
static struct __pyx_vtabstruct_4yoda_4core_Point *__pyx_vtabptr_4yoda_4core_Point;


/* "include/Point1D.pyx":1
 * cdef class Point1D(Point):             # <<<<<<<<<<<<<<
 *     """
 *     A 1D point with errors, used by the Scatter1D class.
 */

struct __pyx_vtabstruct_4yoda_4core_Point1D {
  struct __pyx_vtabstruct_4yoda_4core_Point __pyx_base;
  YODA::Point1D *(*p1ptr)(struct __pyx_obj_4yoda_4core_Point1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Point1D *__pyx_vtabptr_4yoda_4core_Point1D;


/* "include/Point2D.pyx":1
 * cdef class Point2D(Point):             # <<<<<<<<<<<<<<
 *     """
 *     A 2D point with errors, used by the Scatter2D class.
 */

struct __pyx_vtabstruct_4yoda_4core_Point2D {
  struct __pyx_vtabstruct_4yoda_4core_Point __pyx_base;
  YODA::Point2D *(*p2ptr)(struct __pyx_obj_4yoda_4core_Point2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Point2D *__pyx_vtabptr_4yoda_4core_Point2D;


/* "include/Point3D.pyx":1
 * cdef class Point3D(Point):             # <<<<<<<<<<<<<<
 *     """
 *     A 3D point with errors, used by the Scatter3D class.
 */

struct __pyx_vtabstruct_4yoda_4core_Point3D {
  struct __pyx_vtabstruct_4yoda_4core_Point __pyx_base;
  YODA::Point3D *(*p3ptr)(struct __pyx_obj_4yoda_4core_Point3D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Point3D *__pyx_vtabptr_4yoda_4core_Point3D;


/* "include/Scatter1D.pyx":1
 * cdef class Scatter1D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     1D scatter plot, i.e. a collection of Point1D objects with positions and errors.
 */

struct __pyx_vtabstruct_4yoda_4core_Scatter1D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Scatter1D *(*s1ptr)(struct __pyx_obj_4yoda_4core_Scatter1D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Scatter1D *__pyx_vtabptr_4yoda_4core_Scatter1D;
static CYTHON_INLINE YODA::Scatter1D *__pyx_f_4yoda_4core_9Scatter1D_s1ptr(struct __pyx_obj_4yoda_4core_Scatter1D *);


/* "include/Scatter2D.pyx":1
 * cdef class Scatter2D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     2D scatter plot, i.e. a collection of Point2D objects with positions and errors.
 */

struct __pyx_vtabstruct_4yoda_4core_Scatter2D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Scatter2D *(*s2ptr)(struct __pyx_obj_4yoda_4core_Scatter2D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Scatter2D *__pyx_vtabptr_4yoda_4core_Scatter2D;
static CYTHON_INLINE YODA::Scatter2D *__pyx_f_4yoda_4core_9Scatter2D_s2ptr(struct __pyx_obj_4yoda_4core_Scatter2D *);


/* "include/Scatter3D.pyx":1
 * cdef class Scatter3D(AnalysisObject):             # <<<<<<<<<<<<<<
 *     """
 *     3D scatter plot, i.e. a collection of Point3D objects with positions and errors.
 */

struct __pyx_vtabstruct_4yoda_4core_Scatter3D {
  struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_base;
  YODA::Scatter3D *(*s3ptr)(struct __pyx_obj_4yoda_4core_Scatter3D *);
};
static struct __pyx_vtabstruct_4yoda_4core_Scatter3D *__pyx_vtabptr_4yoda_4core_Scatter3D;
static CYTHON_INLINE YODA::Scatter3D *__pyx_f_4yoda_4core_9Scatter3D_s3ptr(struct __pyx_obj_4yoda_4core_Scatter3D *);

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyThreadStateGet.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* KeywordStringCheck.proto */
static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* SaveResetException.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* ListCompAppend.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyObjectSetAttrStr.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* ListAppend.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* CallNextTpDealloc.proto */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyObject *dict);

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_long(unsigned long value);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* SwapException.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static int __Pyx_Coroutine_clear(PyObject *self);
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue);
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue) PyGen_FetchStopIterationValue(pvalue)
#endif

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static YODA::Dbn0D *__pyx_f_4yoda_4core_5Dbn0D_d0ptr(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto*/
static YODA::Dbn0D *__pyx_f_4yoda_4core_5Dbn0D__Dbn0D(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto*/
static YODA::Dbn1D *__pyx_f_4yoda_4core_5Dbn1D_d1ptr(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto*/
static YODA::Dbn1D *__pyx_f_4yoda_4core_5Dbn1D__Dbn1D(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto*/
static YODA::Dbn2D *__pyx_f_4yoda_4core_5Dbn2D_d2ptr(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto*/
static YODA::Dbn2D *__pyx_f_4yoda_4core_5Dbn2D__Dbn2D(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto*/
static YODA::Dbn3D *__pyx_f_4yoda_4core_5Dbn3D_d3ptr(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto*/
static YODA::Dbn3D *__pyx_f_4yoda_4core_5Dbn3D__Dbn3D(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Counter *__pyx_f_4yoda_4core_7Counter_cptr(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Counter *__pyx_f_4yoda_4core_7Counter__Counter(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Bin *__pyx_f_4yoda_4core_3Bin_bptr(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_f_4yoda_4core_11Bin1D_Dbn1D__Bin1D(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_f_4yoda_4core_11Bin1D_Dbn2D__Bin1D(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::HistoBin1D *__pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::HistoBin1D *__pyx_f_4yoda_4core_10HistoBin1D__HistoBin1D(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::ProfileBin1D *__pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::ProfileBin1D *__pyx_f_4yoda_4core_12ProfileBin1D__ProfileBin1D(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::AnalysisObject *__pyx_f_4yoda_4core_14AnalysisObject_aoptr(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::AnalysisObject *__pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Histo1D *__pyx_f_4yoda_4core_7Histo1D_h1ptr(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Profile1D *__pyx_f_4yoda_4core_9Profile1D_p1ptr(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_f_4yoda_4core_11Bin2D_Dbn2D__Bin2D(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto*/
static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_f_4yoda_4core_11Bin2D_Dbn3D__Bin2D(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::ProfileBin2D *__pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::ProfileBin2D *__pyx_f_4yoda_4core_12ProfileBin2D__ProfileBin2D(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::HistoBin2D *__pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::HistoBin2D *__pyx_f_4yoda_4core_10HistoBin2D__HistoBin2D(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Histo2D *__pyx_f_4yoda_4core_7Histo2D_h2ptr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Profile2D *__pyx_f_4yoda_4core_9Profile2D_p2ptr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto*/
static YODA::Point *__pyx_f_4yoda_4core_5Point_pptr(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self); /* proto*/
static YODA::Point1D *__pyx_f_4yoda_4core_7Point1D_p1ptr(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto*/
static YODA::Point2D *__pyx_f_4yoda_4core_7Point2D_p2ptr(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto*/
static YODA::Point3D *__pyx_f_4yoda_4core_7Point3D_p3ptr(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Scatter1D *__pyx_f_4yoda_4core_9Scatter1D_s1ptr(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Scatter2D *__pyx_f_4yoda_4core_9Scatter2D_s2ptr(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto*/
static CYTHON_INLINE YODA::Scatter3D *__pyx_f_4yoda_4core_9Scatter3D_s3ptr(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto*/
static CYTHON_INLINE void *__pyx_f_4yoda_4util_4Base_ptr(struct __pyx_obj_4yoda_4util_Base *__pyx_v_self); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.utility' */

/* Module declarations from 'libcpp.pair' */

/* Module declarations from 'libcpp.map' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'yoda.declarations' */

/* Module declarations from 'yoda.util' */
static PyTypeObject *__pyx_ptype_4yoda_4util_Base = 0;
static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_set_owned_ptr(struct __pyx_obj_4yoda_4util_Base *, void *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_set_borrowed_ptr(struct __pyx_obj_4yoda_4util_Base *, void *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_new_owned_cls(PyObject *, void *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_new_borrowed_cls(PyObject *, void *, PyObject *); /*proto*/
static CYTHON_INLINE size_t __pyx_f_4yoda_4util_pythonic_index(int, size_t); /*proto*/

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'yoda.core' */
static PyTypeObject *__pyx_ptype_4yoda_4core_Dbn0D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Dbn1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Dbn2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Dbn3D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_AnalysisObject = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Counter = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Bin = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Bin1D_Dbn1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Bin1D_Dbn2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_HistoBin1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_ProfileBin1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Histo1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Profile1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Bin2D_Dbn2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Bin2D_Dbn3D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_ProfileBin2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_HistoBin2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Histo2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Profile2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Point = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Point1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Point2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Point3D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Scatter1D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Scatter2D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core_Scatter3D = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct____init3 = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct_1_genexpr = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct_2___init3 = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct_3_genexpr = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct_4__pattern_check = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct_5_genexpr = 0;
static PyTypeObject *__pyx_ptype_4yoda_4core___pyx_scope_struct_6_genexpr = 0;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_Exception;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_BinningError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_RangeError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_LockError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_GridError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_LogicError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_LowStatsError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_WeightError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_AnnotationError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_ReadError;
__PYX_EXTERN_C DL_EXPORT(PyObject) *YodaExc_UserError;
static PyObject *__pyx_f_4yoda_4core__aobjects_to_list(std::vector<YODA::AnalysisObject *>  *, PyObject *, PyObject *); /*proto*/
static PyObject *__pyx_f_4yoda_4core__aobjects_to_dict(std::vector<YODA::AnalysisObject *>  *, PyObject *, PyObject *); /*proto*/
static void __pyx_f_4yoda_4core__make_iss(std::istringstream &, char *); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_string(const std::vector<std::string>  &); /*proto*/
static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &); /*proto*/
static PyObject *__pyx_convert_pair_to_py_double____double(std::pair<double,double>  const &); /*proto*/
static std::pair<double,double>  __pyx_convert_pair_from_py_double__and_double(PyObject *); /*proto*/
static std::vector<int>  __pyx_convert_vector_from_py_int(PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "yoda.core"
int __pyx_module_is_main_yoda__core = 0;

/* Implementation of 'yoda.core' */
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_IndexError;
static PyObject *__pyx_builtin_range;
static const char __pyx_k_a[] = "a";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_v[] = "v";
static const char __pyx_k_w[] = "w";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_XY[] = "XY";
static const char __pyx_k_ao[] = "ao";
static const char __pyx_k_ax[] = "ax";
static const char __pyx_k_ay[] = "ay";
static const char __pyx_k_az[] = "az";
static const char __pyx_k_ia[] = "ia";
static const char __pyx_k_ib[] = "ib";
static const char __pyx_k_ix[] = "ix";
static const char __pyx_k_re[] = "re";
static const char __pyx_k_XYZ[] = "XYZ";
static const char __pyx_k__10[] = "-";
static const char __pyx_k__12[] = "*";
static const char __pyx_k_ao1[] = "ao1";
static const char __pyx_k_ao2[] = "ao2";
static const char __pyx_k_arg[] = "arg";
static const char __pyx_k_bin[] = "bin";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_err[] = "err";
static const char __pyx_k_iss[] = "iss";
static const char __pyx_k_low[] = "low";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_oss[] = "oss";
static const char __pyx_k_s_s[] = "<%s '%s'>";
static const char __pyx_k_sys[] = "sys";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_vec[] = "vec";
static const char __pyx_k_xyz[] = "xyz";
static const char __pyx_k_0_2e[] = "%0.2e";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_bins[] = "bins";
static const char __pyx_k_high[] = "high";
static const char __pyx_k_imap[] = "imap";
static const char __pyx_k_iter[] = "__iter__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mean[] = "mean";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_path[] = "path";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_seek[] = "seek";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_sumW[] = "sumW";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_util[] = "util";
static const char __pyx_k_xMax[] = "xMax";
static const char __pyx_k_xMid[] = "xMid";
static const char __pyx_k_xMin[] = "xMin";
static const char __pyx_k_xRMS[] = "xRMS";
static const char __pyx_k_xlow[] = "xlow";
static const char __pyx_k_yMax[] = "yMax";
static const char __pyx_k_yMid[] = "yMid";
static const char __pyx_k_yMin[] = "yMin";
static const char __pyx_k_yRMS[] = "yRMS";
static const char __pyx_k_ylow[] = "ylow";
static const char __pyx_k_begin[] = "begin";
static const char __pyx_k_class[] = "__class__";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_edges[] = "edges";
static const char __pyx_k_init2[] = "__init2";
static const char __pyx_k_init3[] = "__init3";
static const char __pyx_k_init4[] = "__init4";
static const char __pyx_k_init5[] = "__init5";
static const char __pyx_k_init8[] = "__init8";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_match[] = "match";
static const char __pyx_k_nbins[] = "nbins";
static const char __pyx_k_other[] = "other";
static const char __pyx_k_p1ptr[] = "p1ptr";
static const char __pyx_k_point[] = "point";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_start[] = "start";
static const char __pyx_k_stdin[] = "stdin";
static const char __pyx_k_strip[] = "strip";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_title[] = "title";
static const char __pyx_k_upper[] = "upper";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_xErrs[] = "xErrs";
static const char __pyx_k_xMean[] = "xMean";
static const char __pyx_k_xcuts[] = "xcuts";
static const char __pyx_k_xerrs[] = "xerrs";
static const char __pyx_k_xhigh[] = "xhigh";
static const char __pyx_k_yErrs[] = "yErrs";
static const char __pyx_k_yMean[] = "yMean";
static const char __pyx_k_ycuts[] = "ycuts";
static const char __pyx_k_yerrs[] = "yerrs";
static const char __pyx_k_yhigh[] = "yhigh";
static const char __pyx_k_zErrs[] = "zErrs";
static const char __pyx_k_zerrs[] = "zerrs";
static const char __pyx_k_aolist[] = "aolist";
static const char __pyx_k_asdict[] = "asdict";
static const char __pyx_k_ctypes[] = "ctypes";
static const char __pyx_k_divide[] = "divide";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_init_2[] = "__init_2";
static const char __pyx_k_init_3[] = "__init_3";
static const char __pyx_k_name_2[] = "name";
static const char __pyx_k_normto[] = "normto";
static const char __pyx_k_nxbins[] = "nxbins";
static const char __pyx_k_nybins[] = "nybins";
static const char __pyx_k_points[] = "points";
static const char __pyx_k_repeat[] = "repeat";
static const char __pyx_k_sample[] = "sample";
static const char __pyx_k_scaleZ[] = "scaleZ";
static const char __pyx_k_setErr[] = "setErr";
static const char __pyx_k_stdDev[] = "stdDev";
static const char __pyx_k_stdout[] = "stdout";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_weight[] = "weight";
static const char __pyx_k_xEdges[] = "xEdges";
static const char __pyx_k_xFocus[] = "xFocus";
static const char __pyx_k_xWidth[] = "xWidth";
static const char __pyx_k_xedges[] = "xedges";
static const char __pyx_k_xrange[] = "xrange";
static const char __pyx_k_yEdges[] = "yEdges";
static const char __pyx_k_yFocus[] = "yFocus";
static const char __pyx_k_yWidth[] = "yWidth";
static const char __pyx_k_yedges[] = "yedges";
static const char __pyx_k_addBins[] = "addBins";
static const char __pyx_k_autostr[] = "_autostr";
static const char __pyx_k_compile[] = "compile";
static const char __pyx_k_default[] = "default";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_numBins[] = "numBins";
static const char __pyx_k_rebinBy[] = "rebinBy";
static const char __pyx_k_rebinTo[] = "rebinTo";
static const char __pyx_k_s_x_g_g[] = "<%s x=[%g, %g)>";
static const char __pyx_k_sample1[] = "sample1";
static const char __pyx_k_sample2[] = "sample2";
static const char __pyx_k_scaleXY[] = "scaleXY";
static const char __pyx_k_version[] = "version";
static const char __pyx_k_xStdDev[] = "xStdDev";
static const char __pyx_k_xStdErr[] = "xStdErr";
static const char __pyx_k_yStdDev[] = "yStdDev";
static const char __pyx_k_yStdErr[] = "yStdErr";
static const char __pyx_k_StringIO[] = "StringIO";
static const char __pyx_k_addPoint[] = "addPoint";
static const char __pyx_k_ana_objs[] = "ana_objs";
static const char __pyx_k_aobjects[] = "aobjects";
static const char __pyx_k_autotype[] = "_autotype";
static const char __pyx_k_binedges[] = "binedges";
static const char __pyx_k_c_double[] = "c_double";
static const char __pyx_k_divideBy[] = "divideBy";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_linspace[] = "linspace";
static const char __pyx_k_logspace[] = "logspace";
static const char __pyx_k_operator[] = "operator";
static const char __pyx_k_patterns[] = "patterns";
static const char __pyx_k_readAIDA[] = "readAIDA";
static const char __pyx_k_readFLAT[] = "readFLAT";
static const char __pyx_k_readYODA[] = "readYODA";
static const char __pyx_k_scaleXYZ[] = "scaleXYZ";
static const char __pyx_k_try_loop[] = "try_loop";
static const char __pyx_k_usefocus[] = "usefocus";
static const char __pyx_k_CFUNCTYPE[] = "CFUNCTYPE";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_addPoints[] = "addPoints";
static const char __pyx_k_addressof[] = "addressof";
static const char __pyx_k_cStringIO[] = "cStringIO";
static const char __pyx_k_itertools[] = "itertools";
static const char __pyx_k_mkScatter[] = "mkScatter";
static const char __pyx_k_numPoints[] = "numPoints";
static const char __pyx_k_usestddev[] = "usestddev";
static const char __pyx_k_writeAIDA[] = "writeAIDA";
static const char __pyx_k_writeFLAT[] = "writeFLAT";
static const char __pyx_k_writeYODA[] = "writeYODA";
static const char __pyx_k_xVariance[] = "xVariance";
static const char __pyx_k_yVariance[] = "yVariance";
static const char __pyx_k_yoda_core[] = "yoda.core";
static const char __pyx_k_yoda_util[] = "yoda.util";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_attrgetter[] = "attrgetter";
static const char __pyx_k_binIndexAt[] = "binIndexAt";
static const char __pyx_k_covariance[] = "covariance";
static const char __pyx_k_efficiency[] = "efficiency";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_unpatterns[] = "unpatterns";
static const char __pyx_k_MemoryError[] = "MemoryError";
static const char __pyx_k_Point1D_x_g[] = "<Point1D(x=%g)>";
static const char __pyx_k_correlation[] = "correlation";
static const char __pyx_k_str_to_file[] = "_str_to_file";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_addBins_bins[] = "__addBins_bins";
static const char __pyx_k_s_s_d_points[] = "<%s '%s' %d points>";
static const char __pyx_k_addBins_edges[] = "__addBins_edges";
static const char __pyx_k_bins_or_edges[] = "bins_or_edges";
static const char __pyx_k_index_between[] = "index_between";
static const char __pyx_k_pattern_check[] = "_pattern_check";
static const char __pyx_k_s_x_g_g_y_g_g[] = "<%s x=[%g, %g), y=[%g, %g)>";
static const char __pyx_k_str_from_file[] = "_str_from_file";
static const char __pyx_k_addBins_points[] = "__addBins_points";
static const char __pyx_k_addBins_tuples[] = "__addBins_tuples";
static const char __pyx_k_addPoint_point[] = "__addPoint_point";
static const char __pyx_k_read_symmetric[] = "read_symmetric";
static const char __pyx_k_Point2D_x_g_y_g[] = "<Point2D(x=%g, y=%g)>";
static const char __pyx_k_includeoverflow[] = "includeoverflow";
static const char __pyx_k_read_error_pair[] = "read_error_pair";
static const char __pyx_k_file_or_filename[] = "file_or_filename";
static const char __pyx_k_includeoverflows[] = "includeoverflows";
static const char __pyx_k_includeunderflow[] = "includeunderflow";
static const char __pyx_k_Dbn0D_val_g_err_g[] = "<Dbn0D(val=%g, err=%g)>";
static const char __pyx_k_addPoint_explicit[] = "__addPoint_explicit";
static const char __pyx_k_HistoBin2D_g_g_g_g[] = "HistoBin2D(%g, %g, %g, %g)";
static const char __pyx_k_s_s_d_bins_sumw_2g[] = "<%s '%s' %d bins, sumw=%.2g>";
static const char __pyx_k_Point3D_x_g_y_g_z_g[] = "<Point3D(x=%g, y=%g, z=%g)>";
static const char __pyx_k_s_s_sumw_0_2g_err_s[] = "<%s '%s' sumw=%0.2g, err=%s>";
static const char __pyx_k_ProfileBin2D_g_g_g_g[] = "ProfileBin2D(%g, %g, %g, %g)";
static const char __pyx_k_init3_locals_genexpr[] = "__init3.<locals>.genexpr";
static const char __pyx_k_s_s_d_bins_sumw_0_2g[] = "<%s '%s' %d bins, sumw=%0.2g>";
static const char __pyx_k_Dbn1D_mean_s_stddev_s[] = "<Dbn1D(mean=%s, stddev=%s)>";
static const char __pyx_k_Dbn2D_mean_s_stdDev_s[] = "<Dbn2D(mean=%s, stdDev=%s)>";
static const char __pyx_k_Dbn3D_mean_s_stddev_s[] = "Dbn3D(mean=%s, stddev=%s)";
static const char __pyx_k_pattern_check_locals_genexpr[] = "_pattern_check.<locals>.genexpr";
static const char __pyx_k_s_s_d_bins_sumw_0_2g_xmean_s[] = "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>";
static const char __pyx_k_Null_pointer_referenced_perhaps[] = "Null pointer referenced: perhaps the class is uninitialised.";
static const char __pyx_k_home_andy_proj_hep_yoda_16_pyex[] = "/home/andy/proj/hep/yoda-16/pyext/yoda/core.pyx";
static const char __pyx_k_Callback_is_not_of_type_double_d[] = "Callback is not of type (double) -> double";
static const char __pyx_k_home_andy_proj_hep_yoda_16_pyex_2[] = "/home/andy/proj/hep/yoda-16/pyext/yoda/include/Functions.pyx";
static const char __pyx_k_home_andy_proj_hep_yoda_16_pyex_3[] = "/home/andy/proj/hep/yoda-16/pyext/yoda/include/IO.pyx";
static PyObject *__pyx_kp_s_0_2e;
static PyObject *__pyx_n_s_CFUNCTYPE;
static PyObject *__pyx_kp_s_Callback_is_not_of_type_double_d;
static PyObject *__pyx_kp_s_Dbn0D_val_g_err_g;
static PyObject *__pyx_kp_s_Dbn1D_mean_s_stddev_s;
static PyObject *__pyx_kp_s_Dbn2D_mean_s_stdDev_s;
static PyObject *__pyx_kp_s_Dbn3D_mean_s_stddev_s;
static PyObject *__pyx_kp_s_HistoBin2D_g_g_g_g;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_n_s_MemoryError;
static PyObject *__pyx_kp_s_Null_pointer_referenced_perhaps;
static PyObject *__pyx_kp_s_Point1D_x_g;
static PyObject *__pyx_kp_s_Point2D_x_g_y_g;
static PyObject *__pyx_kp_s_Point3D_x_g_y_g_z_g;
static PyObject *__pyx_kp_s_ProfileBin2D_g_g_g_g;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_StringIO;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_XY;
static PyObject *__pyx_n_s_XYZ;
static PyObject *__pyx_kp_s__10;
static PyObject *__pyx_n_s__12;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_addBins;
static PyObject *__pyx_n_s_addBins_bins;
static PyObject *__pyx_n_s_addBins_edges;
static PyObject *__pyx_n_s_addBins_points;
static PyObject *__pyx_n_s_addBins_tuples;
static PyObject *__pyx_n_s_addPoint;
static PyObject *__pyx_n_s_addPoint_explicit;
static PyObject *__pyx_n_s_addPoint_point;
static PyObject *__pyx_n_s_addPoints;
static PyObject *__pyx_n_s_addressof;
static PyObject *__pyx_n_s_ana_objs;
static PyObject *__pyx_n_s_ao;
static PyObject *__pyx_n_s_ao1;
static PyObject *__pyx_n_s_ao2;
static PyObject *__pyx_n_s_aobjects;
static PyObject *__pyx_n_s_aolist;
static PyObject *__pyx_n_s_arg;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_asdict;
static PyObject *__pyx_n_s_attrgetter;
static PyObject *__pyx_n_s_autostr;
static PyObject *__pyx_n_s_autotype;
static PyObject *__pyx_n_s_ax;
static PyObject *__pyx_n_s_ay;
static PyObject *__pyx_n_s_az;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_n_s_begin;
static PyObject *__pyx_n_s_bin;
static PyObject *__pyx_n_s_binIndexAt;
static PyObject *__pyx_n_s_binedges;
static PyObject *__pyx_n_s_bins;
static PyObject *__pyx_n_s_bins_or_edges;
static PyObject *__pyx_n_s_cStringIO;
static PyObject *__pyx_n_s_c_double;
static PyObject *__pyx_n_s_class;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_compile;
static PyObject *__pyx_n_s_correlation;
static PyObject *__pyx_n_s_covariance;
static PyObject *__pyx_n_s_ctypes;
static PyObject *__pyx_n_s_default;
static PyObject *__pyx_n_s_divide;
static PyObject *__pyx_n_s_divideBy;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_edges;
static PyObject *__pyx_n_s_efficiency;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_err;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_n_s_file_or_filename;
static PyObject *__pyx_n_s_filename;
static PyObject *__pyx_n_s_genexpr;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_high;
static PyObject *__pyx_kp_s_home_andy_proj_hep_yoda_16_pyex;
static PyObject *__pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2;
static PyObject *__pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_ia;
static PyObject *__pyx_n_s_ib;
static PyObject *__pyx_n_s_imap;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_includeoverflow;
static PyObject *__pyx_n_s_includeoverflows;
static PyObject *__pyx_n_s_includeunderflow;
static PyObject *__pyx_n_s_index_between;
static PyObject *__pyx_n_s_init2;
static PyObject *__pyx_n_s_init3;
static PyObject *__pyx_n_s_init3_locals_genexpr;
static PyObject *__pyx_n_s_init4;
static PyObject *__pyx_n_s_init5;
static PyObject *__pyx_n_s_init8;
static PyObject *__pyx_n_s_init_2;
static PyObject *__pyx_n_s_init_3;
static PyObject *__pyx_n_s_iss;
static PyObject *__pyx_n_s_iter;
static PyObject *__pyx_n_s_itertools;
static PyObject *__pyx_n_s_ix;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_linspace;
static PyObject *__pyx_n_s_logspace;
static PyObject *__pyx_n_s_low;
static PyObject *__pyx_n_s_lower;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_match;
static PyObject *__pyx_n_s_mean;
static PyObject *__pyx_n_s_mkScatter;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_nbins;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_normto;
static PyObject *__pyx_n_s_numBins;
static PyObject *__pyx_n_s_numPoints;
static PyObject *__pyx_n_s_nxbins;
static PyObject *__pyx_n_s_nybins;
static PyObject *__pyx_n_s_open;
static PyObject *__pyx_n_s_operator;
static PyObject *__pyx_n_s_oss;
static PyObject *__pyx_n_s_other;
static PyObject *__pyx_n_s_p1ptr;
static PyObject *__pyx_n_s_path;
static PyObject *__pyx_n_s_pattern_check;
static PyObject *__pyx_n_s_pattern_check_locals_genexpr;
static PyObject *__pyx_n_s_patterns;
static PyObject *__pyx_n_s_point;
static PyObject *__pyx_n_s_points;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_re;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_readAIDA;
static PyObject *__pyx_n_s_readFLAT;
static PyObject *__pyx_n_s_readYODA;
static PyObject *__pyx_n_s_read_error_pair;
static PyObject *__pyx_n_s_read_symmetric;
static PyObject *__pyx_n_s_rebinBy;
static PyObject *__pyx_n_s_rebinTo;
static PyObject *__pyx_n_s_repeat;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_kp_s_s_s;
static PyObject *__pyx_kp_s_s_s_d_bins_sumw_0_2g;
static PyObject *__pyx_kp_s_s_s_d_bins_sumw_0_2g_xmean_s;
static PyObject *__pyx_kp_s_s_s_d_bins_sumw_2g;
static PyObject *__pyx_kp_s_s_s_d_points;
static PyObject *__pyx_kp_s_s_s_sumw_0_2g_err_s;
static PyObject *__pyx_kp_s_s_x_g_g;
static PyObject *__pyx_kp_s_s_x_g_g_y_g_g;
static PyObject *__pyx_n_s_sample;
static PyObject *__pyx_n_s_sample1;
static PyObject *__pyx_n_s_sample2;
static PyObject *__pyx_n_s_scaleXY;
static PyObject *__pyx_n_s_scaleXYZ;
static PyObject *__pyx_n_s_scaleZ;
static PyObject *__pyx_n_s_seek;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_setErr;
static PyObject *__pyx_n_s_start;
static PyObject *__pyx_n_s_stdDev;
static PyObject *__pyx_n_s_stdin;
static PyObject *__pyx_n_s_stdout;
static PyObject *__pyx_n_s_str_from_file;
static PyObject *__pyx_n_s_str_to_file;
static PyObject *__pyx_n_s_strip;
static PyObject *__pyx_n_s_sumW;
static PyObject *__pyx_n_s_sys;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_title;
static PyObject *__pyx_n_s_try_loop;
static PyObject *__pyx_n_s_unpatterns;
static PyObject *__pyx_n_s_upper;
static PyObject *__pyx_n_s_usefocus;
static PyObject *__pyx_n_s_usestddev;
static PyObject *__pyx_n_s_util;
static PyObject *__pyx_n_s_v;
static PyObject *__pyx_n_s_val;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_vec;
static PyObject *__pyx_n_s_version;
static PyObject *__pyx_n_s_w;
static PyObject *__pyx_n_s_weight;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_writeAIDA;
static PyObject *__pyx_n_s_writeFLAT;
static PyObject *__pyx_n_s_writeYODA;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_xEdges;
static PyObject *__pyx_n_s_xErrs;
static PyObject *__pyx_n_s_xFocus;
static PyObject *__pyx_n_s_xMax;
static PyObject *__pyx_n_s_xMean;
static PyObject *__pyx_n_s_xMid;
static PyObject *__pyx_n_s_xMin;
static PyObject *__pyx_n_s_xRMS;
static PyObject *__pyx_n_s_xStdDev;
static PyObject *__pyx_n_s_xStdErr;
static PyObject *__pyx_n_s_xVariance;
static PyObject *__pyx_n_s_xWidth;
static PyObject *__pyx_n_s_xcuts;
static PyObject *__pyx_n_s_xedges;
static PyObject *__pyx_n_s_xerrs;
static PyObject *__pyx_n_s_xhigh;
static PyObject *__pyx_n_s_xlow;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_n_s_xyz;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_yEdges;
static PyObject *__pyx_n_s_yErrs;
static PyObject *__pyx_n_s_yFocus;
static PyObject *__pyx_n_s_yMax;
static PyObject *__pyx_n_s_yMean;
static PyObject *__pyx_n_s_yMid;
static PyObject *__pyx_n_s_yMin;
static PyObject *__pyx_n_s_yRMS;
static PyObject *__pyx_n_s_yStdDev;
static PyObject *__pyx_n_s_yStdErr;
static PyObject *__pyx_n_s_yVariance;
static PyObject *__pyx_n_s_yWidth;
static PyObject *__pyx_n_s_ycuts;
static PyObject *__pyx_n_s_yedges;
static PyObject *__pyx_n_s_yerrs;
static PyObject *__pyx_n_s_yhigh;
static PyObject *__pyx_n_s_ylow;
static PyObject *__pyx_n_s_yoda_core;
static PyObject *__pyx_n_s_yoda_util;
static PyObject *__pyx_n_s_z;
static PyObject *__pyx_n_s_zErrs;
static PyObject *__pyx_n_s_zerrs;
static PyObject *__pyx_pf_4yoda_4core_version(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static void __pyx_pf_4yoda_4core_5Dbn0D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_5Dbn0D_2__init__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_6copy(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_8reset(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_10fill(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_14__add__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_16__sub__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_other); /* proto */
static void __pyx_pf_4yoda_4core_5Dbn1D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_5Dbn1D_2__init__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_6copy(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_8reset(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_10fill(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_14scaleX(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_5xMean___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_16__add__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_18__sub__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_other); /* proto */
static void __pyx_pf_4yoda_4core_5Dbn2D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_5Dbn2D_2__init__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6copy(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_8reset(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_10fill(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_14scaleX(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_16scaleY(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_18scaleXY(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4mean___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_8variance___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6stdDev___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6stdErr___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_3rms___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_20__add__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_22__sub__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_other); /* proto */
static void __pyx_pf_4yoda_4core_5Dbn3D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_5Dbn3D_2__init__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6copy(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_8fill(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_10reset(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_14scaleX(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_16scaleY(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_18scaleZ(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_20scaleXYZ(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4mean___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_8variance___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6stdDev___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6stdErr___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_3rms___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumWZ___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWZ2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWXZ___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWYZ___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_22__add__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_24__sub__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_other); /* proto */
static int __pyx_pf_4yoda_4core_7Counter___init__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_2__repr__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_4reset(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_6clone(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_8fill(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_10numEntries(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_12effNumEntries(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_14sumW(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_16sumW2(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_3val___get__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_3err___get__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_6relErr___get__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_18scaleW(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_20mkScatter(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_22divideBy(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other, PyObject *__pyx_v_efficiency); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_24__iadd__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_26__isub__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_28__add__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Counter_30__sub__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_7Counter_32__div__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other); /* proto */
#endif
static void __pyx_pf_4yoda_4core_3Bin___dealloc__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_3Bin_3dim___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_3Bin_10numEntries___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_3Bin_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_3Bin_4sumW___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_3Bin_5sumW2___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_11Bin1D_Dbn1D___init__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_2__repr__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4merge(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6__add__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_8__sub__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_other); /* proto */
static int __pyx_pf_4yoda_4core_11Bin1D_Dbn2D___init__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_2__repr__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4merge(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6__add__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_8__sub__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_other); /* proto */
static int __pyx_pf_4yoda_4core_10HistoBin1D___init__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self, double __pyx_v_a, double __pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_4area___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_6height___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_7areaErr___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_9heightErr___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_6relErr___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_2__iadd__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_4__isub__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_6__add__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_8__sub__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_b); /* proto */
static int __pyx_pf_4yoda_4core_12ProfileBin1D___init__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self, double __pyx_v_a, double __pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_4mean___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_8variance___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6stdDev___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6stdErr___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_3rms___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_5sumWY___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_2__iadd__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_4__isub__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6__add__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_8__sub__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_b); /* proto */
static void __pyx_pf_4yoda_4core_14AnalysisObject___dealloc__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4type___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_3dim___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_11annotations___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_2annotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k, PyObject *__pyx_v_default); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4setAnnotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_6hasAnnotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_8rmAnnotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_10clearAnnotations(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_12dump(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4name___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4path___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_14AnalysisObject_4path_2__set__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, char *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_5title___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_14AnalysisObject_5title_2__set__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_14__repr__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Histo1D___init__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_2__init2(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_7__init3_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4__init3(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_bins_or_edges, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_6__init5(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_nbins, PyObject *__pyx_v_low, PyObject *__pyx_v_high, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_7Histo1D_8__len__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_10__getitem__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_12__repr__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_14reset(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_16clone(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_18fill(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_20fillBin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, size_t __pyx_v_ix, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_9underflow___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_8overflow___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_22integral(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_24integralRange(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, int __pyx_v_ia, int __pyx_v_ib); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_26integralTo(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, int __pyx_v_ia, PyObject *__pyx_v_includeunderflow); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_28numEntries(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_30effNumEntries(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_32sumW(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_34sumW2(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_36xMean(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_38xVariance(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_40xStdDev(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_42xStdErr(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_44xRMS(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_46scaleW(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_48normalize(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_normto, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_7numBins___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4bins___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_50bin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_52binIndexAt(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_54binAt(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_56addBin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_low, PyObject *__pyx_v_high); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_58addBins(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_edges_or_bins); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_60__addBins_edges(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_edges); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_62__addBins_bins(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_bins); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_64__addBins_points(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_points); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_66__addBins_tuples(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_tuples); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_68mergeBins(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_ia, PyObject *__pyx_v_ib); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_70rebinBy(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_n, PyObject *__pyx_v_begin, PyObject *__pyx_v_end); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_72rebinTo(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_edges); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_74rebin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_arg, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_76mkScatter(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_usefocus); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_78toIntegral(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_efficiency, PyObject *__pyx_v_includeunderflow, PyObject *__pyx_v_includeoverflow); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_80divideBy(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_h, PyObject *__pyx_v_efficiency); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_82__iadd__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_84__isub__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_86__add__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_88__sub__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_90__div__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other); /* proto */
#endif
static int __pyx_pf_4yoda_4core_9Profile1D___init__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_2__init2(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_7__init3_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4__init3(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_bins_or_edges, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_6__init5(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, size_t __pyx_v_nbins, double __pyx_v_lower, double __pyx_v_upper, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_9Profile1D_8__len__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_10__getitem__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_12__repr__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_14reset(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_16clone(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_18fill(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_20fillBin(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, size_t __pyx_v_ix, double __pyx_v_y, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_9underflow___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_8overflow___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_22numEntries(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_24effNumEntries(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_26sumW(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_28sumW2(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_30xMean(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_32xVariance(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_34xStdDev(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_36xStdErr(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_38xRMS(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_40scaleW(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, double __pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_42scaleY(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, double __pyx_v_f); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_7numBins___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4bins___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_44binIndexAt(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_46binAt(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_48addBin(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_low, PyObject *__pyx_v_high); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_50addBins(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_edges); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_52mergeBins(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_a, PyObject *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_54rebinBy(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_n, PyObject *__pyx_v_begin, PyObject *__pyx_v_end); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_56rebinTo(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_edges); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_58rebin(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_arg, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_60mkScatter(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_usefocus, PyObject *__pyx_v_usestddev); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_62divideBy(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_h); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_64__iadd__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_66__isub__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_68__add__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_70__sub__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_72__div__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other); /* proto */
#endif
static int __pyx_pf_4yoda_4core_11Bin2D_Dbn2D___init__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_2__repr__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xyEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyWidths___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xyFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5yMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xyMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_9yVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_10xyVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7yStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7yStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4adjacentTo(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6__add__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8__sub__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_other); /* proto */
static int __pyx_pf_4yoda_4core_11Bin2D_Dbn3D___init__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_2__repr__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xyEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyWidths___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xyFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5yMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xyMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_9yVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_10xyVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7yStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7yStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4adjacentTo(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6__add__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8__sub__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_other); /* proto */
static int __pyx_pf_4yoda_4core_12ProfileBin2D___init__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_4mean___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6stdDev___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_8variance___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6stdErr___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_3rms___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_5sumWZ___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6sumWZ2___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_2__add__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_4__sub__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6__repr__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_10HistoBin2D___init__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6volume___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6height___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_9volumeErr___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_9heightErr___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6relErr___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_2__add__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_4__sub__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6__repr__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Histo2D___init__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_2__init2(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4__init4(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_xedges, PyObject *__pyx_v_yedges, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_6__init8(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_nxbins, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_nybins, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_7Histo2D_8__len__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_10__getitem__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_py_ix); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_12__repr__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_14reset(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_16clone(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_18fill(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, double __pyx_v_x, double __pyx_v_y, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_20fillBin(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, size_t __pyx_v_i, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_22integral(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_24numEntries(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_26effNumEntries(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_28sumW(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_30sumW2(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_32xMean(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_34yMean(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_36xyMean(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_38xVariance(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_40yVariance(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_42xyVariance(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_44xStdDev(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_46yStdDev(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_48xyStdDev(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_50xStdErr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_52yStdErr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_54xyStdErr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_56xRMS(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_58yRMS(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_60xyRMS(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_62scaleW(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_64normalize(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, double __pyx_v_normto, int __pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_7numBins___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_8numBinsX___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_8numBinsY___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4bins___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_66bin(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_68binIndexAt(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_70binAt(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_72addBin(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_74addBins(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_bounds); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_76mkScatter(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_usefocus); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_78divideBy(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_h, PyObject *__pyx_v_efficiency); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_80__iadd__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_82__isub__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_84__add__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_86__sub__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_88__div__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other); /* proto */
#endif
static int __pyx_pf_4yoda_4core_9Profile2D___init__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_2__init2(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4__init4(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_xedges, PyObject *__pyx_v_yedges, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_6__init8(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_nxbins, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_nybins, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_9Profile2D_8__len__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_10__getitem__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_py_ix); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_12__repr__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_14reset(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_16clone(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_18fill(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, double __pyx_v_x, double __pyx_v_y, double __pyx_v_z, double __pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_20fillBin(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, size_t __pyx_v_i, double __pyx_v_z, PyObject *__pyx_v_weight); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_22numEntries(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_24effNumEntries(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_26sumW(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_28sumW2(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_30xMean(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_32yMean(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_34xyMean(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_36xVariance(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_38yVariance(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_40xyVariance(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_42xStdDev(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_44yStdDev(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_46xyStdDev(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_48xStdErr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_50yStdErr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_52xyStdErr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_54xRMS(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_56yRMS(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_58xyRMS(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_60scaleW(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_62scaleZ(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, double __pyx_v_f); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_7numBins___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_8numBinsX___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_8numBinsY___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4bins___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_64bin(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_66binIndexAt(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_68binAt(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_70addBin(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, double __pyx_v_xlow, double __pyx_v_xhigh, double __pyx_v_ylow, double __pyx_v_yhigh); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_72addBins(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_xcuts, PyObject *__pyx_v_ycuts); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_74mkScatter(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_usefocus, PyObject *__pyx_v_usestddev); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_76divideBy(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_h); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_78__iadd__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_80__isub__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_82__add__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_84__sub__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_86__div__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other); /* proto */
#endif
static void __pyx_pf_4yoda_4core_5Point___dealloc__(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_3dim___get__(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_2val(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_4setVal(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_6errs(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_8setErr(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_10setErrs(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_es); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_12errMinus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_14setErrMinus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_16errPlus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_18setErrPlus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_20errAvg(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_5Point_22set(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_val, PyObject *__pyx_v_es); /* proto */
static int __pyx_pf_4yoda_4core_7Point1D___init__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_xerrs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_2copy(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_1x___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point1D_1x_2__set__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_5xErrs___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point1D_5xErrs_2__set__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_7xErrAvg___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_4scaleX(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_6__repr__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point1D_8__richcmp__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_other, int __pyx_v_op); /* proto */
static int __pyx_pf_4yoda_4core_7Point2D___init__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_2copy(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_1x___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point2D_1x_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_1y___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point2D_1y_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_2xy___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point2D_2xy_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_5xErrs___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point2D_5xErrs_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_5yErrs___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point2D_5yErrs_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_7xErrAvg___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_7yErrAvg___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_4scaleX(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_6scaleY(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_8scaleXY(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_10scale(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_12__repr__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point2D_14__richcmp__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_other, int __pyx_v_op); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D___init__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs, PyObject *__pyx_v_zerrs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_2copy(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_1x___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_1x_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_1y___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_1y_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_1z___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_1z_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_3xyz___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_3xyz_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_5xErrs___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_5xErrs_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_5yErrs___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_5yErrs_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_5zErrs___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static int __pyx_pf_4yoda_4core_7Point3D_5zErrs_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4xMin___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4xMax___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4yMin___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4yMax___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4zMin___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4zMax___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_7xErrAvg___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_7yErrAvg___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_7zErrAvg___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_4scaleX(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ax); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_6scaleY(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ay); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_8scaleZ(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_az); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_10scaleXYZ(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_12scaleXYZ(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_14__repr__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_7Point3D_16__richcmp__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_other, int __pyx_v_op); /* proto */
static int __pyx_pf_4yoda_4core_9Scatter1D___init__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_2__init_2(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_4__init_3(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_points, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_6clone(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_8__repr__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_9numPoints___get__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_9Scatter1D_10__len__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_6points___get__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_12point(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, size_t __pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_14__getitem__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_py_ix); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_16addPoint(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_18__addPoint_explicit(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_xerrs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_20__addPoint_point(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_22addPoints(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_iterable); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_24combineWith(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_others); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_26mkScatter(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_28scaleX(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_30transformX(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static int __pyx_pf_4yoda_4core_9Scatter2D___init__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_2__init_2(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_4__init_3(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_points, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_6clone(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_8__repr__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_9numPoints___get__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_9Scatter2D_10__len__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_6points___get__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_12point(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, size_t __pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_14__getitem__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_py_ix); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_16addPoint(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_18__addPoint_explicit(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_20__addPoint_point(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_22addPoints(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_iterable); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_24combineWith(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_others); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_26mkScatter(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_28scaleX(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_30scaleY(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_32scaleXY(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_34scale(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_36transformX(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_38transformY(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static int __pyx_pf_4yoda_4core_9Scatter3D___init__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_2__init_2(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_4__init_3(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_points, char *__pyx_v_path, char *__pyx_v_title); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_6clone(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_8__repr__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_9numPoints___get__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_pf_4yoda_4core_9Scatter3D_10__len__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_6points___get__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_12point(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, size_t __pyx_v_i); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_14__getitem__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_py_ix); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_16addPoint(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_18__addPoint_explicit(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs, PyObject *__pyx_v_zerrs); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_20__addPoint_point(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_22addPoints(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_iterable); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_24combineWith(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_others); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_26mkScatter(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_28scaleX(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_30scaleY(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_32scaleZ(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_a); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_34scaleXYZ(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_36scale(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_38transformX(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_40transformY(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_42transformZ(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_4yoda_4core_2mkScatter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ao, PyObject *__pyx_v_usefocus, PyObject *__pyx_v_usestddev); /* proto */
static PyObject *__pyx_pf_4yoda_4core_4divide(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ao1, PyObject *__pyx_v_ao2); /* proto */
static PyObject *__pyx_pf_4yoda_4core_6linspace(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_nbins, PyObject *__pyx_v_start, PyObject *__pyx_v_end); /* proto */
static PyObject *__pyx_pf_4yoda_4core_8logspace(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_nbins, PyObject *__pyx_v_start, PyObject *__pyx_v_end); /* proto */
static PyObject *__pyx_pf_4yoda_4core_10index_between(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_binedges); /* proto */
static PyObject *__pyx_pf_4yoda_4core_12mean(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_sample); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14covariance(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_sample1, PyObject *__pyx_v_sample2); /* proto */
static PyObject *__pyx_pf_4yoda_4core_16correlation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_sample1, PyObject *__pyx_v_sample2); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14_pattern_check_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_14_pattern_check_3genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4yoda_4core_18_pattern_check(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns); /* proto */
static PyObject *__pyx_pf_4yoda_4core_20_str_from_file(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename); /* proto */
static PyObject *__pyx_pf_4yoda_4core_22_str_to_file(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s, PyObject *__pyx_v_file_or_filename); /* proto */
static PyObject *__pyx_pf_4yoda_4core_24read(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns); /* proto */
static PyObject *__pyx_pf_4yoda_4core_26readYODA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns); /* proto */
static PyObject *__pyx_pf_4yoda_4core_28readFLAT(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns); /* proto */
static PyObject *__pyx_pf_4yoda_4core_30readAIDA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns); /* proto */
static PyObject *__pyx_pf_4yoda_4core_32write(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_filename); /* proto */
static PyObject *__pyx_pf_4yoda_4core_34writeYODA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_file_or_filename); /* proto */
static PyObject *__pyx_pf_4yoda_4core_36writeFLAT(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_file_or_filename); /* proto */
static PyObject *__pyx_pf_4yoda_4core_38writeAIDA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_file_or_filename); /* proto */
static PyObject *__pyx_tp_new_4yoda_4core_Dbn0D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Dbn1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Dbn2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Dbn3D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_AnalysisObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Counter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Bin(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Bin1D_Dbn1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Bin1D_Dbn2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_HistoBin1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_ProfileBin1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Histo1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Profile1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Bin2D_Dbn2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Bin2D_Dbn3D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_ProfileBin2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_HistoBin2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Histo2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Profile2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Point(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Point1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Point2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Point3D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Scatter1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Scatter2D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core_Scatter3D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct____init3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_2___init3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_4__pattern_check(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_5_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_6_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_codeobj__13;
static PyObject *__pyx_codeobj__15;
static PyObject *__pyx_codeobj__17;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__21;
static PyObject *__pyx_codeobj__23;
static PyObject *__pyx_codeobj__25;
static PyObject *__pyx_codeobj__27;
static PyObject *__pyx_codeobj__29;
static PyObject *__pyx_codeobj__31;
static PyObject *__pyx_codeobj__33;
static PyObject *__pyx_codeobj__35;
static PyObject *__pyx_codeobj__37;
static PyObject *__pyx_codeobj__39;
static PyObject *__pyx_codeobj__41;
static PyObject *__pyx_codeobj__43;
static PyObject *__pyx_codeobj__45;
static PyObject *__pyx_codeobj__47;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
PyObject *YodaExc_Exception = 0;
PyObject *YodaExc_BinningError = 0;
PyObject *YodaExc_RangeError = 0;
PyObject *YodaExc_LockError = 0;
PyObject *YodaExc_GridError = 0;
PyObject *YodaExc_LogicError = 0;
PyObject *YodaExc_LowStatsError = 0;
PyObject *YodaExc_WeightError = 0;
PyObject *YodaExc_AnnotationError = 0;
PyObject *YodaExc_ReadError = 0;
PyObject *YodaExc_UserError = 0;

/* "yoda/core.pyx":19
 * from operator import attrgetter
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     "Return YODA library version as a string"
 *     return c.version()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_1version(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_version[] = "version()\nReturn YODA library version as a string";
static PyMethodDef __pyx_mdef_4yoda_4core_1version = {"version", (PyCFunction)__pyx_pw_4yoda_4core_1version, METH_NOARGS, __pyx_doc_4yoda_4core_version};
static PyObject *__pyx_pw_4yoda_4core_1version(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("version (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_version(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_version(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("version", 0);

  /* "yoda/core.pyx":21
 * def version():
 *     "Return YODA library version as a string"
 *     return c.version()             # <<<<<<<<<<<<<<
 * 
 * include "include/Errors.pyx"
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(YODA::version()); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yoda/core.pyx":19
 * from operator import attrgetter
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     "Return YODA library version as a string"
 *     return c.version()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.version", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":6
 *     """
 * 
 *     cdef c.Dbn0D* d0ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn0D *> self.ptr()
 *     # TODO: remove!
 */

static YODA::Dbn0D *__pyx_f_4yoda_4core_5Dbn0D_d0ptr(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  YODA::Dbn0D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("d0ptr", 0);

  /* "include/Dbn0D.pyx":7
 * 
 *     cdef c.Dbn0D* d0ptr(self) except NULL:
 *         return <c.Dbn0D *> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove!
 *     cdef c.Dbn0D *_Dbn0D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 7, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn0D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":6
 *     """
 * 
 *     cdef c.Dbn0D* d0ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn0D *> self.ptr()
 *     # TODO: remove!
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn0D.d0ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":9
 *         return <c.Dbn0D *> self.ptr()
 *     # TODO: remove!
 *     cdef c.Dbn0D *_Dbn0D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn0D *> self.ptr()
 * 
 */

static YODA::Dbn0D *__pyx_f_4yoda_4core_5Dbn0D__Dbn0D(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  YODA::Dbn0D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Dbn0D", 0);

  /* "include/Dbn0D.pyx":10
 *     # TODO: remove!
 *     cdef c.Dbn0D *_Dbn0D(self) except NULL:
 *         return <c.Dbn0D *> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 10, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn0D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":9
 *         return <c.Dbn0D *> self.ptr()
 *     # TODO: remove!
 *     cdef c.Dbn0D *_Dbn0D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn0D *> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn0D._Dbn0D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":12
 *         return <c.Dbn0D *> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn0D *p = self.d0ptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_5Dbn0D_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_5Dbn0D_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_5Dbn0D___dealloc__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_5Dbn0D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  YODA::Dbn0D *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/Dbn0D.pyx":13
 * 
 *     def __dealloc__(self):
 *         cdef c.Dbn0D *p = self.d0ptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 13, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/Dbn0D.pyx":14
 *     def __dealloc__(self):
 *         cdef c.Dbn0D *p = self.d0ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/Dbn0D.pyx":15
 *         cdef c.Dbn0D *p = self.d0ptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 * 
 */
    delete __pyx_v_p;

    /* "include/Dbn0D.pyx":14
 *     def __dealloc__(self):
 *         cdef c.Dbn0D *p = self.d0ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/Dbn0D.pyx":12
 *         return <c.Dbn0D *> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn0D *p = self.d0ptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.Dbn0D.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/Dbn0D.pyx":18
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn0D())
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_5Dbn0D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_5Dbn0D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_2__init__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_5Dbn0D_2__init__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Dbn0D.pyx":19
 * 
 *     def __init__(self):
 *         cutil.set_owned_ptr(self, new c.Dbn0D())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), new YODA::Dbn0D()); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Dbn0D.pyx":18
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn0D())
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Dbn0D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":21
 *         cutil.set_owned_ptr(self, new c.Dbn0D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Dbn0D(val=%g, err=%g)>' % (self.val, self.err)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_4__repr__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Dbn0D.pyx":22
 * 
 *     def __repr__(self):
 *         return '<Dbn0D(val=%g, err=%g)>' % (self.val, self.err)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_val); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_err); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_Dbn0D_val_g_err_g, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":21
 *         cutil.set_owned_ptr(self, new c.Dbn0D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Dbn0D(val=%g, err=%g)>' % (self.val, self.err)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":25
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.set_owned_ptr(self, new c.Dbn0D(deref(self.d0ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn0D_6copy[] = "Dbn0D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_6copy(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_6copy(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Dbn0D.pyx":26
 * 
 *     def copy(self):
 *         return cutil.set_owned_ptr(self, new c.Dbn0D(deref(self.d0ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 26, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), new YODA::Dbn0D((*__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":25
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.set_owned_ptr(self, new c.Dbn0D(deref(self.d0ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn0D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":28
 *         return cutil.set_owned_ptr(self, new c.Dbn0D(deref(self.d0ptr())))
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn0D_8reset[] = "Dbn0D.reset(self)\n\n        () -> None\n\n        Reset the distribution counters to the unfilled state.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_8reset(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_8reset(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Dbn0D.pyx":34
 *         Reset the distribution counters to the unfilled state.
 *         """
 *         self.d0ptr().reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 34, __pyx_L1_error)
  __pyx_t_1->reset();

  /* "include/Dbn0D.pyx":28
 *         return cutil.set_owned_ptr(self, new c.Dbn0D(deref(self.d0ptr())))
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn0D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":37
 * 
 * 
 *     def fill(self, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float weight=1.0) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_11fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn0D_10fill[] = "Dbn0D.fill(self, weight=1.0)\n\n        (float weight=1.0) -> None\n\n        Fills the distribution with the given weight at given x.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_11fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_weight,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(4, 37, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_weight = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(4, 37, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Dbn0D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_10fill(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self), __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_10fill(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Dbn0D.pyx":43
 *         Fills the distribution with the given weight at given x.
 *         """
 *         self.d0ptr().fill(weight)             # <<<<<<<<<<<<<<
 * 
 *     def scaleW(self, w):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 43, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(4, 43, __pyx_L1_error)
  __pyx_t_1->fill(__pyx_t_2);

  /* "include/Dbn0D.pyx":37
 * 
 * 
 *     def fill(self, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float weight=1.0) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn0D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":45
 *         self.d0ptr().fill(weight)
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn0D_12scaleW[] = "Dbn0D.scaleW(self, w)\n\n        (float) -> None\n\n        Scale the weights by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_12scaleW(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Dbn0D.pyx":51
 *         Scale the weights by the given factor.
 *         """
 *         self.d0ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 51, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(4, 51, __pyx_L1_error)
  __pyx_t_1->scaleW(__pyx_t_2);

  /* "include/Dbn0D.pyx":45
 *         self.d0ptr().fill(weight)
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn0D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":55
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d0ptr().numEntries())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_10numEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_10numEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_10numEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  unsigned long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn0D.pyx":57
 *     def numEntries(self):
 *         """The number of entries"""
 *         return int(self.d0ptr().numEntries())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 57, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(4, 57, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":55
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d0ptr().numEntries())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Dbn0D.numEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":60
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d0ptr().effNumEntries()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_13effNumEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_13effNumEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_13effNumEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn0D.pyx":62
 *     def effNumEntries(self):
 *         """Effective number of entries (for weighted events)"""
 *         return self.d0ptr().effNumEntries()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 62, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->effNumEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(4, 62, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":60
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d0ptr().effNumEntries()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.effNumEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":66
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d0ptr().errW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_4errW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_4errW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_4errW___get__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn0D.pyx":68
 *     def errW(self):
 *         """Error on sumW"""
 *         return self.d0ptr().errW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 68, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->errW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(4, 68, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":66
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d0ptr().errW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.errW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":71
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d0ptr().relErrW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_7relErrW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_7relErrW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_7relErrW___get__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn0D.pyx":73
 *     def relErrW(self):
 *         """Relative error on sumW"""
 *         return self.d0ptr().relErrW()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 73, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErrW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(4, 73, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":71
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d0ptr().relErrW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.relErrW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":77
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d0ptr().sumW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_4sumW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_4sumW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_4sumW___get__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn0D.pyx":79
 *     def sumW(self):
 *         """sum(weights)"""
 *         return self.d0ptr().sumW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 79, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(4, 79, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":77
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d0ptr().sumW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.sumW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":82
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d0ptr().sumW2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_5sumW2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_5sumW2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_5sumW2___get__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn0D.pyx":84
 *     def sumW2(self):
 *         """sum(weights * weights)"""
 *         return self.d0ptr().sumW2()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 84, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(4, 84, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":82
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d0ptr().sumW2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.sumW2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":87
 * 
 * 
 *     def __add__(Dbn0D self, Dbn0D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) + deref(other.d0ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_15__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_15__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn0D, 1, "self", 0))) __PYX_ERR(4, 87, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn0D, 1, "other", 0))) __PYX_ERR(4, 87, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_14__add__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_14__add__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  YODA::Dbn0D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Dbn0D.pyx":88
 * 
 *     def __add__(Dbn0D self, Dbn0D other):
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) + deref(other.d0ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Dbn0D self, Dbn0D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 88, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(4, 88, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn0D), new YODA::Dbn0D(((*__pyx_t_1) + (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":87
 * 
 * 
 *     def __add__(Dbn0D self, Dbn0D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) + deref(other.d0ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn0D.pyx":90
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) + deref(other.d0ptr())))
 * 
 *     def __sub__(Dbn0D self, Dbn0D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) - deref(other.d0ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_17__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn0D_17__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn0D, 1, "self", 0))) __PYX_ERR(4, 90, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn0D, 1, "other", 0))) __PYX_ERR(4, 90, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn0D_16__sub__(((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn0D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn0D_16__sub__(struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn0D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn0D *__pyx_t_1;
  YODA::Dbn0D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Dbn0D.pyx":91
 * 
 *     def __sub__(Dbn0D self, Dbn0D other):
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) - deref(other.d0ptr())))             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(4, 91, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn0D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d0ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(4, 91, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn0D), new YODA::Dbn0D(((*__pyx_t_1) - (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn0D.pyx":90
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) + deref(other.d0ptr())))
 * 
 *     def __sub__(Dbn0D self, Dbn0D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn0D, new c.Dbn0D(deref(self.d0ptr()) - deref(other.d0ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn0D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":6
 *     """
 * 
 *     cdef c.Dbn1D* d1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn1D *> self.ptr()
 *     # TODO: remove!
 */

static YODA::Dbn1D *__pyx_f_4yoda_4core_5Dbn1D_d1ptr(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  YODA::Dbn1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("d1ptr", 0);

  /* "include/Dbn1D.pyx":7
 * 
 *     cdef c.Dbn1D* d1ptr(self) except NULL:
 *         return <c.Dbn1D *> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove!
 *     cdef c.Dbn1D *_Dbn1D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 7, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":6
 *     """
 * 
 *     cdef c.Dbn1D* d1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn1D *> self.ptr()
 *     # TODO: remove!
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D.d1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":9
 *         return <c.Dbn1D *> self.ptr()
 *     # TODO: remove!
 *     cdef c.Dbn1D *_Dbn1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn1D *> self.ptr()
 * 
 */

static YODA::Dbn1D *__pyx_f_4yoda_4core_5Dbn1D__Dbn1D(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  YODA::Dbn1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Dbn1D", 0);

  /* "include/Dbn1D.pyx":10
 *     # TODO: remove!
 *     cdef c.Dbn1D *_Dbn1D(self) except NULL:
 *         return <c.Dbn1D *> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 10, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":9
 *         return <c.Dbn1D *> self.ptr()
 *     # TODO: remove!
 *     cdef c.Dbn1D *_Dbn1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn1D *> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D._Dbn1D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":12
 *         return <c.Dbn1D *> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn1D *p = self.d1ptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_5Dbn1D_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_5Dbn1D_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_5Dbn1D___dealloc__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_5Dbn1D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  YODA::Dbn1D *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/Dbn1D.pyx":13
 * 
 *     def __dealloc__(self):
 *         cdef c.Dbn1D *p = self.d1ptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 13, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/Dbn1D.pyx":14
 *     def __dealloc__(self):
 *         cdef c.Dbn1D *p = self.d1ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/Dbn1D.pyx":15
 *         cdef c.Dbn1D *p = self.d1ptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 * 
 */
    delete __pyx_v_p;

    /* "include/Dbn1D.pyx":14
 *     def __dealloc__(self):
 *         cdef c.Dbn1D *p = self.d1ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/Dbn1D.pyx":12
 *         return <c.Dbn1D *> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn1D *p = self.d1ptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.Dbn1D.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/Dbn1D.pyx":18
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn1D())
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_5Dbn1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_5Dbn1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_2__init__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_5Dbn1D_2__init__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Dbn1D.pyx":19
 * 
 *     def __init__(self):
 *         cutil.set_owned_ptr(self, new c.Dbn1D())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), new YODA::Dbn1D()); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Dbn1D.pyx":18
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn1D())
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Dbn1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":21
 *         cutil.set_owned_ptr(self, new c.Dbn1D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_4__repr__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_v_mean = NULL;
  PyObject *__pyx_v_sd = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Dbn1D.pyx":22
 * 
 *     def __repr__(self):
 *         mean = self.mean if self.sumW > 0 else None             # <<<<<<<<<<<<<<
 *         sd = self.stdDev if self.sumW > 0 else None
 *         return '<Dbn1D(mean=%s, stddev=%s)>' % (mean, sd)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(5, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_mean); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __Pyx_INCREF(Py_None);
    __pyx_t_1 = Py_None;
  }
  __pyx_v_mean = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Dbn1D.pyx":23
 *     def __repr__(self):
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None             # <<<<<<<<<<<<<<
 *         return '<Dbn1D(mean=%s, stddev=%s)>' % (mean, sd)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(5, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_stdDev); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_INCREF(Py_None);
    __pyx_t_1 = Py_None;
  }
  __pyx_v_sd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Dbn1D.pyx":24
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 *         return '<Dbn1D(mean=%s, stddev=%s)>' % (mean, sd)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_mean);
  __Pyx_GIVEREF(__pyx_v_mean);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_mean);
  __Pyx_INCREF(__pyx_v_sd);
  __Pyx_GIVEREF(__pyx_v_sd);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_sd);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_Dbn1D_mean_s_stddev_s, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":21
 *         cutil.set_owned_ptr(self, new c.Dbn1D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mean);
  __Pyx_XDECREF(__pyx_v_sd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":27
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.set_owned_ptr(self, new c.Dbn1D(deref(self.d1ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn1D_6copy[] = "Dbn1D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_6copy(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_6copy(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Dbn1D.pyx":28
 * 
 *     def copy(self):
 *         return cutil.set_owned_ptr(self, new c.Dbn1D(deref(self.d1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 28, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), new YODA::Dbn1D((*__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":27
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.set_owned_ptr(self, new c.Dbn1D(deref(self.d1ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn1D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":30
 *         return cutil.set_owned_ptr(self, new c.Dbn1D(deref(self.d1ptr())))
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn1D_8reset[] = "Dbn1D.reset(self)\n\n        () -> None\n\n        Reset the distribution counters to the unfilled state.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_8reset(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_8reset(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Dbn1D.pyx":36
 *         Reset the distribution counters to the unfilled state.
 *         """
 *         self.d1ptr().reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 36, __pyx_L1_error)
  __pyx_t_1->reset();

  /* "include/Dbn1D.pyx":30
 *         return cutil.set_owned_ptr(self, new c.Dbn1D(deref(self.d1ptr())))
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":39
 * 
 * 
 *     def fill(self, x, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float x, float weight=1.0) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_11fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn1D_10fill[] = "Dbn1D.fill(self, x, weight=1.0)\n\n        (float x, float weight=1.0) -> None\n\n        Fills the distribution with the given weight at given x.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_11fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_weight,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(5, 39, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_weight = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(5, 39, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_10fill(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self), __pyx_v_x, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_10fill(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Dbn1D.pyx":45
 *         Fills the distribution with the given weight at given x.
 *         """
 *         self.d1ptr().fill(x, weight)             # <<<<<<<<<<<<<<
 * 
 *     def scaleW(self, w):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 45, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(5, 45, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(5, 45, __pyx_L1_error)
  __pyx_t_1->fill(__pyx_t_2, __pyx_t_3);

  /* "include/Dbn1D.pyx":39
 * 
 * 
 *     def fill(self, x, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float x, float weight=1.0) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":47
 *         self.d1ptr().fill(x, weight)
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn1D_12scaleW[] = "Dbn1D.scaleW(self, w)\n\n        (float) -> None\n\n        Scale the weights by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_12scaleW(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Dbn1D.pyx":53
 *         Scale the weights by the given factor.
 *         """
 *         self.d1ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def scaleX(self, x):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 53, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(5, 53, __pyx_L1_error)
  __pyx_t_1->scaleW(__pyx_t_2);

  /* "include/Dbn1D.pyx":47
 *         self.d1ptr().fill(x, weight)
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":55
 *         self.d1ptr().scaleW(w)
 * 
 *     def scaleX(self, x):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_15scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn1D_14scaleX[] = "Dbn1D.scaleX(self, x)\n\n        (float) -> None\n\n        Scale the x dimension by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_15scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_14scaleX(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_14scaleX(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Dbn1D.pyx":61
 *         Scale the x dimension by the given factor.
 *         """
 *         self.d1ptr().scaleX(x)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 61, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(5, 61, __pyx_L1_error)
  __pyx_t_1->scaleX(__pyx_t_2);

  /* "include/Dbn1D.pyx":55
 *         self.d1ptr().scaleW(w)
 * 
 *     def scaleX(self, x):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn1D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":65
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         """Weighted mean of x"""
 *         return self.d1ptr().xMean()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5xMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5xMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_5xMean___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_5xMean___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":67
 *     def xMean(self):
 *         """Weighted mean of x"""
 *         return self.d1ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 67, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 67, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":65
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         """Weighted mean of x"""
 *         return self.d1ptr().xMean()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.xMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":70
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         """Weighted variance of x"""
 *         return self.d1ptr().xVariance()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_9xVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_9xVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_9xVariance___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":72
 *     def xVariance(self):
 *         """Weighted variance of x"""
 *         return self.d1ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 72, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 72, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":70
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         """Weighted variance of x"""
 *         return self.d1ptr().xVariance()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.xVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":75
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard deviation of x"""
 *         return self.d1ptr().xStdDev()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7xStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7xStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_7xStdDev___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":77
 *     def xStdDev(self):
 *         """Weighted standard deviation of x"""
 *         return self.d1ptr().xStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 77, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 77, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":75
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard deviation of x"""
 *         return self.d1ptr().xStdDev()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.xStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":80
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard error on <x>"""
 *         return self.d1ptr().xStdErr()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7xStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7xStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_7xStdErr___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":82
 *     def xStdErr(self):
 *         """Weighted standard error on <x>"""
 *         return self.d1ptr().xStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 82, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 82, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":80
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard error on <x>"""
 *         return self.d1ptr().xStdErr()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.xStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":85
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         """Weighted root mean squared (RMS) of x"""
 *         return self.d1ptr().xRMS()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_4xRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_4xRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_4xRMS___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":87
 *     def xRMS(self):
 *         """Weighted root mean squared (RMS) of x"""
 *         return self.d1ptr().xRMS()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 87, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 87, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":85
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         """Weighted root mean squared (RMS) of x"""
 *         return self.d1ptr().xRMS()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.xRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":90
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d1ptr().numEntries())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_10numEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_10numEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_10numEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  unsigned long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":92
 *     def numEntries(self):
 *         """The number of entries"""
 *         return int(self.d1ptr().numEntries())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 92, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 92, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(5, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":90
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d1ptr().numEntries())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Dbn1D.numEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":95
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d1ptr().effNumEntries()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_13effNumEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_13effNumEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_13effNumEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":97
 *     def effNumEntries(self):
 *         """Effective number of entries (for weighted events)"""
 *         return self.d1ptr().effNumEntries()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 97, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->effNumEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 97, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":95
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d1ptr().effNumEntries()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.effNumEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":101
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d1ptr().errW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_4errW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_4errW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_4errW___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":103
 *     def errW(self):
 *         """Error on sumW"""
 *         return self.d1ptr().errW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 103, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->errW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 103, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":101
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d1ptr().errW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.errW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":106
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d1ptr().relErrW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7relErrW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_7relErrW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_7relErrW___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":108
 *     def relErrW(self):
 *         """Relative error on sumW"""
 *         return self.d1ptr().relErrW()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 108, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErrW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 108, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":106
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d1ptr().relErrW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.relErrW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":112
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d1ptr().sumW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_4sumW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_4sumW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_4sumW___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":114
 *     def sumW(self):
 *         """sum(weights)"""
 *         return self.d1ptr().sumW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 114, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 114, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":112
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d1ptr().sumW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.sumW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":117
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d1ptr().sumW2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5sumW2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5sumW2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_5sumW2___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":119
 *     def sumW2(self):
 *         """sum(weights * weights)"""
 *         return self.d1ptr().sumW2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 119, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 119, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":117
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d1ptr().sumW2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.sumW2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":122
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs)"""
 *         return self.d1ptr().sumWX()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":124
 *     def sumWX(self):
 *         """sum(weights * xs)"""
 *         return self.d1ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 124, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 124, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":122
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs)"""
 *         return self.d1ptr().sumWX()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":127
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * xs)"""
 *         return self.d1ptr().sumWX2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn1D.pyx":129
 *     def sumWX2(self):
 *         """sum(weights * xs * xs)"""
 *         return self.d1ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 129, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(5, 129, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":127
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * xs)"""
 *         return self.d1ptr().sumWX2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":132
 * 
 * 
 *     def __add__(Dbn1D self, Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) + deref(other.d1ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_17__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_17__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn1D, 1, "self", 0))) __PYX_ERR(5, 132, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn1D, 1, "other", 0))) __PYX_ERR(5, 132, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_16__add__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_16__add__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  YODA::Dbn1D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Dbn1D.pyx":133
 * 
 *     def __add__(Dbn1D self, Dbn1D other):
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) + deref(other.d1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Dbn1D self, Dbn1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 133, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(5, 133, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn1D), new YODA::Dbn1D(((*__pyx_t_1) + (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":132
 * 
 * 
 *     def __add__(Dbn1D self, Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) + deref(other.d1ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn1D.pyx":135
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) + deref(other.d1ptr())))
 * 
 *     def __sub__(Dbn1D self, Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) - deref(other.d1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_19__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn1D_19__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn1D, 1, "self", 0))) __PYX_ERR(5, 135, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn1D, 1, "other", 0))) __PYX_ERR(5, 135, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn1D_18__sub__(((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn1D_18__sub__(struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn1D *__pyx_t_1;
  YODA::Dbn1D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Dbn1D.pyx":136
 * 
 *     def __sub__(Dbn1D self, Dbn1D other):
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) - deref(other.d1ptr())))             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(5, 136, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn1D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(5, 136, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn1D), new YODA::Dbn1D(((*__pyx_t_1) - (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn1D.pyx":135
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) + deref(other.d1ptr())))
 * 
 *     def __sub__(Dbn1D self, Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn1D, new c.Dbn1D(deref(self.d1ptr()) - deref(other.d1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn1D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":9
 *     """
 * 
 *     cdef c.Dbn2D* d2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn2D *> self.ptr()
 * 
 */

static YODA::Dbn2D *__pyx_f_4yoda_4core_5Dbn2D_d2ptr(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  YODA::Dbn2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("d2ptr", 0);

  /* "include/Dbn2D.pyx":10
 * 
 *     cdef c.Dbn2D* d2ptr(self) except NULL:
 *         return <c.Dbn2D *> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     # TODO: remove!
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 10, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":9
 *     """
 * 
 *     cdef c.Dbn2D* d2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn2D *> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.d2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":13
 * 
 *     # TODO: remove!
 *     cdef c.Dbn2D* _Dbn2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn2D *> self.ptr()
 * 
 */

static YODA::Dbn2D *__pyx_f_4yoda_4core_5Dbn2D__Dbn2D(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  YODA::Dbn2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Dbn2D", 0);

  /* "include/Dbn2D.pyx":14
 *     # TODO: remove!
 *     cdef c.Dbn2D* _Dbn2D(self) except NULL:
 *         return <c.Dbn2D *> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 14, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":13
 * 
 *     # TODO: remove!
 *     cdef c.Dbn2D* _Dbn2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn2D *> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D._Dbn2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":16
 *         return <c.Dbn2D *> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn2D *p = self.d2ptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_5Dbn2D_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_5Dbn2D_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_5Dbn2D___dealloc__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_5Dbn2D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  YODA::Dbn2D *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/Dbn2D.pyx":17
 * 
 *     def __dealloc__(self):
 *         cdef c.Dbn2D *p = self.d2ptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 17, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/Dbn2D.pyx":18
 *     def __dealloc__(self):
 *         cdef c.Dbn2D *p = self.d2ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/Dbn2D.pyx":19
 *         cdef c.Dbn2D *p = self.d2ptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 * 
 */
    delete __pyx_v_p;

    /* "include/Dbn2D.pyx":18
 *     def __dealloc__(self):
 *         cdef c.Dbn2D *p = self.d2ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/Dbn2D.pyx":16
 *         return <c.Dbn2D *> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn2D *p = self.d2ptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.Dbn2D.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/Dbn2D.pyx":22
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn2D())
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_5Dbn2D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_5Dbn2D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_2__init__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_5Dbn2D_2__init__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Dbn2D.pyx":23
 * 
 *     def __init__(self):
 *         cutil.set_owned_ptr(self, new c.Dbn2D())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), new YODA::Dbn2D()); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Dbn2D.pyx":22
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn2D())
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Dbn2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":25
 *         cutil.set_owned_ptr(self, new c.Dbn2D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_4__repr__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_v_mean = NULL;
  PyObject *__pyx_v_sd = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Dbn2D.pyx":26
 * 
 *     def __repr__(self):
 *         mean = self.mean if self.sumW > 0 else None             # <<<<<<<<<<<<<<
 *         sd = self.stdDev if self.sumW > 0 else None
 *         return '<Dbn2D(mean=%s, stdDev=%s)>' % (mean, sd)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(6, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_mean); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 26, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __Pyx_INCREF(Py_None);
    __pyx_t_1 = Py_None;
  }
  __pyx_v_mean = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Dbn2D.pyx":27
 *     def __repr__(self):
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None             # <<<<<<<<<<<<<<
 *         return '<Dbn2D(mean=%s, stdDev=%s)>' % (mean, sd)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(6, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_stdDev); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 27, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_INCREF(Py_None);
    __pyx_t_1 = Py_None;
  }
  __pyx_v_sd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Dbn2D.pyx":28
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 *         return '<Dbn2D(mean=%s, stdDev=%s)>' % (mean, sd)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_mean);
  __Pyx_GIVEREF(__pyx_v_mean);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_mean);
  __Pyx_INCREF(__pyx_v_sd);
  __Pyx_GIVEREF(__pyx_v_sd);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_sd);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_Dbn2D_mean_s_stdDev_s, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":25
 *         cutil.set_owned_ptr(self, new c.Dbn2D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mean);
  __Pyx_XDECREF(__pyx_v_sd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":31
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_6copy[] = "Dbn2D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_6copy(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6copy(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Dbn2D.pyx":32
 * 
 *     def copy(self):
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 32, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), new YODA::Dbn2D((*__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":31
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn2D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":34
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr())))
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_8reset[] = "Dbn2D.reset(self)\n\n        () -> None\n\n        Reset the distribution counters to the unfilled state.";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_8reset(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_8reset(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Dbn2D.pyx":39
 * 
 *         Reset the distribution counters to the unfilled state."""
 *         self.d2ptr().reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 39, __pyx_L1_error)
  try {
    __pyx_t_1->reset();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 39, __pyx_L1_error)
  }

  /* "include/Dbn2D.pyx":34
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr())))
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":42
 * 
 * 
 *     def fill(self, x, y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (x, y, weight=1.0) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_11fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_10fill[] = "Dbn2D.fill(self, x, y, weight=1.0)\n\n        (x, y, weight=1.0) -> None\n\n        Fills the distribution with the given weight at given (x, y).\n\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_11fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_weight,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 2, 3, 1); __PYX_ERR(6, 42, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(6, 42, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_weight = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(6, 42, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_10fill(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_10fill(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Dbn2D.pyx":49
 * 
 *         """
 *         self.d2ptr().fill(x, y, weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 49, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 49, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 49, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 49, __pyx_L1_error)
  try {
    __pyx_t_1->fill(__pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 49, __pyx_L1_error)
  }

  /* "include/Dbn2D.pyx":42
 * 
 * 
 *     def fill(self, x, y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (x, y, weight=1.0) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":52
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_12scaleW[] = "Dbn2D.scaleW(self, w)\n\n        (float) -> None\n\n        Scale the weights by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_12scaleW(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Dbn2D.pyx":58
 *         Scale the weights by the given factor.
 *         """
 *         self.d2ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def scaleX(self, x):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 58, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 58, __pyx_L1_error)
  try {
    __pyx_t_1->scaleW(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 58, __pyx_L1_error)
  }

  /* "include/Dbn2D.pyx":52
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":60
 *         self.d2ptr().scaleW(w)
 * 
 *     def scaleX(self, x):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_15scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_14scaleX[] = "Dbn2D.scaleX(self, x)\n\n        (float) -> None\n\n        Scale the x dimension by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_15scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_14scaleX(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_14scaleX(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Dbn2D.pyx":66
 *         Scale the x dimension by the given factor.
 *         """
 *         self.d2ptr().scaleX(x)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, y):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 66, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 66, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 66, __pyx_L1_error)
  }

  /* "include/Dbn2D.pyx":60
 *         self.d2ptr().scaleW(w)
 * 
 *     def scaleX(self, x):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":68
 *         self.d2ptr().scaleX(x)
 * 
 *     def scaleY(self, y):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_17scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_16scaleY[] = "Dbn2D.scaleY(self, y)\n\n        (float) -> None\n\n        Scale the y dimension by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_17scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_16scaleY(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_16scaleY(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Dbn2D.pyx":74
 *         Scale the y dimension by the given factor.
 *         """
 *         self.d2ptr().scaleY(y)             # <<<<<<<<<<<<<<
 * 
 *     def scaleXY(self, x, y):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 74, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 74, __pyx_L1_error)
  try {
    __pyx_t_1->scaleY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 74, __pyx_L1_error)
  }

  /* "include/Dbn2D.pyx":68
 *         self.d2ptr().scaleX(x)
 * 
 *     def scaleY(self, y):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":76
 *         self.d2ptr().scaleY(y)
 * 
 *     def scaleXY(self, x, y):             # <<<<<<<<<<<<<<
 *         """
 *         (float, float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_19scaleXY(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn2D_18scaleXY[] = "Dbn2D.scaleXY(self, x, y)\n\n        (float, float) -> None\n\n        Scale the x and y dimensions by the given factors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_19scaleXY(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXY (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scaleXY", 1, 2, 2, 1); __PYX_ERR(6, 76, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXY") < 0)) __PYX_ERR(6, 76, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXY", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(6, 76, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.scaleXY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_18scaleXY(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_18scaleXY(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("scaleXY", 0);

  /* "include/Dbn2D.pyx":82
 *         Scale the x and y dimensions by the given factors.
 *         """
 *         self.d2ptr().scaleXY(x, y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 82, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 82, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(6, 82, __pyx_L1_error)
  try {
    __pyx_t_1->scaleXY(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 82, __pyx_L1_error)
  }

  /* "include/Dbn2D.pyx":76
 *         self.d2ptr().scaleY(y)
 * 
 *     def scaleXY(self, x, y):             # <<<<<<<<<<<<<<
 *         """
 *         (float, float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn2D.scaleXY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":88
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         """Weighted mean of x"""
 *         return util.XY(self.d2ptr().xMean(), self.d2ptr().yMean())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_4mean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_4mean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_4mean___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4mean___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn2D *__pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":90
 *     def mean(self):
 *         """Weighted mean of x"""
 *         return util.XY(self.d2ptr().xMean(), self.d2ptr().yMean())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 90, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 90, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 90, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 90, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(6, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":88
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         """Weighted mean of x"""
 *         return util.XY(self.d2ptr().xMean(), self.d2ptr().yMean())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn2D.mean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":93
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         """Weighted variance of x"""
 *         return util.XY(self.d2ptr().xVariance(), self.d2ptr().yVariance())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_8variance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_8variance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_8variance___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_8variance___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn2D *__pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":95
 *     def variance(self):
 *         """Weighted variance of x"""
 *         return util.XY(self.d2ptr().xVariance(), self.d2ptr().yVariance())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 95, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 95, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 95, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 95, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(6, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":93
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         """Weighted variance of x"""
 *         return util.XY(self.d2ptr().xVariance(), self.d2ptr().yVariance())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn2D.variance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":98
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard deviation of x"""
 *         return util.XY(self.d2ptr().xStdDev(), self.d2ptr().yStdDev())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6stdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6stdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_6stdDev___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6stdDev___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn2D *__pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":100
 *     def stdDev(self):
 *         """Weighted standard deviation of x"""
 *         return util.XY(self.d2ptr().xStdDev(), self.d2ptr().yStdDev())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 100, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 100, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 100, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 100, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(6, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":98
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard deviation of x"""
 *         return util.XY(self.d2ptr().xStdDev(), self.d2ptr().yStdDev())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn2D.stdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":103
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard error on <x>"""
 *         return util.XY(self.d2ptr().xStdErr(), self.d2ptr().yStdErr())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6stdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6stdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_6stdErr___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6stdErr___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn2D *__pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":105
 *     def stdErr(self):
 *         """Weighted standard error on <x>"""
 *         return util.XY(self.d2ptr().xStdErr(), self.d2ptr().yStdErr())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 105, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 105, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 105, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 105, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(6, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":103
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard error on <x>"""
 *         return util.XY(self.d2ptr().xStdErr(), self.d2ptr().yStdErr())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn2D.stdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":108
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XY(self.d2ptr().xRMS(), self.d2ptr().yRMS())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_3rms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_3rms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_3rms___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_3rms___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn2D *__pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":110
 *     def rms(self):
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XY(self.d2ptr().xRMS(), self.d2ptr().yRMS())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 110, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 110, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(6, 110, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 110, __pyx_L1_error)
  }
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(6, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":108
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XY(self.d2ptr().xRMS(), self.d2ptr().yRMS())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn2D.rms.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":114
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d2ptr().numEntries())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_10numEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_10numEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_10numEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  unsigned long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":116
 *     def numEntries(self):
 *         """The number of entries"""
 *         return int(self.d2ptr().numEntries())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 116, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 116, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(6, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":114
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d2ptr().numEntries())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Dbn2D.numEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":119
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d2ptr().effNumEntries()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_13effNumEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_13effNumEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_13effNumEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":121
 *     def effNumEntries(self):
 *         """Effective number of entries (for weighted events)"""
 *         return self.d2ptr().effNumEntries()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 121, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->effNumEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 121, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":119
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d2ptr().effNumEntries()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.effNumEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":125
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d2ptr().errW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_4errW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_4errW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_4errW___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":127
 *     def errW(self):
 *         """Error on sumW"""
 *         return self.d2ptr().errW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 127, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->errW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 127, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":125
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d2ptr().errW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.errW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":130
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d2ptr().relErrW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_7relErrW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_7relErrW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_7relErrW___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":132
 *     def relErrW(self):
 *         """Relative error on sumW"""
 *         return self.d2ptr().relErrW()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 132, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErrW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 132, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":130
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d2ptr().relErrW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.relErrW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":136
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d2ptr().sumW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_4sumW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_4sumW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_4sumW___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":138
 *     def sumW(self):
 *         """sum(weights)"""
 *         return self.d2ptr().sumW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 138, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 138, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":136
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d2ptr().sumW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":141
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d2ptr().sumW2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5sumW2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5sumW2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_5sumW2___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":143
 *     def sumW2(self):
 *         """sum(weights * weights)"""
 *         return self.d2ptr().sumW2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 143, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 143, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":141
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d2ptr().sumW2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumW2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":146
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs)"""
 *         return self.d2ptr().sumWX()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":148
 *     def sumWX(self):
 *         """sum(weights * xs)"""
 *         return self.d2ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 148, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 148, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":146
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs)"""
 *         return self.d2ptr().sumWX()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":151
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys)"""
 *         return self.d2ptr().sumWY()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5sumWY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_5sumWY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_5sumWY___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":153
 *     def sumWY(self):
 *         """sum(weights * ys)"""
 *         return self.d2ptr().sumWY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 153, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 153, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":151
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys)"""
 *         return self.d2ptr().sumWY()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumWY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":156
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * xs)"""
 *         return self.d2ptr().sumWX2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":158
 *     def sumWX2(self):
 *         """sum(weights * xs * xs)"""
 *         return self.d2ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 158, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 158, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":156
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * xs)"""
 *         return self.d2ptr().sumWX2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":161
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * ys)"""
 *         return self.d2ptr().sumWY2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6sumWY2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6sumWY2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_6sumWY2___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":163
 *     def sumWY2(self):
 *         """sum(weights * ys * ys)"""
 *         return self.d2ptr().sumWY2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 163, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 163, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":161
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * ys)"""
 *         return self.d2ptr().sumWY2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumWY2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":166
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights xs * ys)"""
 *         return self.d2ptr().sumWXY()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6sumWXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_6sumWXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_6sumWXY___get__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn2D.pyx":168
 *     def sumWXY(self):
 *         """sum(weights xs * ys)"""
 *         return self.d2ptr().sumWXY()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 168, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWXY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(6, 168, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":166
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights xs * ys)"""
 *         return self.d2ptr().sumWXY()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.sumWXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":171
 * 
 * 
 *     def __add__(Dbn2D self, Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) + deref(other.d2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_21__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_21__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn2D, 1, "self", 0))) __PYX_ERR(6, 171, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn2D, 1, "other", 0))) __PYX_ERR(6, 171, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_20__add__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_20__add__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  YODA::Dbn2D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Dbn2D.pyx":172
 * 
 *     def __add__(Dbn2D self, Dbn2D other):
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) + deref(other.d2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Dbn2D self, Dbn2D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 172, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(6, 172, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), new YODA::Dbn2D(((*__pyx_t_1) + (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":171
 * 
 * 
 *     def __add__(Dbn2D self, Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) + deref(other.d2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn2D.pyx":174
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) + deref(other.d2ptr())))
 * 
 *     def __sub__(Dbn2D self, Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) - deref(other.d2ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_23__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn2D_23__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn2D, 1, "self", 0))) __PYX_ERR(6, 174, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn2D, 1, "other", 0))) __PYX_ERR(6, 174, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn2D_22__sub__(((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn2D_22__sub__(struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn2D *__pyx_t_1;
  YODA::Dbn2D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Dbn2D.pyx":175
 * 
 *     def __sub__(Dbn2D self, Dbn2D other):
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) - deref(other.d2ptr())))             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(6, 175, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn2D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(6, 175, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), new YODA::Dbn2D(((*__pyx_t_1) - (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn2D.pyx":174
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) + deref(other.d2ptr())))
 * 
 *     def __sub__(Dbn2D self, Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn2D, new c.Dbn2D(deref(self.d2ptr()) - deref(other.d2ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":8
 *     """
 * 
 *     cdef c.Dbn3D* d3ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn3D*> self.ptr()
 * 
 */

static YODA::Dbn3D *__pyx_f_4yoda_4core_5Dbn3D_d3ptr(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  YODA::Dbn3D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("d3ptr", 0);

  /* "include/Dbn3D.pyx":9
 * 
 *     cdef c.Dbn3D* d3ptr(self) except NULL:
 *         return <c.Dbn3D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     # TODO: remove
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 9, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn3D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":8
 *     """
 * 
 *     cdef c.Dbn3D* d3ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn3D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.d3ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":12
 * 
 *     # TODO: remove
 *     cdef c.Dbn3D* _Dbn3D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn3D*> self.ptr()
 * 
 */

static YODA::Dbn3D *__pyx_f_4yoda_4core_5Dbn3D__Dbn3D(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  YODA::Dbn3D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Dbn3D", 0);

  /* "include/Dbn3D.pyx":13
 *     # TODO: remove
 *     cdef c.Dbn3D* _Dbn3D(self) except NULL:
 *         return <c.Dbn3D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 13, __pyx_L1_error)
  __pyx_r = ((YODA::Dbn3D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":12
 * 
 *     # TODO: remove
 *     cdef c.Dbn3D* _Dbn3D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Dbn3D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D._Dbn3D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":15
 *         return <c.Dbn3D*> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn3D *p = self.d3ptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_5Dbn3D_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_5Dbn3D_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_5Dbn3D___dealloc__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_5Dbn3D___dealloc__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  YODA::Dbn3D *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/Dbn3D.pyx":16
 * 
 *     def __dealloc__(self):
 *         cdef c.Dbn3D *p = self.d3ptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 16, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/Dbn3D.pyx":17
 *     def __dealloc__(self):
 *         cdef c.Dbn3D *p = self.d3ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/Dbn3D.pyx":18
 *         cdef c.Dbn3D *p = self.d3ptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 * 
 */
    delete __pyx_v_p;

    /* "include/Dbn3D.pyx":17
 *     def __dealloc__(self):
 *         cdef c.Dbn3D *p = self.d3ptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/Dbn3D.pyx":15
 *         return <c.Dbn3D*> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Dbn3D *p = self.d3ptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.Dbn3D.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/Dbn3D.pyx":21
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn3D())
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_5Dbn3D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_5Dbn3D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_2__init__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_5Dbn3D_2__init__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Dbn3D.pyx":22
 * 
 *     def __init__(self):
 *         cutil.set_owned_ptr(self, new c.Dbn3D())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), new YODA::Dbn3D()); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Dbn3D.pyx":21
 * 
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Dbn3D())
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Dbn3D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":24
 *         cutil.set_owned_ptr(self, new c.Dbn3D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_4__repr__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4__repr__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_v_mean = NULL;
  PyObject *__pyx_v_sd = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Dbn3D.pyx":25
 * 
 *     def __repr__(self):
 *         mean = self.mean if self.sumW > 0 else None             # <<<<<<<<<<<<<<
 *         sd = self.stdDev if self.sumW > 0 else None
 *         return 'Dbn3D(mean=%s, stddev=%s)' % (mean, sd)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(7, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_mean); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __Pyx_INCREF(Py_None);
    __pyx_t_1 = Py_None;
  }
  __pyx_v_mean = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Dbn3D.pyx":26
 *     def __repr__(self):
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None             # <<<<<<<<<<<<<<
 *         return 'Dbn3D(mean=%s, stddev=%s)' % (mean, sd)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(7, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_stdDev); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 26, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_INCREF(Py_None);
    __pyx_t_1 = Py_None;
  }
  __pyx_v_sd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Dbn3D.pyx":27
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 *         return 'Dbn3D(mean=%s, stddev=%s)' % (mean, sd)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_mean);
  __Pyx_GIVEREF(__pyx_v_mean);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_mean);
  __Pyx_INCREF(__pyx_v_sd);
  __Pyx_GIVEREF(__pyx_v_sd);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_sd);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_Dbn3D_mean_s_stddev_s, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":24
 *         cutil.set_owned_ptr(self, new c.Dbn3D())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         mean = self.mean if self.sumW > 0 else None
 *         sd = self.stdDev if self.sumW > 0 else None
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn3D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_mean);
  __Pyx_XDECREF(__pyx_v_sd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":30
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_6copy[] = "Dbn3D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_7copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6copy(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6copy(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Dbn3D.pyx":31
 * 
 *     def copy(self):
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr())))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 31, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn3D), new YODA::Dbn3D((*__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":30
 * 
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":34
 * 
 * 
 *     def fill(self, x, y, z, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (x, y, z, weight=1.0) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_9fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_8fill[] = "Dbn3D.fill(self, x, y, z, weight=1.0)\n\n        (x, y, z, weight=1.0) -> None\n\n        Fills the distribution with the given weight at given (x, y).\n\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_9fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_weight,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 3, 4, 1); __PYX_ERR(7, 34, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 3, 4, 2); __PYX_ERR(7, 34, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(7, 34, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
    __pyx_v_weight = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(7, 34, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_8fill(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_8fill(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  double __pyx_t_5;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Dbn3D.pyx":41
 * 
 *         """
 *         self.d3ptr().fill(x, y, z, weight)             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 41, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 41, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 41, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 41, __pyx_L1_error)
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 41, __pyx_L1_error)
  __pyx_t_1->fill(__pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5);

  /* "include/Dbn3D.pyx":34
 * 
 * 
 *     def fill(self, x, y, z, weight=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (x, y, z, weight=1.0) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":43
 *         self.d3ptr().fill(x, y, z, weight)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_11reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_10reset[] = "Dbn3D.reset(self)\n\n        () -> None\n\n        Reset the distribution counters to the unfilled state.";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_11reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_10reset(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_10reset(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Dbn3D.pyx":48
 * 
 *         Reset the distribution counters to the unfilled state."""
 *         self.d3ptr().reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 48, __pyx_L1_error)
  __pyx_t_1->reset();

  /* "include/Dbn3D.pyx":43
 *         self.d3ptr().fill(x, y, z, weight)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """
 *         () -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":51
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_12scaleW[] = "Dbn3D.scaleW(self, w)\n\n        (float) -> None\n\n        Scale the weights by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_13scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_12scaleW(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_12scaleW(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Dbn3D.pyx":57
 *         Scale the weights by the given factor.
 *         """
 *         self.d3ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def scaleX(self, x):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 57, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 57, __pyx_L1_error)
  __pyx_t_1->scaleW(__pyx_t_2);

  /* "include/Dbn3D.pyx":51
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":59
 *         self.d3ptr().scaleW(w)
 * 
 *     def scaleX(self, x):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_15scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_14scaleX[] = "Dbn3D.scaleX(self, x)\n\n        (float) -> None\n\n        Scale the x dimension by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_15scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_14scaleX(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_14scaleX(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Dbn3D.pyx":65
 *         Scale the x dimension by the given factor.
 *         """
 *         self.d3ptr().scaleX(x)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, y):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 65, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 65, __pyx_L1_error)
  __pyx_t_1->scaleX(__pyx_t_2);

  /* "include/Dbn3D.pyx":59
 *         self.d3ptr().scaleW(w)
 * 
 *     def scaleX(self, x):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":67
 *         self.d3ptr().scaleX(x)
 * 
 *     def scaleY(self, y):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_17scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_16scaleY[] = "Dbn3D.scaleY(self, y)\n\n        (float) -> None\n\n        Scale the y dimension by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_17scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_16scaleY(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_16scaleY(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Dbn3D.pyx":73
 *         Scale the y dimension by the given factor.
 *         """
 *         self.d3ptr().scaleY(y)             # <<<<<<<<<<<<<<
 * 
 *     def scaleZ(self, z):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 73, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 73, __pyx_L1_error)
  __pyx_t_1->scaleY(__pyx_t_2);

  /* "include/Dbn3D.pyx":67
 *         self.d3ptr().scaleX(x)
 * 
 *     def scaleY(self, y):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":75
 *         self.d3ptr().scaleY(y)
 * 
 *     def scaleZ(self, z):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_19scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_v_z); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_18scaleZ[] = "Dbn3D.scaleZ(self, z)\n\n        (float) -> None\n\n        Scale the z dimension by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_19scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleZ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_18scaleZ(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), ((PyObject *)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_18scaleZ(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleZ", 0);

  /* "include/Dbn3D.pyx":81
 *         Scale the z dimension by the given factor.
 *         """
 *         self.d3ptr().scaleZ(z)             # <<<<<<<<<<<<<<
 * 
 *     def scaleXYZ(self, x, y, z):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 81, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 81, __pyx_L1_error)
  __pyx_t_1->scaleZ(__pyx_t_2);

  /* "include/Dbn3D.pyx":75
 *         self.d3ptr().scaleY(y)
 * 
 *     def scaleZ(self, z):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.scaleZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":83
 *         self.d3ptr().scaleZ(z)
 * 
 *     def scaleXYZ(self, x, y, z):             # <<<<<<<<<<<<<<
 *         """
 *         (float, float, float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_21scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Dbn3D_20scaleXYZ[] = "Dbn3D.scaleXYZ(self, x, y, z)\n\n        (float, float, float) -> None\n\n        Scale the x, y and z dimensions by the given factors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_21scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXYZ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scaleXYZ", 1, 3, 3, 1); __PYX_ERR(7, 83, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scaleXYZ", 1, 3, 3, 2); __PYX_ERR(7, 83, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXYZ") < 0)) __PYX_ERR(7, 83, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXYZ", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(7, 83, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_20scaleXYZ(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_20scaleXYZ(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  __Pyx_RefNannySetupContext("scaleXYZ", 0);

  /* "include/Dbn3D.pyx":89
 *         Scale the x, y and z dimensions by the given factors.
 *         """
 *         self.d3ptr().scaleXYZ(x, y, z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 89, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 89, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 89, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(7, 89, __pyx_L1_error)
  __pyx_t_1->scaleXYZ(__pyx_t_2, __pyx_t_3, __pyx_t_4);

  /* "include/Dbn3D.pyx":83
 *         self.d3ptr().scaleZ(z)
 * 
 *     def scaleXYZ(self, x, y, z):             # <<<<<<<<<<<<<<
 *         """
 *         (float, float, float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Dbn3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":95
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         """Weighted mean of x"""
 *         return util.XYZ(self.d3ptr().xMean(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_4mean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_4mean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_4mean___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4mean___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":97
 *     def mean(self):
 *         """Weighted mean of x"""
 *         return util.XYZ(self.d3ptr().xMean(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().yMean(),
 *                         self.d3ptr().zMean())
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XYZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 97, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_4->xMean()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "include/Dbn3D.pyx":98
 *         """Weighted mean of x"""
 *         return util.XYZ(self.d3ptr().xMean(),
 *                         self.d3ptr().yMean(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().zMean())
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 98, __pyx_L1_error)
  __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4->yMean()); if (unlikely(!__pyx_t_5)) __PYX_ERR(7, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "include/Dbn3D.pyx":99
 *         return util.XYZ(self.d3ptr().xMean(),
 *                         self.d3ptr().yMean(),
 *                         self.d3ptr().zMean())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 99, __pyx_L1_error)
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_4->zMean()); if (unlikely(!__pyx_t_6)) __PYX_ERR(7, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(7, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":95
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         """Weighted mean of x"""
 *         return util.XYZ(self.d3ptr().xMean(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn3D.mean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":102
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         """Weighted variance of x"""
 *         return util.XYZ(self.d3ptr().xVariance(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_8variance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_8variance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_8variance___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_8variance___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":104
 *     def variance(self):
 *         """Weighted variance of x"""
 *         return util.XYZ(self.d3ptr().xVariance(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().yVariance(),
 *                         self.d3ptr().zVariance())
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XYZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 104, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_4->xVariance()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "include/Dbn3D.pyx":105
 *         """Weighted variance of x"""
 *         return util.XYZ(self.d3ptr().xVariance(),
 *                         self.d3ptr().yVariance(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().zVariance())
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 105, __pyx_L1_error)
  __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4->yVariance()); if (unlikely(!__pyx_t_5)) __PYX_ERR(7, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "include/Dbn3D.pyx":106
 *         return util.XYZ(self.d3ptr().xVariance(),
 *                         self.d3ptr().yVariance(),
 *                         self.d3ptr().zVariance())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 106, __pyx_L1_error)
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_4->zVariance()); if (unlikely(!__pyx_t_6)) __PYX_ERR(7, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(7, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":102
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         """Weighted variance of x"""
 *         return util.XYZ(self.d3ptr().xVariance(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn3D.variance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":109
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard deviation of x"""
 *         return util.XYZ(self.d3ptr().xStdDev(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6stdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6stdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6stdDev___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6stdDev___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":111
 *     def stdDev(self):
 *         """Weighted standard deviation of x"""
 *         return util.XYZ(self.d3ptr().xStdDev(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().yStdDev(),
 *                         self.d3ptr().zStdDev())
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XYZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 111, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_4->xStdDev()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "include/Dbn3D.pyx":112
 *         """Weighted standard deviation of x"""
 *         return util.XYZ(self.d3ptr().xStdDev(),
 *                         self.d3ptr().yStdDev(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().zStdDev())
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 112, __pyx_L1_error)
  __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4->yStdDev()); if (unlikely(!__pyx_t_5)) __PYX_ERR(7, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "include/Dbn3D.pyx":113
 *         return util.XYZ(self.d3ptr().xStdDev(),
 *                         self.d3ptr().yStdDev(),
 *                         self.d3ptr().zStdDev())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 113, __pyx_L1_error)
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_4->zStdDev()); if (unlikely(!__pyx_t_6)) __PYX_ERR(7, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(7, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":109
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard deviation of x"""
 *         return util.XYZ(self.d3ptr().xStdDev(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn3D.stdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":116
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard error on <x>"""
 *         return util.XYZ(self.d3ptr().xStdErr(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6stdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6stdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6stdErr___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6stdErr___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":118
 *     def stdErr(self):
 *         """Weighted standard error on <x>"""
 *         return util.XYZ(self.d3ptr().xStdErr(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().yStdErr(),
 *                         self.d3ptr().zStdErr())
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XYZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 118, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_4->xStdErr()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "include/Dbn3D.pyx":119
 *         """Weighted standard error on <x>"""
 *         return util.XYZ(self.d3ptr().xStdErr(),
 *                         self.d3ptr().yStdErr(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().zStdErr())
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 119, __pyx_L1_error)
  __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4->yStdErr()); if (unlikely(!__pyx_t_5)) __PYX_ERR(7, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "include/Dbn3D.pyx":120
 *         return util.XYZ(self.d3ptr().xStdErr(),
 *                         self.d3ptr().yStdErr(),
 *                         self.d3ptr().zStdErr())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 120, __pyx_L1_error)
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_4->zStdErr()); if (unlikely(!__pyx_t_6)) __PYX_ERR(7, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(7, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":116
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         """Weighted standard error on <x>"""
 *         return util.XYZ(self.d3ptr().xStdErr(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn3D.stdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":123
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XYZ(self.d3ptr().xRMS(),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_3rms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_3rms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_3rms___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_3rms___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Dbn3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":125
 *     def rms(self):
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XYZ(self.d3ptr().xRMS(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().yRMS(),
 *                         self.d3ptr().zRMS())
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XYZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 125, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_4->xRMS()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "include/Dbn3D.pyx":126
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XYZ(self.d3ptr().xRMS(),
 *                         self.d3ptr().yRMS(),             # <<<<<<<<<<<<<<
 *                         self.d3ptr().zRMS())
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 126, __pyx_L1_error)
  __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4->yRMS()); if (unlikely(!__pyx_t_5)) __PYX_ERR(7, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "include/Dbn3D.pyx":127
 *         return util.XYZ(self.d3ptr().xRMS(),
 *                         self.d3ptr().yRMS(),
 *                         self.d3ptr().zRMS())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(7, 127, __pyx_L1_error)
  __pyx_t_6 = PyFloat_FromDouble(__pyx_t_4->zRMS()); if (unlikely(!__pyx_t_6)) __PYX_ERR(7, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(7, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":123
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         """Weighted root mean squared (RMS) of x"""
 *         return util.XYZ(self.d3ptr().xRMS(),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Dbn3D.rms.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":131
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d3ptr().numEntries())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_10numEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_10numEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_10numEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_10numEntries___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":133
 *     def numEntries(self):
 *         """The number of entries"""
 *         return int(self.d3ptr().numEntries())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 133, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_unsigned_long(__pyx_t_1->numEntries()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":131
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """The number of entries"""
 *         return int(self.d3ptr().numEntries())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn3D.numEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":136
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d3ptr().effNumEntries()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_13effNumEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_13effNumEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_13effNumEntries___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":138
 *     def effNumEntries(self):
 *         """Effective number of entries (for weighted events)"""
 *         return self.d3ptr().effNumEntries()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 138, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->effNumEntries()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":136
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """Effective number of entries (for weighted events)"""
 *         return self.d3ptr().effNumEntries()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.effNumEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":142
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d3ptr().errW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_4errW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_4errW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_4errW___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4errW___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":144
 *     def errW(self):
 *         """Error on sumW"""
 *         return self.d3ptr().errW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 144, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->errW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(7, 144, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":142
 * 
 *     @property
 *     def errW(self):             # <<<<<<<<<<<<<<
 *         """Error on sumW"""
 *         return self.d3ptr().errW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn3D.errW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":147
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d3ptr().relErrW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_7relErrW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_7relErrW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_7relErrW___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_7relErrW___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":149
 *     def relErrW(self):
 *         """Relative error on sumW"""
 *         return self.d3ptr().relErrW()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 149, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErrW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(7, 149, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":147
 * 
 *     @property
 *     def relErrW(self):             # <<<<<<<<<<<<<<
 *         """Relative error on sumW"""
 *         return self.d3ptr().relErrW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn3D.relErrW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":153
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d3ptr().sumW()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_4sumW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_4sumW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_4sumW___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_4sumW___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":155
 *     def sumW(self):
 *         """sum(weights)"""
 *         return self.d3ptr().sumW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 155, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumW()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":153
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """sum(weights)"""
 *         return self.d3ptr().sumW()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":158
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d3ptr().sumW2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumW2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumW2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_5sumW2___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumW2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":160
 *     def sumW2(self):
 *         """sum(weights * weights)"""
 *         return self.d3ptr().sumW2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 160, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumW2()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":158
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * weights)"""
 *         return self.d3ptr().sumW2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumW2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":163
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs)"""
 *         return self.d3ptr().sumWX()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":165
 *     def sumWX(self):
 *         """sum(weights * xs)"""
 *         return self.d3ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 165, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWX()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":163
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs)"""
 *         return self.d3ptr().sumWX()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":168
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys)"""
 *         return self.d3ptr().sumWY()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumWY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumWY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_5sumWY___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":170
 *     def sumWY(self):
 *         """sum(weights * ys)"""
 *         return self.d3ptr().sumWY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 170, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":168
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys)"""
 *         return self.d3ptr().sumWY()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":173
 * 
 *     @property
 *     def sumWZ(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * zs)"""
 *         return self.d3ptr().sumWZ()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumWZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_5sumWZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_5sumWZ___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_5sumWZ___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":175
 *     def sumWZ(self):
 *         """sum(weights * zs)"""
 *         return self.d3ptr().sumWZ()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 175, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWZ()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":173
 * 
 *     @property
 *     def sumWZ(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * zs)"""
 *         return self.d3ptr().sumWZ()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":178
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * xs)"""
 *         return self.d3ptr().sumWX2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":180
 *     def sumWX2(self):
 *         """sum(weights * xs * xs)"""
 *         return self.d3ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 180, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWX2()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":178
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * xs)"""
 *         return self.d3ptr().sumWX2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":183
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * ys)"""
 *         return self.d3ptr().sumWY2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWY2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWY2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6sumWY2___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":185
 *     def sumWY2(self):
 *         """sum(weights * ys * ys)"""
 *         return self.d3ptr().sumWY2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 185, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWY2()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":183
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * ys)"""
 *         return self.d3ptr().sumWY2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWY2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":188
 * 
 *     @property
 *     def sumWZ2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * zs * zs)"""
 *         return self.d3ptr().sumWZ2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWZ2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWZ2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6sumWZ2___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWZ2___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":190
 *     def sumWZ2(self):
 *         """sum(weights * zs * zs)"""
 *         return self.d3ptr().sumWZ2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 190, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWZ2()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":188
 * 
 *     @property
 *     def sumWZ2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * zs * zs)"""
 *         return self.d3ptr().sumWZ2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWZ2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":193
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * ys)"""
 *         return self.d3ptr().sumWXY()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6sumWXY___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":195
 *     def sumWXY(self):
 *         """sum(weights * xs * ys)"""
 *         return self.d3ptr().sumWXY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 195, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWXY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":193
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * ys)"""
 *         return self.d3ptr().sumWXY()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":198
 * 
 *     @property
 *     def sumWXZ(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * zs)"""
 *         return self.d3ptr().sumWXZ()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWXZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWXZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6sumWXZ___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWXZ___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":200
 *     def sumWXZ(self):
 *         """sum(weights * xs * zs)"""
 *         return self.d3ptr().sumWXZ()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 200, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWXZ()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":198
 * 
 *     @property
 *     def sumWXZ(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * xs * zs)"""
 *         return self.d3ptr().sumWXZ()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWXZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":203
 * 
 *     @property
 *     def sumWYZ(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * zs)"""
 *         return self.d3ptr().sumWYZ()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWYZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_6sumWYZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_6sumWYZ___get__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_6sumWYZ___get__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Dbn3D.pyx":205
 *     def sumWYZ(self):
 *         """sum(weights * ys * zs)"""
 *         return self.d3ptr().sumWYZ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 205, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->sumWYZ()); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":203
 * 
 *     @property
 *     def sumWYZ(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * zs)"""
 *         return self.d3ptr().sumWYZ()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Dbn3D.sumWYZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":208
 * 
 * 
 *     def __add__(Dbn3D self, Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) + deref(other.d3ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_23__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_23__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn3D, 1, "self", 0))) __PYX_ERR(7, 208, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn3D, 1, "other", 0))) __PYX_ERR(7, 208, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_22__add__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_22__add__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  YODA::Dbn3D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Dbn3D.pyx":209
 * 
 *     def __add__(Dbn3D self, Dbn3D other):
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) + deref(other.d3ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Dbn3D self, Dbn3D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 209, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(7, 209, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn3D), new YODA::Dbn3D(((*__pyx_t_1) + (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":208
 * 
 * 
 *     def __add__(Dbn3D self, Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) + deref(other.d3ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn3D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Dbn3D.pyx":211
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) + deref(other.d3ptr())))
 * 
 *     def __sub__(Dbn3D self, Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) - deref(other.d3ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_25__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Dbn3D_25__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Dbn3D, 1, "self", 0))) __PYX_ERR(7, 211, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Dbn3D, 1, "other", 0))) __PYX_ERR(7, 211, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_5Dbn3D_24__sub__(((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Dbn3D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Dbn3D_24__sub__(struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Dbn3D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Dbn3D *__pyx_t_1;
  YODA::Dbn3D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Dbn3D.pyx":212
 * 
 *     def __sub__(Dbn3D self, Dbn3D other):
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) - deref(other.d3ptr())))             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_self->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(7, 212, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Dbn3D *)__pyx_v_other->__pyx_base.__pyx_vtab)->d3ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(7, 212, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn3D), new YODA::Dbn3D(((*__pyx_t_1) - (*__pyx_t_2)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Dbn3D.pyx":211
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) + deref(other.d3ptr())))
 * 
 *     def __sub__(Dbn3D self, Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Dbn3D, new c.Dbn3D(deref(self.d3ptr()) - deref(other.d3ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Dbn3D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":12
 *     """
 * 
 *     cdef inline c.Counter* cptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Counter*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE YODA::Counter *__pyx_f_4yoda_4core_7Counter_cptr(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  YODA::Counter *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("cptr", 0);

  /* "include/Counter.pyx":13
 * 
 *     cdef inline c.Counter* cptr(self) except NULL:
 *         return <c.Counter*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.Counter* _Counter(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 13, __pyx_L1_error)
  __pyx_r = ((YODA::Counter *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Counter.pyx":12
 *     """
 * 
 *     cdef inline c.Counter* cptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Counter*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter.cptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":15
 *         return <c.Counter*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Counter* _Counter(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Counter*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Counter *__pyx_f_4yoda_4core_7Counter__Counter(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  YODA::Counter *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Counter", 0);

  /* "include/Counter.pyx":16
 *     # TODO: remove
 *     cdef inline c.Counter* _Counter(self) except NULL:
 *         return <c.Counter*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 16, __pyx_L1_error)
  __pyx_r = ((YODA::Counter *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Counter.pyx":15
 *         return <c.Counter*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Counter* _Counter(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Counter*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter._Counter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":19
 * 
 * 
 *     def __init__(self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Counter(string(path), string(title)))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Counter_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_7Counter_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(8, 19, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(8, 19, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(8, 19, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 19, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Counter.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Counter___init__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Counter___init__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Counter *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Counter.pyx":20
 * 
 *     def __init__(self, char *path="", char *title=""):
 *         cutil.set_owned_ptr(self, new c.Counter(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(8, 20, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(8, 20, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Counter(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 20, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(8, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Counter.pyx":19
 * 
 * 
 *     def __init__(self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Counter(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Counter.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":23
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' sumw=%0.2g, err=%s>" % (self.__class__.__name__, self.path, self.val, self.err)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_2__repr__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_2__repr__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Counter.pyx":24
 * 
 *     def __repr__(self):
 *         return "<%s '%s' sumw=%0.2g, err=%s>" % (self.__class__.__name__, self.path, self.val, self.err)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_val); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_err); if (unlikely(!__pyx_t_4)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_s_s_sumw_0_2g_err_s, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(8, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":23
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' sumw=%0.2g, err=%s>" % (self.__class__.__name__, self.path, self.val, self.err)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Counter.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":27
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_5reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_4reset[] = "Counter.reset(self)\nNone -> None.\n        Reset the counter.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_5reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_4reset(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_4reset(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Counter.pyx":30
 *         """None -> None.
 *         Reset the counter."""
 *         self.cptr().reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 30, __pyx_L1_error)
  try {
    __pyx_t_1->reset();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 30, __pyx_L1_error)
  }

  /* "include/Counter.pyx":27
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the counter."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":33
 * 
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Couner.
 *         Clone this Counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_6clone[] = "Counter.clone(self)\nNone -> Couner.\n        Clone this Counter.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_6clone(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_6clone(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  YODA::Counter *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Counter.pyx":36
 *         """None -> Couner.
 *         Clone this Counter."""
 *         return cutil.new_owned_cls(Counter, self.cptr().newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 36, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 36, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Counter), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":33
 * 
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Couner.
 *         Clone this Counter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":39
 * 
 * 
 *     def fill(self, weight=1.0):             # <<<<<<<<<<<<<<
 *         """([w]) -> None.
 *         Fill with given optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_9fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_8fill[] = "Counter.fill(self, weight=1.0)\n([w]) -> None.\n        Fill with given optional weight.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_9fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_weight,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(8, 39, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_weight = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 39, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Counter.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_8fill(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_8fill(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Counter.pyx":42
 *         """([w]) -> None.
 *         Fill with given optional weight."""
 *         self.cptr().fill(weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 42, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(8, 42, __pyx_L1_error)
  try {
    __pyx_t_1->fill(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 42, __pyx_L1_error)
  }

  /* "include/Counter.pyx":39
 * 
 * 
 *     def fill(self, weight=1.0):             # <<<<<<<<<<<<<<
 *         """([w]) -> None.
 *         Fill with given optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":46
 * 
 *     #@property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """None -> int
 *         Number of times this counter was filled."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_11numEntries(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_10numEntries[] = "Counter.numEntries(self)\nNone -> int\n        Number of times this counter was filled.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_11numEntries(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numEntries (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_10numEntries(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_10numEntries(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  unsigned long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("numEntries", 0);

  /* "include/Counter.pyx":49
 *         """None -> int
 *         Number of times this counter was filled."""
 *         return int(self.cptr().numEntries())             # <<<<<<<<<<<<<<
 * 
 *     #@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 49, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 49, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(8, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":46
 * 
 *     #@property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """None -> int
 *         Number of times this counter was filled."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Counter.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":52
 * 
 *     #@property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """None -> float
 *         Effective number of times this counter was filled, computed from weights."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_13effNumEntries(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_12effNumEntries[] = "Counter.effNumEntries(self)\nNone -> float\n        Effective number of times this counter was filled, computed from weights.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_13effNumEntries(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("effNumEntries (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_12effNumEntries(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_12effNumEntries(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("effNumEntries", 0);

  /* "include/Counter.pyx":55
 *         """None -> float
 *         Effective number of times this counter was filled, computed from weights."""
 *         return self.cptr().effNumEntries()             # <<<<<<<<<<<<<<
 * 
 *     #@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 55, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->effNumEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 55, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":52
 * 
 *     #@property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """None -> float
 *         Effective number of times this counter was filled, computed from weights."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":58
 * 
 *     #@property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Sum of weights filled into this counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_15sumW(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_14sumW[] = "Counter.sumW(self)\n() -> float\n        Sum of weights filled into this counter.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_15sumW(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_14sumW(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_14sumW(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW", 0);

  /* "include/Counter.pyx":61
 *         """() -> float
 *         Sum of weights filled into this counter."""
 *         return self.cptr().sumW()             # <<<<<<<<<<<<<<
 * 
 *     #@property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 61, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 61, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":58
 * 
 *     #@property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Sum of weights filled into this counter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":64
 * 
 *     #@property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Sum of weights filled into this counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_17sumW2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_16sumW2[] = "Counter.sumW2(self)\n() -> float\n        Sum of weights filled into this counter.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_17sumW2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW2 (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_16sumW2(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_16sumW2(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW2", 0);

  /* "include/Counter.pyx":67
 *         """() -> float
 *         Sum of weights filled into this counter."""
 *         return self.cptr().sumW2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 67, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 67, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":64
 * 
 *     #@property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Sum of weights filled into this counter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":70
 * 
 *     @property
 *     def val(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Sum of weights filled into this counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_3val_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_3val_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_3val___get__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_3val___get__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Counter.pyx":73
 *         """() -> float
 *         Sum of weights filled into this counter."""
 *         return self.cptr().val()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 73, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->val();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 73, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":70
 * 
 *     @property
 *     def val(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Sum of weights filled into this counter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.val.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":76
 * 
 *     @property
 *     def err(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Binomial uncertainty on the sum of weights filled into this counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_3err_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_3err_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_3err___get__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_3err___get__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Counter.pyx":79
 *         """() -> float
 *         Binomial uncertainty on the sum of weights filled into this counter."""
 *         return self.cptr().err()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 79, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->err();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 79, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":76
 * 
 *     @property
 *     def err(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Binomial uncertainty on the sum of weights filled into this counter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.err.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":82
 * 
 *     @property
 *     def relErr(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Relative binomial uncertainty on the sum of weights filled into this counter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_6relErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_6relErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_6relErr___get__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_6relErr___get__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Counter.pyx":85
 *         """() -> float
 *         Relative binomial uncertainty on the sum of weights filled into this counter."""
 *         return self.cptr().relErr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 85, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 85, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(8, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":82
 * 
 *     @property
 *     def relErr(self):             # <<<<<<<<<<<<<<
 *         """() -> float
 *         Relative binomial uncertainty on the sum of weights filled into this counter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Counter.relErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":88
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """ (float) -> None.
 *         Rescale the weights in this counter by the factor w."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_19scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_18scaleW[] = "Counter.scaleW(self, w)\n (float) -> None.\n        Rescale the weights in this counter by the factor w.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_19scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_18scaleW(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_18scaleW(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Counter.pyx":91
 *         """ (float) -> None.
 *         Rescale the weights in this counter by the factor w."""
 *         self.cptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 91, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(8, 91, __pyx_L1_error)
  try {
    __pyx_t_1->scaleW(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 91, __pyx_L1_error)
  }

  /* "include/Counter.pyx":88
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """ (float) -> None.
 *         Rescale the weights in this counter by the factor w."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":94
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter1D.
 *         Convert this Counter to a Scatter1D, with x representing the value and error."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_21mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_20mkScatter[] = "Counter.mkScatter(self)\nNone -> Scatter1D.\n        Convert this Counter to a Scatter1D, with x representing the value and error.";
static PyObject *__pyx_pw_4yoda_4core_7Counter_21mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_20mkScatter(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_20mkScatter(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self) {
  YODA::Scatter1D __pyx_v_s1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  YODA::Scatter1D __pyx_t_2;
  YODA::Scatter1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Counter.pyx":97
 *         """None -> Scatter1D.
 *         Convert this Counter to a Scatter1D, with x representing the value and error."""
 *         cdef c.Scatter1D s1 = c.mkScatter_Counter(deref(self.cptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter1D, s1.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 97, __pyx_L1_error)
  try {
    __pyx_t_2 = YODA::mkScatter((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 97, __pyx_L1_error)
  }
  __pyx_v_s1 = __pyx_t_2;

  /* "include/Counter.pyx":98
 *         Convert this Counter to a Scatter1D, with x representing the value and error."""
 *         cdef c.Scatter1D s1 = c.mkScatter_Counter(deref(self.cptr()))
 *         return cutil.new_owned_cls(Scatter1D, s1.newclone())             # <<<<<<<<<<<<<<
 * 
 *     def divideBy(self, Counter other, efficiency=False):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_3 = __pyx_v_s1.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 98, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(8, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":94
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter1D.
 *         Convert this Counter to a Scatter1D, with x representing the value and error."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Counter.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":100
 *         return cutil.new_owned_cls(Scatter1D, s1.newclone())
 * 
 *     def divideBy(self, Counter other, efficiency=False):             # <<<<<<<<<<<<<<
 *         cdef c.Scatter1D s1
 *         if not efficiency:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_23divideBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Counter_22divideBy[] = "Counter.divideBy(self, Counter other, efficiency=False)";
static PyObject *__pyx_pw_4yoda_4core_7Counter_23divideBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other = 0;
  PyObject *__pyx_v_efficiency = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("divideBy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_other,&__pyx_n_s_efficiency,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_other)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_efficiency);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "divideBy") < 0)) __PYX_ERR(8, 100, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_other = ((struct __pyx_obj_4yoda_4core_Counter *)values[0]);
    __pyx_v_efficiency = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("divideBy", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(8, 100, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Counter.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Counter, 1, "other", 0))) __PYX_ERR(8, 100, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_22divideBy(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), __pyx_v_other, __pyx_v_efficiency);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_22divideBy(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other, PyObject *__pyx_v_efficiency) {
  YODA::Scatter1D __pyx_v_s1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  YODA::Counter *__pyx_t_3;
  YODA::Counter *__pyx_t_4;
  YODA::Scatter1D __pyx_t_5;
  YODA::Scatter1D *__pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("divideBy", 0);

  /* "include/Counter.pyx":102
 *     def divideBy(self, Counter other, efficiency=False):
 *         cdef c.Scatter1D s1
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s1 = c.Counter_div_Counter(deref(self.cptr()), deref(other.cptr()))
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_efficiency); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(8, 102, __pyx_L1_error)
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "include/Counter.pyx":103
 *         cdef c.Scatter1D s1
 *         if not efficiency:
 *             s1 = c.Counter_div_Counter(deref(self.cptr()), deref(other.cptr()))             # <<<<<<<<<<<<<<
 *         else:
 *             s1 = c.Counter_eff_Counter(deref(self.cptr()), deref(other.cptr()))
 */
    __pyx_t_3 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(8, 103, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_other); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(8, 103, __pyx_L1_error)
    try {
      __pyx_t_5 = divide((*__pyx_t_3), (*__pyx_t_4));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(8, 103, __pyx_L1_error)
    }
    __pyx_v_s1 = __pyx_t_5;

    /* "include/Counter.pyx":102
 *     def divideBy(self, Counter other, efficiency=False):
 *         cdef c.Scatter1D s1
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s1 = c.Counter_div_Counter(deref(self.cptr()), deref(other.cptr()))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "include/Counter.pyx":105
 *             s1 = c.Counter_div_Counter(deref(self.cptr()), deref(other.cptr()))
 *         else:
 *             s1 = c.Counter_eff_Counter(deref(self.cptr()), deref(other.cptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter1D, s1.newclone())
 * 
 */
  /*else*/ {
    __pyx_t_4 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(8, 105, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(8, 105, __pyx_L1_error)
    try {
      __pyx_t_5 = efficiency((*__pyx_t_4), (*__pyx_t_3));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(8, 105, __pyx_L1_error)
    }
    __pyx_v_s1 = __pyx_t_5;
  }
  __pyx_L3:;

  /* "include/Counter.pyx":106
 *         else:
 *             s1 = c.Counter_eff_Counter(deref(self.cptr()), deref(other.cptr()))
 *         return cutil.new_owned_cls(Scatter1D, s1.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_6 = __pyx_v_s1.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(8, 106, __pyx_L1_error)
  }
  __pyx_t_7 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter1D), __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(8, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_r = __pyx_t_7;
  __pyx_t_7 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":100
 *         return cutil.new_owned_cls(Scatter1D, s1.newclone())
 * 
 *     def divideBy(self, Counter other, efficiency=False):             # <<<<<<<<<<<<<<
 *         cdef c.Scatter1D s1
 *         if not efficiency:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Counter.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":111
 *     ## In-place special methods
 * 
 *     def __iadd__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         c.Counter_iadd_Counter(self.cptr(), other.cptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_25__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_25__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Counter, 1, "other", 0))) __PYX_ERR(8, 111, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_24__iadd__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_24__iadd__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  YODA::Counter *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/Counter.pyx":112
 * 
 *     def __iadd__(Counter self, Counter other):
 *         c.Counter_iadd_Counter(self.cptr(), other.cptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 112, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(8, 112, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/Counter.pyx":113
 *     def __iadd__(Counter self, Counter other):
 *         c.Counter_iadd_Counter(self.cptr(), other.cptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __isub__(Counter self, Counter other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Counter.pyx":111
 *     ## In-place special methods
 * 
 *     def __iadd__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         c.Counter_iadd_Counter(self.cptr(), other.cptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":115
 *         return self
 * 
 *     def __isub__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         c.Counter_isub_Counter(self.cptr(), other.cptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_27__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_27__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Counter, 1, "other", 0))) __PYX_ERR(8, 115, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_26__isub__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_26__isub__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Counter *__pyx_t_1;
  YODA::Counter *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/Counter.pyx":116
 * 
 *     def __isub__(Counter self, Counter other):
 *         c.Counter_isub_Counter(self.cptr(), other.cptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(8, 116, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(8, 116, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/Counter.pyx":117
 *     def __isub__(Counter self, Counter other):
 *         c.Counter_isub_Counter(self.cptr(), other.cptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Counter.pyx":115
 *         return self
 * 
 *     def __isub__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         c.Counter_isub_Counter(self.cptr(), other.cptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Counter.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":122
 *     ## Unbound special methods
 * 
 *     def __add__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_add_Counter(self.cptr(), other.cptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_29__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_29__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Counter, 1, "self", 0))) __PYX_ERR(8, 122, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Counter, 1, "other", 0))) __PYX_ERR(8, 122, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_28__add__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_28__add__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Counter *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Counter *__pyx_t_2;
  YODA::Counter *__pyx_t_3;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Counter.pyx":123
 * 
 *     def __add__(Counter self, Counter other):
 *         h = Counter()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Counter_add_Counter(self.cptr(), other.cptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Counter), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Counter.pyx":124
 *     def __add__(Counter self, Counter other):
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_add_Counter(self.cptr(), other.cptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(8, 124, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(8, 124, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_add(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Counter.pyx":125
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_add_Counter(self.cptr(), other.cptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Counter self, Counter other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Counter.pyx":122
 *     ## Unbound special methods
 * 
 *     def __add__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_add_Counter(self.cptr(), other.cptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Counter.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":127
 *         return h
 * 
 *     def __sub__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_sub_Counter(self.cptr(), other.cptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Counter_31__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_31__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Counter, 1, "self", 0))) __PYX_ERR(8, 127, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Counter, 1, "other", 0))) __PYX_ERR(8, 127, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_30__sub__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Counter_30__sub__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Counter *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Counter *__pyx_t_2;
  YODA::Counter *__pyx_t_3;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Counter.pyx":128
 * 
 *     def __sub__(Counter self, Counter other):
 *         h = Counter()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Counter_sub_Counter(self.cptr(), other.cptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Counter), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Counter.pyx":129
 *     def __sub__(Counter self, Counter other):
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_sub_Counter(self.cptr(), other.cptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(8, 129, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_7Counter_cptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(8, 129, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_sub(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Counter.pyx":130
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_sub_Counter(self.cptr(), other.cptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     def __div__(Counter self, Counter other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Counter.pyx":127
 *         return h
 * 
 *     def __sub__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         h = Counter()
 *         cutil.set_owned_ptr(h, c.Counter_sub_Counter(self.cptr(), other.cptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Counter.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Counter.pyx":132
 *         return h
 * 
 *     def __div__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

/* Python wrapper */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pw_4yoda_4core_7Counter_33__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Counter_33__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Counter, 1, "self", 0))) __PYX_ERR(8, 132, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Counter, 1, "other", 0))) __PYX_ERR(8, 132, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Counter_32__div__(((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Counter *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_7Counter_32__div__(struct __pyx_obj_4yoda_4core_Counter *__pyx_v_self, struct __pyx_obj_4yoda_4core_Counter *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "include/Counter.pyx":133
 * 
 *     def __div__(Counter self, Counter other):
 *         return self.divideBy(other)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_divideBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(8, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_other)); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(8, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_other));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_other));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_other));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Counter.pyx":132
 *         return h
 * 
 *     def __div__(Counter self, Counter other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Counter.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

/* "include/Bin.pyx":3
 * cdef class Bin(util.Base):
 * 
 *     cdef inline c.Bin* bptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Bin *__pyx_f_4yoda_4core_3Bin_bptr(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  YODA::Bin *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("bptr", 0);

  /* "include/Bin.pyx":4
 * 
 *     cdef inline c.Bin* bptr(self) except NULL:
 *         return <c.Bin*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 4, __pyx_L1_error)
  __pyx_r = ((YODA::Bin *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Bin.pyx":3
 * cdef class Bin(util.Base):
 * 
 *     cdef inline c.Bin* bptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin.bptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Bin.pyx":6
 *         return <c.Bin*> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Bin* p = self.bptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_3Bin_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_3Bin_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_3Bin___dealloc__(((struct __pyx_obj_4yoda_4core_Bin *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_3Bin___dealloc__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  YODA::Bin *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::Bin *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/Bin.pyx":7
 * 
 *     def __dealloc__(self):
 *         cdef c.Bin* p = self.bptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_3Bin_bptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 7, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/Bin.pyx":8
 *     def __dealloc__(self):
 *         cdef c.Bin* p = self.bptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/Bin.pyx":9
 *         cdef c.Bin* p = self.bptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 * 
 */
    delete __pyx_v_p;

    /* "include/Bin.pyx":8
 *     def __dealloc__(self):
 *         cdef c.Bin* p = self.bptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/Bin.pyx":6
 *         return <c.Bin*> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Bin* p = self.bptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.Bin.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/Bin.pyx":13
 * 
 *     @property
 *     def dim(self):             # <<<<<<<<<<<<<<
 *         """None -> int
 *         Dimension of the fill space (should match containing Histo/Profile)"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_3Bin_3dim_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_3Bin_3dim_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_3Bin_3dim___get__(((struct __pyx_obj_4yoda_4core_Bin *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_3Bin_3dim___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Bin *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Bin.pyx":16
 *         """None -> int
 *         Dimension of the fill space (should match containing Histo/Profile)"""
 *         return self.bptr().dim()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_3Bin_bptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 16, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->dim();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(9, 16, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(9, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Bin.pyx":13
 * 
 *     @property
 *     def dim(self):             # <<<<<<<<<<<<<<
 *         """None -> int
 *         Dimension of the fill space (should match containing Histo/Profile)"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin.dim.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Bin.pyx":20
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """
 *         The number of entries that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_3Bin_10numEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_3Bin_10numEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_3Bin_10numEntries___get__(((struct __pyx_obj_4yoda_4core_Bin *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_3Bin_10numEntries___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Bin *__pyx_t_1;
  unsigned long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Bin.pyx":24
 *         The number of entries that have filled the bin.
 *         """
 *         return self.bptr().numEntries()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_3Bin_bptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 24, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(9, 24, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(9, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Bin.pyx":20
 * 
 *     @property
 *     def numEntries(self):             # <<<<<<<<<<<<<<
 *         """
 *         The number of entries that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin.numEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Bin.pyx":27
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """
 *         The effective number of entries in the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_3Bin_13effNumEntries_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_3Bin_13effNumEntries_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_3Bin_13effNumEntries___get__(((struct __pyx_obj_4yoda_4core_Bin *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_3Bin_13effNumEntries___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Bin *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Bin.pyx":33
 *         s.effNumEntries <==> (s.sumW ** 2) / s.sumW2
 *         """
 *         return self.bptr().effNumEntries()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_3Bin_bptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 33, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->effNumEntries();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(9, 33, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(9, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Bin.pyx":27
 * 
 *     @property
 *     def effNumEntries(self):             # <<<<<<<<<<<<<<
 *         """
 *         The effective number of entries in the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin.effNumEntries.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Bin.pyx":37
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights: sum(weights).
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_3Bin_4sumW_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_3Bin_4sumW_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_3Bin_4sumW___get__(((struct __pyx_obj_4yoda_4core_Bin *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_3Bin_4sumW___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Bin *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Bin.pyx":41
 *         The sum of weights: sum(weights).
 *         """
 *         return self.bptr().sumW()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_3Bin_bptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 41, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(9, 41, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(9, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Bin.pyx":37
 * 
 *     @property
 *     def sumW(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights: sum(weights).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin.sumW.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Bin.pyx":44
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-squared: sum(weights * weights)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_3Bin_5sumW2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_3Bin_5sumW2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_3Bin_5sumW2___get__(((struct __pyx_obj_4yoda_4core_Bin *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_3Bin_5sumW2___get__(struct __pyx_obj_4yoda_4core_Bin *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Bin *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Bin.pyx":48
 *         The sum of weights-squared: sum(weights * weights)
 *         """
 *         return self.bptr().sumW2()             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_3Bin_bptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(9, 48, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumW2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(9, 48, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(9, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Bin.pyx":44
 * 
 *     @property
 *     def sumW2(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-squared: sum(weights * weights)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin.sumW2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":16
 *     """
 * 
 *     cdef inline c.Bin1D_Dbn1D* b1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn1D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("b1ptr", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":17
 * 
 *     cdef inline c.Bin1D_Dbn1D* b1ptr(self) except NULL:
 *         return <c.Bin1D_Dbn1D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn1D* _Bin1D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 17, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin1D_Dbn1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":16
 *     """
 * 
 *     cdef inline c.Bin1D_Dbn1D* b1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn1D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.b1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":19
 *         return <c.Bin1D_Dbn1D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn1D* _Bin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn1D*> self.ptr()
 * 
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_f_4yoda_4core_11Bin1D_Dbn1D__Bin1D(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Bin1D", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":20
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn1D* _Bin1D(self) except NULL:
 *         return <c.Bin1D_Dbn1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 20, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin1D_Dbn1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":19
 *         return <c.Bin1D_Dbn1D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn1D* _Bin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D._Bin1D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":23
 * 
 * 
 *     def __init__(self, xlow, xhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn1D(pair[double, double](xlow, xhigh)))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(10, 23, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(10, 23, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(10, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D___init__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_11Bin1D_Dbn1D___init__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  std::pair<double,double>  __pyx_t_3;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":24
 * 
 *     def __init__(self, xlow, xhigh):
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn1D(pair[double, double](xlow, xhigh)))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(10, 24, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(10, 24, __pyx_L1_error)
  try {
    __pyx_t_3 = std::pair<double,double> (__pyx_t_1, __pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(10, 24, __pyx_L1_error)
  }
  try {
    __pyx_t_4 = new __pyx_t_4yoda_12declarations_Bin1D_Dbn1D(__pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 24, __pyx_L1_error)
  }
  __pyx_t_5 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(10, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "include/generated/Bin1D_Dbn1D.pyx":23
 * 
 * 
 *     def __init__(self, xlow, xhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn1D(pair[double, double](xlow, xhigh)))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn1D(pair[double, double](xlow, xhigh)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_2__repr__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_2__repr__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":27
 * 
 *     def __repr__(self):
 *         return '<%s x=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(10, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(10, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_s_x_g_g, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn1D(pair[double, double](xlow, xhigh)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":46
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """The lower and upper edges."""
 *         return (self.xMin, self.xMax)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xEdges___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":48
 *     def xEdges(self):
 *         """The lower and upper edges."""
 *         return (self.xMin, self.xMax)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_2)) __PYX_ERR(10, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":46
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """The lower and upper edges."""
 *         return (self.xMin, self.xMax)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":51
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The lower bin edge."""
 *         return self.b1ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":53
 *     def xMin(self):
 *         """The lower bin edge."""
 *         return self.b1ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 53, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 53, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":51
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The lower bin edge."""
 *         return self.b1ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":56
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The upper bin edge."""
 *         return self.b1ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":58
 *     def xMax(self):
 *         """The upper bin edge."""
 *         return self.b1ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 58, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 58, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":56
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The upper bin edge."""
 *         return self.b1ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":61
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """The midpoint of the bin."""
 *         return self.b1ptr().xMid()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMid___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":63
 *     def xMid(self):
 *         """The midpoint of the bin."""
 *         return self.b1ptr().xMid()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 63, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMid();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 63, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":61
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """The midpoint of the bin."""
 *         return self.b1ptr().xMid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":66
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """The width of the bin."""
 *         return self.b1ptr().xWidth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xWidth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xWidth_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xWidth___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":68
 *     def xWidth(self):
 *         """The width of the bin."""
 *         return self.b1ptr().xWidth()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 68, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xWidth();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 68, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":66
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """The width of the bin."""
 *         return self.b1ptr().xWidth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xWidth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":71
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         """The mean of the x-values that have filled the bin."""
 *         return self.b1ptr().xMean()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5xMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5xMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_5xMean___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":73
 *     def xMean(self):
 *         """The mean of the x-values that have filled the bin."""
 *         return self.b1ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 73, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 73, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":71
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         """The mean of the x-values that have filled the bin."""
 *         return self.b1ptr().xMean()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":76
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """
 *         The focus of the bin. If the bin has been filled, then this
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xFocus___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":82
 *         then the focus is the midpoint of the bin.
 *         """
 *         return self.b1ptr().xFocus()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 82, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xFocus();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 82, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":76
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """
 *         The focus of the bin. If the bin has been filled, then this
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":85
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         """
 *         The variance of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_9xVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_9xVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_9xVariance___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":89
 *         The variance of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 89, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 89, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":85
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         """
 *         The variance of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":92
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard deviation of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7xStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7xStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_7xStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":96
 *         The standard deviation of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 96, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 96, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":92
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard deviation of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":99
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard error of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7xStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7xStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_7xStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":103
 *         The standard error of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 103, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 103, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":99
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard error of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":106
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         """
 *         The root-mean-square of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xRMS___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":110
 *         The root-mean-square of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xRMS()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 110, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 110, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":106
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         """
 *         The root-mean-square of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.xRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":115
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x: sum(weights * x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":119
 *         The sum of weights-times-x: sum(weights * x)
 *         """
 *         return self.b1ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 119, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 119, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":115
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x: sum(weights * x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":122
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x-squared: sum(weights * x * x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":126
 *         The sum of weights-times-x-squared: sum(weights * x * x)
 *         """
 *         return self.b1ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 *     def merge(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 126, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 126, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(10, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":122
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x-squared: sum(weights * x * x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":128
 *         return self.b1ptr().sumWX2()
 * 
 *     def merge(Bin1D_Dbn1D self, Bin1D_Dbn1D other):             # <<<<<<<<<<<<<<
 *         """
 *         merge(other) -> Bin1D_Dbn1D. Merge this bin with another of the
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5merge(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_4yoda_4core_11Bin1D_Dbn1D_4merge[] = "Bin1D_Dbn1D.merge(self, Bin1D_Dbn1D other)\n\n        merge(other) -> Bin1D_Dbn1D. Merge this bin with another of the\n        same type. Only directly adjacent bins, i.e. those sharing a\n        common edge, can be merged.\n        ";
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5merge(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("merge (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin1D_Dbn1D, 1, "other", 0))) __PYX_ERR(10, 128, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4merge(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_4merge(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("merge", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":134
 *         common edge, can be merged.
 *         """
 *         self.b1ptr().merge(deref(other.b1ptr()))             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 134, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(10, 134, __pyx_L1_error)
  try {
    __pyx_t_1->merge((*__pyx_t_2));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 134, __pyx_L1_error)
  }

  /* "include/generated/Bin1D_Dbn1D.pyx":135
 *         """
 *         self.b1ptr().merge(deref(other.b1ptr()))
 *         return self             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":128
 *         return self.b1ptr().sumWX2()
 * 
 *     def merge(Bin1D_Dbn1D self, Bin1D_Dbn1D other):             # <<<<<<<<<<<<<<
 *         """
 *         merge(other) -> Bin1D_Dbn1D. Merge this bin with another of the
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.merge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":139
 * 
 * 
 *     def __add__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin1D_Dbn1D, 1, "self", 0))) __PYX_ERR(10, 139, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin1D_Dbn1D, 1, "other", 0))) __PYX_ERR(10, 139, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6__add__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_6__add__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":140
 * 
 *     def __add__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin1D_Dbn1D.pyx":141
 *     def __add__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 141, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(10, 141, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin1D_Dbn1D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 141, __pyx_L1_error)
  }

  /* "include/generated/Bin1D_Dbn1D.pyx":140
 * 
 *     def __add__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin1D_Dbn1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(10, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":139
 * 
 * 
 *     def __add__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn1D.pyx":143
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 *     def __sub__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin1D_Dbn1D, 1, "self", 0))) __PYX_ERR(10, 143, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin1D_Dbn1D, 1, "other", 0))) __PYX_ERR(10, 143, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn1D_8__sub__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn1D_8__sub__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/generated/Bin1D_Dbn1D.pyx":144
 * 
 *     def __sub__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin1D_Dbn1D.pyx":145
 *     def __sub__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) - deref(other.b1ptr())))             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(10, 145, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(10, 145, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin1D_Dbn1D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(10, 145, __pyx_L1_error)
  }

  /* "include/generated/Bin1D_Dbn1D.pyx":144
 * 
 *     def __sub__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin1D_Dbn1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(10, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn1D.pyx":143
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 *     def __sub__(Bin1D_Dbn1D self, Bin1D_Dbn1D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn1D,
 *                                    new c.Bin1D_Dbn1D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn1D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":16
 *     """
 * 
 *     cdef inline c.Bin1D_Dbn2D* b1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn2D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("b1ptr", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":17
 * 
 *     cdef inline c.Bin1D_Dbn2D* b1ptr(self) except NULL:
 *         return <c.Bin1D_Dbn2D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn2D* _Bin1D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 17, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin1D_Dbn2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":16
 *     """
 * 
 *     cdef inline c.Bin1D_Dbn2D* b1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn2D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.b1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":19
 *         return <c.Bin1D_Dbn2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn2D* _Bin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn2D*> self.ptr()
 * 
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_f_4yoda_4core_11Bin1D_Dbn2D__Bin1D(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Bin1D", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":20
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn2D* _Bin1D(self) except NULL:
 *         return <c.Bin1D_Dbn2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 20, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin1D_Dbn2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":19
 *         return <c.Bin1D_Dbn2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin1D_Dbn2D* _Bin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin1D_Dbn2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D._Bin1D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":23
 * 
 * 
 *     def __init__(self, xlow, xhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn2D(pair[double, double](xlow, xhigh)))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(11, 23, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(11, 23, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(11, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D___init__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_11Bin1D_Dbn2D___init__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  std::pair<double,double>  __pyx_t_3;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":24
 * 
 *     def __init__(self, xlow, xhigh):
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn2D(pair[double, double](xlow, xhigh)))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(11, 24, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(11, 24, __pyx_L1_error)
  try {
    __pyx_t_3 = std::pair<double,double> (__pyx_t_1, __pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(11, 24, __pyx_L1_error)
  }
  try {
    __pyx_t_4 = new __pyx_t_4yoda_12declarations_Bin1D_Dbn2D(__pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 24, __pyx_L1_error)
  }
  __pyx_t_5 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(11, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "include/generated/Bin1D_Dbn2D.pyx":23
 * 
 * 
 *     def __init__(self, xlow, xhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn2D(pair[double, double](xlow, xhigh)))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn2D(pair[double, double](xlow, xhigh)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_2__repr__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_2__repr__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":27
 * 
 *     def __repr__(self):
 *         return '<%s x=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(11, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_s_x_g_g, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Bin1D_Dbn2D(pair[double, double](xlow, xhigh)))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":46
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """The lower and upper edges."""
 *         return (self.xMin, self.xMax)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xEdges___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":48
 *     def xEdges(self):
 *         """The lower and upper edges."""
 *         return (self.xMin, self.xMax)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_2)) __PYX_ERR(11, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":46
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """The lower and upper edges."""
 *         return (self.xMin, self.xMax)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":51
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The lower bin edge."""
 *         return self.b1ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":53
 *     def xMin(self):
 *         """The lower bin edge."""
 *         return self.b1ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 53, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 53, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":51
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The lower bin edge."""
 *         return self.b1ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":56
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The upper bin edge."""
 *         return self.b1ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":58
 *     def xMax(self):
 *         """The upper bin edge."""
 *         return self.b1ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 58, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 58, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":56
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The upper bin edge."""
 *         return self.b1ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":61
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """The midpoint of the bin."""
 *         return self.b1ptr().xMid()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMid___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":63
 *     def xMid(self):
 *         """The midpoint of the bin."""
 *         return self.b1ptr().xMid()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 63, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMid();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 63, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":61
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """The midpoint of the bin."""
 *         return self.b1ptr().xMid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":66
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """The width of the bin."""
 *         return self.b1ptr().xWidth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xWidth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xWidth_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xWidth___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":68
 *     def xWidth(self):
 *         """The width of the bin."""
 *         return self.b1ptr().xWidth()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 68, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xWidth();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 68, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":66
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """The width of the bin."""
 *         return self.b1ptr().xWidth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xWidth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":71
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         """The mean of the x-values that have filled the bin."""
 *         return self.b1ptr().xMean()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5xMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5xMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_5xMean___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":73
 *     def xMean(self):
 *         """The mean of the x-values that have filled the bin."""
 *         return self.b1ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 73, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 73, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":71
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         """The mean of the x-values that have filled the bin."""
 *         return self.b1ptr().xMean()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":76
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """
 *         The focus of the bin. If the bin has been filled, then this
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xFocus___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":82
 *         then the focus is the midpoint of the bin.
 *         """
 *         return self.b1ptr().xFocus()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 82, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xFocus();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 82, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":76
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """
 *         The focus of the bin. If the bin has been filled, then this
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":85
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         """
 *         The variance of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_9xVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_9xVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_9xVariance___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":89
 *         The variance of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 89, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 89, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":85
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         """
 *         The variance of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":92
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard deviation of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7xStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7xStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_7xStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":96
 *         The standard deviation of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 96, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 96, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":92
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard deviation of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":99
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard error of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7xStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7xStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_7xStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":103
 *         The standard error of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 103, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 103, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":99
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         The standard error of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":106
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         """
 *         The root-mean-square of the x-values that have filled the bin.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xRMS___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":110
 *         The root-mean-square of the x-values that have filled the bin.
 *         """
 *         return self.b1ptr().xRMS()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 110, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 110, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":106
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         """
 *         The root-mean-square of the x-values that have filled the bin.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.xRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":115
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x: sum(weights * x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":119
 *         The sum of weights-times-x: sum(weights * x)
 *         """
 *         return self.b1ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 119, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 119, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":115
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x: sum(weights * x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":122
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x-squared: sum(weights * x * x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":126
 *         The sum of weights-times-x-squared: sum(weights * x * x)
 *         """
 *         return self.b1ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 *     def merge(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 126, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 126, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(11, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":122
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         """
 *         The sum of weights-times-x-squared: sum(weights * x * x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":128
 *         return self.b1ptr().sumWX2()
 * 
 *     def merge(Bin1D_Dbn2D self, Bin1D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         """
 *         merge(other) -> Bin1D_Dbn2D. Merge this bin with another of the
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5merge(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_4yoda_4core_11Bin1D_Dbn2D_4merge[] = "Bin1D_Dbn2D.merge(self, Bin1D_Dbn2D other)\n\n        merge(other) -> Bin1D_Dbn2D. Merge this bin with another of the\n        same type. Only directly adjacent bins, i.e. those sharing a\n        common edge, can be merged.\n        ";
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5merge(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("merge (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin1D_Dbn2D, 1, "other", 0))) __PYX_ERR(11, 128, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4merge(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_4merge(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_2;
  __Pyx_RefNannySetupContext("merge", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":134
 *         common edge, can be merged.
 *         """
 *         self.b1ptr().merge(deref(other.b1ptr()))             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 134, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(11, 134, __pyx_L1_error)
  try {
    __pyx_t_1->merge((*__pyx_t_2));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 134, __pyx_L1_error)
  }

  /* "include/generated/Bin1D_Dbn2D.pyx":135
 *         """
 *         self.b1ptr().merge(deref(other.b1ptr()))
 *         return self             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":128
 *         return self.b1ptr().sumWX2()
 * 
 *     def merge(Bin1D_Dbn2D self, Bin1D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         """
 *         merge(other) -> Bin1D_Dbn2D. Merge this bin with another of the
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.merge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":139
 * 
 * 
 *     def __add__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin1D_Dbn2D, 1, "self", 0))) __PYX_ERR(11, 139, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin1D_Dbn2D, 1, "other", 0))) __PYX_ERR(11, 139, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6__add__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_6__add__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":140
 * 
 *     def __add__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin1D_Dbn2D.pyx":141
 *     def __add__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 141, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(11, 141, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin1D_Dbn2D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 141, __pyx_L1_error)
  }

  /* "include/generated/Bin1D_Dbn2D.pyx":140
 * 
 *     def __add__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin1D_Dbn2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":139
 * 
 * 
 *     def __add__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin1D_Dbn2D.pyx":143
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 *     def __sub__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin1D_Dbn2D, 1, "self", 0))) __PYX_ERR(11, 143, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin1D_Dbn2D, 1, "other", 0))) __PYX_ERR(11, 143, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin1D_Dbn2D_8__sub__(((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin1D_Dbn2D_8__sub__(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin1D_Dbn2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/generated/Bin1D_Dbn2D.pyx":144
 * 
 *     def __sub__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin1D_Dbn2D.pyx":145
 *     def __sub__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) - deref(other.b1ptr())))             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(11, 145, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(11, 145, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin1D_Dbn2D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(11, 145, __pyx_L1_error)
  }

  /* "include/generated/Bin1D_Dbn2D.pyx":144
 * 
 *     def __sub__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,             # <<<<<<<<<<<<<<
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin1D_Dbn2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(11, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin1D_Dbn2D.pyx":143
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) + deref(other.b1ptr())))
 * 
 *     def __sub__(Bin1D_Dbn2D self, Bin1D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Bin1D_Dbn2D,
 *                                    new c.Bin1D_Dbn2D(deref(self.b1ptr()) - deref(other.b1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin1D_Dbn2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":3
 * cdef class HistoBin1D(Bin1D_Dbn1D):
 * 
 *     cdef inline c.HistoBin1D* hb1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin1D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE YODA::HistoBin1D *__pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  YODA::HistoBin1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("hb1ptr", 0);

  /* "include/HistoBin1D.pyx":4
 * 
 *     cdef inline c.HistoBin1D* hb1ptr(self) except NULL:
 *         return <c.HistoBin1D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.HistoBin1D* _HistoBin1D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 4, __pyx_L1_error)
  __pyx_r = ((YODA::HistoBin1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":3
 * cdef class HistoBin1D(Bin1D_Dbn1D):
 * 
 *     cdef inline c.HistoBin1D* hb1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin1D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin1D.hb1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":6
 *         return <c.HistoBin1D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.HistoBin1D* _HistoBin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin1D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::HistoBin1D *__pyx_f_4yoda_4core_10HistoBin1D__HistoBin1D(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  YODA::HistoBin1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_HistoBin1D", 0);

  /* "include/HistoBin1D.pyx":7
 *     # TODO: remove
 *     cdef inline c.HistoBin1D* _HistoBin1D(self) except NULL:
 *         return <c.HistoBin1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 7, __pyx_L1_error)
  __pyx_r = ((YODA::HistoBin1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":6
 *         return <c.HistoBin1D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.HistoBin1D* _HistoBin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin1D._HistoBin1D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":10
 * 
 * 
 *     def __init__(self, double a, double b):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.HistoBin1D(a, b))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_10HistoBin1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_10HistoBin1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(12, 10, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(12, 10, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) __PYX_ERR(12, 10, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(12, 10, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(12, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D___init__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self), __pyx_v_a, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_10HistoBin1D___init__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self, double __pyx_v_a, double __pyx_v_b) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/HistoBin1D.pyx":11
 * 
 *     def __init__(self, double a, double b):
 *         cutil.set_owned_ptr(self, new c.HistoBin1D(a, b))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = new YODA::HistoBin1D(__pyx_v_a, __pyx_v_b);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 11, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(12, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/HistoBin1D.pyx":10
 * 
 * 
 *     def __init__(self, double a, double b):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.HistoBin1D(a, b))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":30
 * 
 *     @property
 *     def area(self):             # <<<<<<<<<<<<<<
 *         """
 *         b.area <==> b.sumW
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_4area_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_4area_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_4area___get__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_4area___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin1D.pyx":37
 *         independent of width.
 *         """
 *         return self.hb1ptr().area()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 37, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->area();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 37, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(12, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":30
 * 
 *     @property
 *     def area(self):             # <<<<<<<<<<<<<<
 *         """
 *         b.area <==> b.sumW
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.area.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":40
 * 
 *     @property
 *     def height(self):             # <<<<<<<<<<<<<<
 *         """
 *         b.height <==> b.area / b.width
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_6height___get__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_6height___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin1D.pyx":47
 *         width.
 *         """
 *         return self.hb1ptr().height()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 47, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->height();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 47, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(12, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":40
 * 
 *     @property
 *     def height(self):             # <<<<<<<<<<<<<<
 *         """
 *         b.height <==> b.area / b.width
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":50
 * 
 *     @property
 *     def areaErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         Error computed using binomial statistics on squared sum of bin
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_7areaErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_7areaErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_7areaErr___get__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_7areaErr___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin1D.pyx":55
 *         weights, i.e. s.areaErr = sqrt(s.sumW2)
 *         """
 *         return self.hb1ptr().areaErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 55, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->areaErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 55, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(12, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":50
 * 
 *     @property
 *     def areaErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         Error computed using binomial statistics on squared sum of bin
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.areaErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":58
 * 
 *     @property
 *     def heightErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         Height error - scales the s.areaError by the reciprocal of the
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_9heightErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_9heightErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_9heightErr___get__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_9heightErr___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin1D.pyx":63
 *         bin width.
 *         """
 *         return self.hb1ptr().heightErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 63, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->heightErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 63, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(12, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":58
 * 
 *     @property
 *     def heightErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         Height error - scales the s.areaError by the reciprocal of the
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.heightErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":66
 * 
 *     @property
 *     def relErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         Relative error - same for either area or height interpretations.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_6relErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_6relErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_6relErr___get__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_6relErr___get__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin1D.pyx":70
 *         Relative error - same for either area or height interpretations.
 *         """
 *         return self.hb1ptr().relErr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 70, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 70, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(12, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":66
 * 
 *     @property
 *     def relErr(self):             # <<<<<<<<<<<<<<
 *         """
 *         Relative error - same for either area or height interpretations.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.relErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":74
 * 
 * 
 *     def __iadd__(HistoBin1D self, HistoBin1D other):             # <<<<<<<<<<<<<<
 *         c.HistoBin1D_iadd_HistoBin1D(self.hb1ptr(), other.hb1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_3__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_3__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_HistoBin1D, 1, "other", 0))) __PYX_ERR(12, 74, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_2__iadd__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_2__iadd__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  YODA::HistoBin1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/HistoBin1D.pyx":75
 * 
 *     def __iadd__(HistoBin1D self, HistoBin1D other):
 *         c.HistoBin1D_iadd_HistoBin1D(self.hb1ptr(), other.hb1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 75, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(12, 75, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/HistoBin1D.pyx":76
 *     def __iadd__(HistoBin1D self, HistoBin1D other):
 *         c.HistoBin1D_iadd_HistoBin1D(self.hb1ptr(), other.hb1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __isub__(HistoBin1D self, HistoBin1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":74
 * 
 * 
 *     def __iadd__(HistoBin1D self, HistoBin1D other):             # <<<<<<<<<<<<<<
 *         c.HistoBin1D_iadd_HistoBin1D(self.hb1ptr(), other.hb1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin1D.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":78
 *         return self
 * 
 *     def __isub__(HistoBin1D self, HistoBin1D other):             # <<<<<<<<<<<<<<
 *         c.HistoBin1D_isub_HistoBin1D(self.hb1ptr(), other.hb1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_5__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_5__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_HistoBin1D, 1, "other", 0))) __PYX_ERR(12, 78, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_4__isub__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_4__isub__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  YODA::HistoBin1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/HistoBin1D.pyx":79
 * 
 *     def __isub__(HistoBin1D self, HistoBin1D other):
 *         c.HistoBin1D_isub_HistoBin1D(self.hb1ptr(), other.hb1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 79, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(12, 79, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/HistoBin1D.pyx":80
 *     def __isub__(HistoBin1D self, HistoBin1D other):
 *         c.HistoBin1D_isub_HistoBin1D(self.hb1ptr(), other.hb1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __add__(HistoBin1D a, HistoBin1D b):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":78
 *         return self
 * 
 *     def __isub__(HistoBin1D self, HistoBin1D other):             # <<<<<<<<<<<<<<
 *         c.HistoBin1D_isub_HistoBin1D(self.hb1ptr(), other.hb1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin1D.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":82
 *         return self
 * 
 *     def __add__(HistoBin1D a, HistoBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin1D,
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_7__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_7__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_HistoBin1D, 1, "a", 0))) __PYX_ERR(12, 82, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_HistoBin1D, 1, "b", 0))) __PYX_ERR(12, 82, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_6__add__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_6__add__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  YODA::HistoBin1D *__pyx_t_2;
  YODA::HistoBin1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/HistoBin1D.pyx":83
 * 
 *     def __add__(HistoBin1D a, HistoBin1D b):
 *         return cutil.new_owned_cls(HistoBin1D,             # <<<<<<<<<<<<<<
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/HistoBin1D.pyx":84
 *     def __add__(HistoBin1D a, HistoBin1D b):
 *         return cutil.new_owned_cls(HistoBin1D,
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(HistoBin1D a, HistoBin1D b):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 84, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(12, 84, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::HistoBin1D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 84, __pyx_L1_error)
  }

  /* "include/HistoBin1D.pyx":83
 * 
 *     def __add__(HistoBin1D a, HistoBin1D b):
 *         return cutil.new_owned_cls(HistoBin1D,             # <<<<<<<<<<<<<<
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))
 * 
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(12, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":82
 *         return self
 * 
 *     def __add__(HistoBin1D a, HistoBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin1D,
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin1D.pyx":86
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))
 * 
 *     def __sub__(HistoBin1D a, HistoBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin1D,
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) - deref(b.hb1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_9__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin1D_9__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_HistoBin1D, 1, "a", 0))) __PYX_ERR(12, 86, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_HistoBin1D, 1, "b", 0))) __PYX_ERR(12, 86, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin1D_8__sub__(((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_HistoBin1D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin1D_8__sub__(struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin1D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin1D *__pyx_t_1;
  YODA::HistoBin1D *__pyx_t_2;
  YODA::HistoBin1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/HistoBin1D.pyx":87
 * 
 *     def __sub__(HistoBin1D a, HistoBin1D b):
 *         return cutil.new_owned_cls(HistoBin1D,             # <<<<<<<<<<<<<<
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) - deref(b.hb1ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/HistoBin1D.pyx":88
 *     def __sub__(HistoBin1D a, HistoBin1D b):
 *         return cutil.new_owned_cls(HistoBin1D,
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) - deref(b.hb1ptr())))             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(12, 88, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_10HistoBin1D_hb1ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(12, 88, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::HistoBin1D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(12, 88, __pyx_L1_error)
  }

  /* "include/HistoBin1D.pyx":87
 * 
 *     def __sub__(HistoBin1D a, HistoBin1D b):
 *         return cutil.new_owned_cls(HistoBin1D,             # <<<<<<<<<<<<<<
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) - deref(b.hb1ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(12, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/HistoBin1D.pyx":86
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) + deref(b.hb1ptr())))
 * 
 *     def __sub__(HistoBin1D a, HistoBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin1D,
 *                                    new c.HistoBin1D(deref(a.hb1ptr()) - deref(b.hb1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.HistoBin1D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":10
 *     """
 * 
 *     cdef inline c.ProfileBin1D* pb1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin1D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE YODA::ProfileBin1D *__pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  YODA::ProfileBin1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("pb1ptr", 0);

  /* "include/ProfileBin1D.pyx":11
 * 
 *     cdef inline c.ProfileBin1D* pb1ptr(self) except NULL:
 *         return <c.ProfileBin1D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.ProfileBin1D* _ProfileBin1D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 11, __pyx_L1_error)
  __pyx_r = ((YODA::ProfileBin1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":10
 *     """
 * 
 *     cdef inline c.ProfileBin1D* pb1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin1D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.pb1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":13
 *         return <c.ProfileBin1D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.ProfileBin1D* _ProfileBin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin1D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::ProfileBin1D *__pyx_f_4yoda_4core_12ProfileBin1D__ProfileBin1D(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  YODA::ProfileBin1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_ProfileBin1D", 0);

  /* "include/ProfileBin1D.pyx":14
 *     # TODO: remove
 *     cdef inline c.ProfileBin1D* _ProfileBin1D(self) except NULL:
 *         return <c.ProfileBin1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 14, __pyx_L1_error)
  __pyx_r = ((YODA::ProfileBin1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":13
 *         return <c.ProfileBin1D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.ProfileBin1D* _ProfileBin1D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin1D._ProfileBin1D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":17
 * 
 * 
 *     def __init__(self, double a, double b):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.ProfileBin1D(a, b))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_12ProfileBin1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_12ProfileBin1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_a;
  double __pyx_v_b;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(13, 17, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(13, 17, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_a = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a == (double)-1) && PyErr_Occurred())) __PYX_ERR(13, 17, __pyx_L3_error)
    __pyx_v_b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(13, 17, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(13, 17, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D___init__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self), __pyx_v_a, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_12ProfileBin1D___init__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self, double __pyx_v_a, double __pyx_v_b) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/ProfileBin1D.pyx":18
 * 
 *     def __init__(self, double a, double b):
 *         cutil.set_owned_ptr(self, new c.ProfileBin1D(a, b))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = new YODA::ProfileBin1D(__pyx_v_a, __pyx_v_b);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 18, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(13, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/ProfileBin1D.pyx":17
 * 
 * 
 *     def __init__(self, double a, double b):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.ProfileBin1D(a, b))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":44
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         """The mean of the y-values that have filled the bin."""
 *         return self.pb1ptr().mean()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_4mean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_4mean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_4mean___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_4mean___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":46
 *     def mean(self):
 *         """The mean of the y-values that have filled the bin."""
 *         return self.pb1ptr().mean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 46, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->mean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 46, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":44
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         """The mean of the y-values that have filled the bin."""
 *         return self.pb1ptr().mean()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.mean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":49
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         """The variance of the y-values that have filled the bin."""
 *         return self.pb1ptr().variance()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_8variance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_8variance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_8variance___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_8variance___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":51
 *     def variance(self):
 *         """The variance of the y-values that have filled the bin."""
 *         return self.pb1ptr().variance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 51, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->variance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 51, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":49
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         """The variance of the y-values that have filled the bin."""
 *         return self.pb1ptr().variance()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.variance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":54
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         """The standard deviation of the y-values that have filled the bin."""
 *         return self.pb1ptr().stdDev()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_6stdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_6stdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_6stdDev___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6stdDev___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":56
 *     def stdDev(self):
 *         """The standard deviation of the y-values that have filled the bin."""
 *         return self.pb1ptr().stdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 56, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->stdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 56, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":54
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         """The standard deviation of the y-values that have filled the bin."""
 *         return self.pb1ptr().stdDev()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.stdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":59
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         """The standard error of the y-values that have filled the bin."""
 *         return self.pb1ptr().stdErr()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_6stdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_6stdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_6stdErr___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6stdErr___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":61
 *     def stdErr(self):
 *         """The standard error of the y-values that have filled the bin."""
 *         return self.pb1ptr().stdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 61, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->stdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 61, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":59
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         """The standard error of the y-values that have filled the bin."""
 *         return self.pb1ptr().stdErr()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.stdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":64
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         """The RMS of the y-values that have filled the bin."""
 *         return self.pb1ptr().rms()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_3rms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_3rms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_3rms___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_3rms___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":66
 *     def rms(self):
 *         """The RMS of the y-values that have filled the bin."""
 *         return self.pb1ptr().rms()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 66, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->rms();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 66, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":64
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         """The RMS of the y-values that have filled the bin."""
 *         return self.pb1ptr().rms()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.rms.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":70
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys)"""
 *         return self.pb1ptr().sumWY()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_5sumWY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_5sumWY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_5sumWY___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_5sumWY___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":72
 *     def sumWY(self):
 *         """sum(weights * ys)"""
 *         return self.pb1ptr().sumWY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 72, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 72, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":70
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys)"""
 *         return self.pb1ptr().sumWY()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.sumWY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":75
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * ys)"""
 *         return self.pb1ptr().sumWY2()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_6sumWY2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_6sumWY2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_6sumWY2___get__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin1D.pyx":77
 *     def sumWY2(self):
 *         """sum(weights * ys * ys)"""
 *         return self.pb1ptr().sumWY2()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 77, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 77, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(13, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":75
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         """sum(weights * ys * ys)"""
 *         return self.pb1ptr().sumWY2()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.sumWY2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":80
 * 
 * 
 *     def __iadd__(ProfileBin1D self, ProfileBin1D other):             # <<<<<<<<<<<<<<
 *         c.ProfileBin1D_iadd_ProfileBin1D(self.pb1ptr(), other.pb1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_3__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_3__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_ProfileBin1D, 1, "other", 0))) __PYX_ERR(13, 80, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_2__iadd__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_2__iadd__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  YODA::ProfileBin1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/ProfileBin1D.pyx":81
 * 
 *     def __iadd__(ProfileBin1D self, ProfileBin1D other):
 *         c.ProfileBin1D_iadd_ProfileBin1D(self.pb1ptr(), other.pb1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 81, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(13, 81, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/ProfileBin1D.pyx":82
 *     def __iadd__(ProfileBin1D self, ProfileBin1D other):
 *         c.ProfileBin1D_iadd_ProfileBin1D(self.pb1ptr(), other.pb1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __isub__(ProfileBin1D self, ProfileBin1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":80
 * 
 * 
 *     def __iadd__(ProfileBin1D self, ProfileBin1D other):             # <<<<<<<<<<<<<<
 *         c.ProfileBin1D_iadd_ProfileBin1D(self.pb1ptr(), other.pb1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":84
 *         return self
 * 
 *     def __isub__(ProfileBin1D self, ProfileBin1D other):             # <<<<<<<<<<<<<<
 *         c.ProfileBin1D_isub_ProfileBin1D(self.pb1ptr(), other.pb1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_5__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_5__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_ProfileBin1D, 1, "other", 0))) __PYX_ERR(13, 84, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_4__isub__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_4__isub__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  YODA::ProfileBin1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/ProfileBin1D.pyx":85
 * 
 *     def __isub__(ProfileBin1D self, ProfileBin1D other):
 *         c.ProfileBin1D_isub_ProfileBin1D(self.pb1ptr(), other.pb1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 85, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(13, 85, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/ProfileBin1D.pyx":86
 *     def __isub__(ProfileBin1D self, ProfileBin1D other):
 *         c.ProfileBin1D_isub_ProfileBin1D(self.pb1ptr(), other.pb1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __add__(ProfileBin1D a, ProfileBin1D b):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":84
 *         return self
 * 
 *     def __isub__(ProfileBin1D self, ProfileBin1D other):             # <<<<<<<<<<<<<<
 *         c.ProfileBin1D_isub_ProfileBin1D(self.pb1ptr(), other.pb1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":88
 *         return self
 * 
 *     def __add__(ProfileBin1D a, ProfileBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin1D,
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_7__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_7__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_ProfileBin1D, 1, "a", 0))) __PYX_ERR(13, 88, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_ProfileBin1D, 1, "b", 0))) __PYX_ERR(13, 88, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_6__add__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_6__add__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  YODA::ProfileBin1D *__pyx_t_2;
  YODA::ProfileBin1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/ProfileBin1D.pyx":89
 * 
 *     def __add__(ProfileBin1D a, ProfileBin1D b):
 *         return cutil.new_owned_cls(ProfileBin1D,             # <<<<<<<<<<<<<<
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/ProfileBin1D.pyx":90
 *     def __add__(ProfileBin1D a, ProfileBin1D b):
 *         return cutil.new_owned_cls(ProfileBin1D,
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(ProfileBin1D a, ProfileBin1D b):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 90, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(13, 90, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::ProfileBin1D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 90, __pyx_L1_error)
  }

  /* "include/ProfileBin1D.pyx":89
 * 
 *     def __add__(ProfileBin1D a, ProfileBin1D b):
 *         return cutil.new_owned_cls(ProfileBin1D,             # <<<<<<<<<<<<<<
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))
 * 
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(13, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":88
 *         return self
 * 
 *     def __add__(ProfileBin1D a, ProfileBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin1D,
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin1D.pyx":92
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))
 * 
 *     def __sub__(ProfileBin1D a, ProfileBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin1D,
 *                                    new c.ProfileBin1D(deref(a.pb1ptr()) - deref(b.pb1ptr())))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_9__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin1D_9__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_ProfileBin1D, 1, "a", 0))) __PYX_ERR(13, 92, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_ProfileBin1D, 1, "b", 0))) __PYX_ERR(13, 92, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin1D_8__sub__(((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_ProfileBin1D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin1D_8__sub__(struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin1D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin1D *__pyx_t_1;
  YODA::ProfileBin1D *__pyx_t_2;
  YODA::ProfileBin1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/ProfileBin1D.pyx":93
 * 
 *     def __sub__(ProfileBin1D a, ProfileBin1D b):
 *         return cutil.new_owned_cls(ProfileBin1D,             # <<<<<<<<<<<<<<
 *                                    new c.ProfileBin1D(deref(a.pb1ptr()) - deref(b.pb1ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/ProfileBin1D.pyx":94
 *     def __sub__(ProfileBin1D a, ProfileBin1D b):
 *         return cutil.new_owned_cls(ProfileBin1D,
 *                                    new c.ProfileBin1D(deref(a.pb1ptr()) - deref(b.pb1ptr())))             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(13, 94, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(13, 94, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::ProfileBin1D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(13, 94, __pyx_L1_error)
  }

  /* "include/ProfileBin1D.pyx":93
 * 
 *     def __sub__(ProfileBin1D a, ProfileBin1D b):
 *         return cutil.new_owned_cls(ProfileBin1D,             # <<<<<<<<<<<<<<
 *                                    new c.ProfileBin1D(deref(a.pb1ptr()) - deref(b.pb1ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin1D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(13, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin1D.pyx":92
 *                                   new c.ProfileBin1D(deref(a.pb1ptr()) + deref(b.pb1ptr())))
 * 
 *     def __sub__(ProfileBin1D a, ProfileBin1D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin1D,
 *                                    new c.ProfileBin1D(deref(a.pb1ptr()) - deref(b.pb1ptr())))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.ProfileBin1D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":9
 * 
 *     # Pointer upcasting mechanism
 *     cdef inline c.AnalysisObject* aoptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.AnalysisObject*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::AnalysisObject *__pyx_f_4yoda_4core_14AnalysisObject_aoptr(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  YODA::AnalysisObject *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("aoptr", 0);

  /* "include/AnalysisObject.pyx":10
 *     # Pointer upcasting mechanism
 *     cdef inline c.AnalysisObject* aoptr(self) except NULL:
 *         return <c.AnalysisObject*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     # Pointer upcasting mechanism
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 10, __pyx_L1_error)
  __pyx_r = ((YODA::AnalysisObject *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":9
 * 
 *     # Pointer upcasting mechanism
 *     cdef inline c.AnalysisObject* aoptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.AnalysisObject*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.aoptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":14
 *     # Pointer upcasting mechanism
 *     # DEPRECATED
 *     cdef inline c.AnalysisObject* _AnalysisObject(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.AnalysisObject*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::AnalysisObject *__pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  YODA::AnalysisObject *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_AnalysisObject", 0);

  /* "include/AnalysisObject.pyx":15
 *     # DEPRECATED
 *     cdef inline c.AnalysisObject* _AnalysisObject(self) except NULL:
 *         return <c.AnalysisObject*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     # Deallocator (only needed as a base class)
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 15, __pyx_L1_error)
  __pyx_r = ((YODA::AnalysisObject *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":14
 *     # Pointer upcasting mechanism
 *     # DEPRECATED
 *     cdef inline c.AnalysisObject* _AnalysisObject(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.AnalysisObject*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject._AnalysisObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":18
 * 
 *     # Deallocator (only needed as a base class)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         p = self.aoptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_14AnalysisObject_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_14AnalysisObject_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_14AnalysisObject___dealloc__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_14AnalysisObject___dealloc__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  YODA::AnalysisObject *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/AnalysisObject.pyx":19
 *     # Deallocator (only needed as a base class)
 *     def __dealloc__(self):
 *         p = self.aoptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 19, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/AnalysisObject.pyx":20
 *     def __dealloc__(self):
 *         p = self.aoptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/AnalysisObject.pyx":21
 *         p = self.aoptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 * 
 */
    delete __pyx_v_p;

    /* "include/AnalysisObject.pyx":20
 *     def __dealloc__(self):
 *         p = self.aoptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/AnalysisObject.pyx":18
 * 
 *     # Deallocator (only needed as a base class)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         p = self.aoptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.AnalysisObject.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/AnalysisObject.pyx":25
 * 
 *     @property
 *     def type(self):             # <<<<<<<<<<<<<<
 *         "String identifier for this type"
 *         return self.aoptr().type()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_4type_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_4type___get__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4type___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/AnalysisObject.pyx":27
 *     def type(self):
 *         "String identifier for this type"
 *         return self.aoptr().type()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 27, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->type();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 27, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":25
 * 
 *     @property
 *     def type(self):             # <<<<<<<<<<<<<<
 *         "String identifier for this type"
 *         return self.aoptr().type()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":30
 * 
 *     @property
 *     def dim(self):             # <<<<<<<<<<<<<<
 *         "Fill dimension or plot dimension of this object, for fillables and scatters respectively"
 *         return self.aoptr().dim()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_3dim_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_3dim_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_3dim___get__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_3dim___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/AnalysisObject.pyx":32
 *     def dim(self):
 *         "Fill dimension or plot dimension of this object, for fillables and scatters respectively"
 *         return self.aoptr().dim()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 32, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->dim();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 32, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":30
 * 
 *     @property
 *     def dim(self):             # <<<<<<<<<<<<<<
 *         "Fill dimension or plot dimension of this object, for fillables and scatters respectively"
 *         return self.aoptr().dim()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.dim.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":35
 * 
 *     @property
 *     def annotations(self):             # <<<<<<<<<<<<<<
 *         """() -> list[str]
 *         A list of all annotation/metadata keys."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_11annotations_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_11annotations_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_11annotations___get__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_11annotations___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::vector<std::string>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/AnalysisObject.pyx":38
 *         """() -> list[str]
 *         A list of all annotation/metadata keys."""
 *         return self.aoptr().annotations()             # <<<<<<<<<<<<<<
 * 
 *     def annotation(self, string k, default=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 38, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->annotations();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 38, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_convert_vector_to_py_std_3a__3a_string(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":35
 * 
 *     @property
 *     def annotations(self):             # <<<<<<<<<<<<<<
 *         """() -> list[str]
 *         A list of all annotation/metadata keys."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.annotations.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":40
 *         return self.aoptr().annotations()
 * 
 *     def annotation(self, string k, default=None):             # <<<<<<<<<<<<<<
 *         """Get annotation k from this object (falling back to default if not set)."""
 *         try:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_3annotation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_14AnalysisObject_2annotation[] = "AnalysisObject.annotation(self, string k, default=None)\nGet annotation k from this object (falling back to default if not set).";
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_3annotation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_k;
  PyObject *__pyx_v_default = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("annotation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_k,&__pyx_n_s_default,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_default);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "annotation") < 0)) __PYX_ERR(14, 40, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_k = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(14, 40, __pyx_L3_error)
    __pyx_v_default = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("annotation", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(14, 40, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.annotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_2annotation(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self), __pyx_v_k, __pyx_v_default);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_2annotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k, PyObject *__pyx_v_default) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  YODA::AnalysisObject *__pyx_t_7;
  std::string __pyx_t_8;
  std::string __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("annotation", 0);

  /* "include/AnalysisObject.pyx":42
 *     def annotation(self, string k, default=None):
 *         """Get annotation k from this object (falling back to default if not set)."""
 *         try:             # <<<<<<<<<<<<<<
 *             return util._autotype(self.aoptr().annotation(string(k)))
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/AnalysisObject.pyx":43
 *         """Get annotation k from this object (falling back to default if not set)."""
 *         try:
 *             return util._autotype(self.aoptr().annotation(string(k)))             # <<<<<<<<<<<<<<
 *         except:
 *             return default
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_5)) __PYX_ERR(14, 43, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_autotype); if (unlikely(!__pyx_t_6)) __PYX_ERR(14, 43, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(14, 43, __pyx_L3_error)
      try {
        __pyx_t_8 = std::string(__pyx_v_k);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(14, 43, __pyx_L3_error)
      }
      try {
        __pyx_t_9 = __pyx_t_7->annotation(__pyx_t_8);
      } catch(...) {
        translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        __PYX_ERR(14, 43, __pyx_L3_error)
      }
      __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(14, 43, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      if (!__pyx_t_10) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(14, 43, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(14, 43, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10); __pyx_t_10 = NULL;
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(14, 43, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L7_try_return;

      /* "include/AnalysisObject.pyx":42
 *     def annotation(self, string k, default=None):
 *         """Get annotation k from this object (falling back to default if not set)."""
 *         try:             # <<<<<<<<<<<<<<
 *             return util._autotype(self.aoptr().annotation(string(k)))
 *         except:
 */
    }
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "include/AnalysisObject.pyx":44
 *         try:
 *             return util._autotype(self.aoptr().annotation(string(k)))
 *         except:             # <<<<<<<<<<<<<<
 *             return default
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.AnalysisObject.annotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_6, &__pyx_t_11) < 0) __PYX_ERR(14, 44, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/AnalysisObject.pyx":45
 *             return util._autotype(self.aoptr().annotation(string(k)))
 *         except:
 *             return default             # <<<<<<<<<<<<<<
 * 
 *     def setAnnotation(self, string k, v):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_default);
      __pyx_r = __pyx_v_default;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L6_except_return;
    }
    __pyx_L5_except_error:;

    /* "include/AnalysisObject.pyx":42
 *     def annotation(self, string k, default=None):
 *         """Get annotation k from this object (falling back to default if not set)."""
 *         try:             # <<<<<<<<<<<<<<
 *             return util._autotype(self.aoptr().annotation(string(k)))
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
  }

  /* "include/AnalysisObject.pyx":40
 *         return self.aoptr().annotations()
 * 
 *     def annotation(self, string k, default=None):             # <<<<<<<<<<<<<<
 *         """Get annotation k from this object (falling back to default if not set)."""
 *         try:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.annotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":47
 *             return default
 * 
 *     def setAnnotation(self, string k, v):             # <<<<<<<<<<<<<<
 *         """Set annotation k on this object."""
 *         self.aoptr().setAnnotation(k, util._autostr(v))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_5setAnnotation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_14AnalysisObject_4setAnnotation[] = "AnalysisObject.setAnnotation(self, string k, v)\nSet annotation k on this object.";
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_5setAnnotation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_k;
  PyObject *__pyx_v_v = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAnnotation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_k,&__pyx_n_s_v,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setAnnotation", 1, 2, 2, 1); __PYX_ERR(14, 47, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setAnnotation") < 0)) __PYX_ERR(14, 47, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_k = __pyx_convert_string_from_py_std__in_string(values[0]); if (unlikely(PyErr_Occurred())) __PYX_ERR(14, 47, __pyx_L3_error)
    __pyx_v_v = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setAnnotation", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(14, 47, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.setAnnotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_4setAnnotation(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self), __pyx_v_k, __pyx_v_v);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4setAnnotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k, PyObject *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::string __pyx_t_6;
  __Pyx_RefNannySetupContext("setAnnotation", 0);

  /* "include/AnalysisObject.pyx":49
 *     def setAnnotation(self, string k, v):
 *         """Set annotation k on this object."""
 *         self.aoptr().setAnnotation(k, util._autostr(v))             # <<<<<<<<<<<<<<
 * 
 *     def hasAnnotation(self, string k):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 49, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_autostr); if (unlikely(!__pyx_t_4)) __PYX_ERR(14, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_v); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(14, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_v);
    __Pyx_GIVEREF(__pyx_v_v);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_v);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(14, 49, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setAnnotation(__pyx_v_k, __pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 49, __pyx_L1_error)
  }

  /* "include/AnalysisObject.pyx":47
 *             return default
 * 
 *     def setAnnotation(self, string k, v):             # <<<<<<<<<<<<<<
 *         """Set annotation k on this object."""
 *         self.aoptr().setAnnotation(k, util._autostr(v))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.setAnnotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":51
 *         self.aoptr().setAnnotation(k, util._autostr(v))
 * 
 *     def hasAnnotation(self, string k):             # <<<<<<<<<<<<<<
 *         """Check if this object has annotation k."""
 *         return self.aoptr().hasAnnotation(string(k))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_7hasAnnotation(PyObject *__pyx_v_self, PyObject *__pyx_arg_k); /*proto*/
static char __pyx_doc_4yoda_4core_14AnalysisObject_6hasAnnotation[] = "AnalysisObject.hasAnnotation(self, string k)\nCheck if this object has annotation k.";
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_7hasAnnotation(PyObject *__pyx_v_self, PyObject *__pyx_arg_k) {
  std::string __pyx_v_k;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hasAnnotation (wrapper)", 0);
  assert(__pyx_arg_k); {
    __pyx_v_k = __pyx_convert_string_from_py_std__in_string(__pyx_arg_k); if (unlikely(PyErr_Occurred())) __PYX_ERR(14, 51, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.hasAnnotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_6hasAnnotation(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self), ((std::string)__pyx_v_k));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_6hasAnnotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("hasAnnotation", 0);

  /* "include/AnalysisObject.pyx":53
 *     def hasAnnotation(self, string k):
 *         """Check if this object has annotation k."""
 *         return self.aoptr().hasAnnotation(string(k))             # <<<<<<<<<<<<<<
 * 
 *     def rmAnnotation(self, string k):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 53, __pyx_L1_error)
  try {
    __pyx_t_2 = std::string(__pyx_v_k);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(14, 53, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = __pyx_t_1->hasAnnotation(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 53, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(14, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":51
 *         self.aoptr().setAnnotation(k, util._autostr(v))
 * 
 *     def hasAnnotation(self, string k):             # <<<<<<<<<<<<<<
 *         """Check if this object has annotation k."""
 *         return self.aoptr().hasAnnotation(string(k))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.hasAnnotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":55
 *         return self.aoptr().hasAnnotation(string(k))
 * 
 *     def rmAnnotation(self, string k):             # <<<<<<<<<<<<<<
 *         """Remove annotation k from this object."""
 *         self.aoptr().rmAnnotation(string(k))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_9rmAnnotation(PyObject *__pyx_v_self, PyObject *__pyx_arg_k); /*proto*/
static char __pyx_doc_4yoda_4core_14AnalysisObject_8rmAnnotation[] = "AnalysisObject.rmAnnotation(self, string k)\nRemove annotation k from this object.";
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_9rmAnnotation(PyObject *__pyx_v_self, PyObject *__pyx_arg_k) {
  std::string __pyx_v_k;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rmAnnotation (wrapper)", 0);
  assert(__pyx_arg_k); {
    __pyx_v_k = __pyx_convert_string_from_py_std__in_string(__pyx_arg_k); if (unlikely(PyErr_Occurred())) __PYX_ERR(14, 55, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.rmAnnotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_8rmAnnotation(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self), ((std::string)__pyx_v_k));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_8rmAnnotation(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, std::string __pyx_v_k) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  __Pyx_RefNannySetupContext("rmAnnotation", 0);

  /* "include/AnalysisObject.pyx":57
 *     def rmAnnotation(self, string k):
 *         """Remove annotation k from this object."""
 *         self.aoptr().rmAnnotation(string(k))             # <<<<<<<<<<<<<<
 * 
 *     def clearAnnotations(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 57, __pyx_L1_error)
  try {
    __pyx_t_2 = std::string(__pyx_v_k);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(14, 57, __pyx_L1_error)
  }
  try {
    __pyx_t_1->rmAnnotation(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 57, __pyx_L1_error)
  }

  /* "include/AnalysisObject.pyx":55
 *         return self.aoptr().hasAnnotation(string(k))
 * 
 *     def rmAnnotation(self, string k):             # <<<<<<<<<<<<<<
 *         """Remove annotation k from this object."""
 *         self.aoptr().rmAnnotation(string(k))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.rmAnnotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":59
 *         self.aoptr().rmAnnotation(string(k))
 * 
 *     def clearAnnotations(self):             # <<<<<<<<<<<<<<
 *         """Clear the annotations dictionary."""
 *         self.aoptr().clearAnnotations()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_11clearAnnotations(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_14AnalysisObject_10clearAnnotations[] = "AnalysisObject.clearAnnotations(self)\nClear the annotations dictionary.";
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_11clearAnnotations(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clearAnnotations (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_10clearAnnotations(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_10clearAnnotations(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  __Pyx_RefNannySetupContext("clearAnnotations", 0);

  /* "include/AnalysisObject.pyx":61
 *     def clearAnnotations(self):
 *         """Clear the annotations dictionary."""
 *         self.aoptr().clearAnnotations()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 61, __pyx_L1_error)
  try {
    __pyx_t_1->clearAnnotations();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 61, __pyx_L1_error)
  }

  /* "include/AnalysisObject.pyx":59
 *         self.aoptr().rmAnnotation(string(k))
 * 
 *     def clearAnnotations(self):             # <<<<<<<<<<<<<<
 *         """Clear the annotations dictionary."""
 *         self.aoptr().clearAnnotations()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.clearAnnotations", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":64
 * 
 * 
 *     def dump(self):             # <<<<<<<<<<<<<<
 *         """A human readable representation of this object."""
 *         from cStringIO import StringIO
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_13dump(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_14AnalysisObject_12dump[] = "AnalysisObject.dump(self)\nA human readable representation of this object.";
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_13dump(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dump (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_12dump(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_12dump(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_v_StringIO = NULL;
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("dump", 0);

  /* "include/AnalysisObject.pyx":66
 *     def dump(self):
 *         """A human readable representation of this object."""
 *         from cStringIO import StringIO             # <<<<<<<<<<<<<<
 *         f = StringIO()
 *         writeFLAT([self], f)
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_StringIO);
  __Pyx_GIVEREF(__pyx_n_s_StringIO);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_StringIO);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cStringIO, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_StringIO); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_StringIO = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/AnalysisObject.pyx":67
 *         """A human readable representation of this object."""
 *         from cStringIO import StringIO
 *         f = StringIO()             # <<<<<<<<<<<<<<
 *         writeFLAT([self], f)
 *         f.seek(0)
 */
  __Pyx_INCREF(__pyx_v_StringIO);
  __pyx_t_1 = __pyx_v_StringIO; __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 67, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 67, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_f = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "include/AnalysisObject.pyx":68
 *         from cStringIO import StringIO
 *         f = StringIO()
 *         writeFLAT([self], f)             # <<<<<<<<<<<<<<
 *         f.seek(0)
 *         return f.read().strip()
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_writeFLAT); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyList_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(14, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_f);
  __Pyx_GIVEREF(__pyx_v_f);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_f);
  __pyx_t_3 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/AnalysisObject.pyx":69
 *         f = StringIO()
 *         writeFLAT([self], f)
 *         f.seek(0)             # <<<<<<<<<<<<<<
 *         return f.read().strip()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_seek); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/AnalysisObject.pyx":70
 *         writeFLAT([self], f)
 *         f.seek(0)
 *         return f.read().strip()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_read); if (unlikely(!__pyx_t_6)) __PYX_ERR(14, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 70, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 70, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_strip); if (unlikely(!__pyx_t_6)) __PYX_ERR(14, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 70, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 70, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":64
 * 
 * 
 *     def dump(self):             # <<<<<<<<<<<<<<
 *         """A human readable representation of this object."""
 *         from cStringIO import StringIO
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.dump", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_StringIO);
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":74
 * 
 *     @property
 *     def name(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the histogram name, i.e. the last part of the path (which may be empty).
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_4name___get__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4name___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/AnalysisObject.pyx":78
 *         Return the histogram name, i.e. the last part of the path (which may be empty).
 *         """
 *         return self.aoptr().name().c_str()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 78, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->name();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 78, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_t_2.c_str()); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":74
 * 
 *     @property
 *     def name(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the histogram name, i.e. the last part of the path (which may be empty).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":86
 *         a '/' if not the empty string.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.aoptr().path().c_str()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_4path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_4path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_4path___get__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_4path___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/AnalysisObject.pyx":87
 *         """
 *         def __get__(self):
 *             return self.aoptr().path().c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char *path):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 87, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->path();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 87, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_t_2.c_str()); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":86
 *         a '/' if not the empty string.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.aoptr().path().c_str()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":89
 *             return self.aoptr().path().c_str()
 * 
 *         def __set__(self, char *path):             # <<<<<<<<<<<<<<
 *             self.aoptr().setPath(string(path))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_14AnalysisObject_4path_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_path); /*proto*/
static int __pyx_pw_4yoda_4core_14AnalysisObject_4path_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_path) {
  char *__pyx_v_path;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_path); {
    __pyx_v_path = __Pyx_PyObject_AsString(__pyx_arg_path); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(14, 89, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.path.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_4path_2__set__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self), ((char *)__pyx_v_path));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_14AnalysisObject_4path_2__set__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, char *__pyx_v_path) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/AnalysisObject.pyx":90
 * 
 *         def __set__(self, char *path):
 *             self.aoptr().setPath(string(path))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 90, __pyx_L1_error)
  try {
    __pyx_t_2 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(14, 90, __pyx_L1_error)
  }
  try {
    __pyx_t_1->setPath(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 90, __pyx_L1_error)
  }

  /* "include/AnalysisObject.pyx":89
 *             return self.aoptr().path().c_str()
 * 
 *         def __set__(self, char *path):             # <<<<<<<<<<<<<<
 *             self.aoptr().setPath(string(path))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.path.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":97
 *         Convenient access to the histogram title (optional).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.aoptr().title().c_str()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_5title_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_5title_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_5title___get__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_5title___get__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/AnalysisObject.pyx":98
 *         """
 *         def __get__(self):
 *             return self.aoptr().title().c_str()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, char *title):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 98, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->title();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 98, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_t_2.c_str()); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":97
 *         Convenient access to the histogram title (optional).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.aoptr().title().c_str()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.title.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":100
 *             return self.aoptr().title().c_str()
 * 
 *         def __set__(self, char *title):             # <<<<<<<<<<<<<<
 *             self.aoptr().setTitle(string(title))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_14AnalysisObject_5title_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_title); /*proto*/
static int __pyx_pw_4yoda_4core_14AnalysisObject_5title_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_title) {
  char *__pyx_v_title;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_title); {
    __pyx_v_title = __Pyx_PyObject_AsString(__pyx_arg_title); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(14, 100, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.title.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_5title_2__set__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self), ((char *)__pyx_v_title));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_14AnalysisObject_5title_2__set__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self, char *__pyx_v_title) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::AnalysisObject *__pyx_t_1;
  std::string __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/AnalysisObject.pyx":101
 * 
 *         def __set__(self, char *title):
 *             self.aoptr().setTitle(string(title))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_14AnalysisObject_aoptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(14, 101, __pyx_L1_error)
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(14, 101, __pyx_L1_error)
  }
  try {
    __pyx_t_1->setTitle(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(14, 101, __pyx_L1_error)
  }

  /* "include/AnalysisObject.pyx":100
 *             return self.aoptr().title().c_str()
 * 
 *         def __set__(self, char *title):             # <<<<<<<<<<<<<<
 *             self.aoptr().setTitle(string(title))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.AnalysisObject.title.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/AnalysisObject.pyx":104
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s'>" % (self.__class__.__name__, self.path)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_15__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_14AnalysisObject_15__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_14AnalysisObject_14__repr__(((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14AnalysisObject_14__repr__(struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/AnalysisObject.pyx":105
 * 
 *     def __repr__(self):
 *         return "<%s '%s'>" % (self.__class__.__name__, self.path)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(14, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(14, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(14, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/AnalysisObject.pyx":104
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s'>" % (self.__class__.__name__, self.path)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.AnalysisObject.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":29
 *     """
 * 
 *     cdef inline c.Histo1D* h1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Histo1D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Histo1D *__pyx_f_4yoda_4core_7Histo1D_h1ptr(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  YODA::Histo1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("h1ptr", 0);

  /* "include/Histo1D.pyx":30
 * 
 *     cdef inline c.Histo1D* h1ptr(self) except NULL:
 *         return <c.Histo1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 30, __pyx_L1_error)
  __pyx_r = ((YODA::Histo1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Histo1D.pyx":29
 *     """
 * 
 *     cdef inline c.Histo1D* h1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Histo1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.h1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":33
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init5, self.__init3], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Histo1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_7Histo1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D___init__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Histo1D___init__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Histo1D.pyx":34
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init2, self.__init5, self.__init3], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init2(self, char *path="", char *title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init2); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init5); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init3); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_args); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, __pyx_v_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Histo1D.pyx":33
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init5, self.__init3], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":36
 *         util.try_loop([self.__init2, self.__init5, self.__init3], *args, **kwargs)
 * 
 *     def __init2(self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo1D(string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_2__init2[] = "Histo1D.__init2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init2") < 0)) __PYX_ERR(15, 36, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(15, 36, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(15, 36, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 36, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_2__init2(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_2__init2(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Histo1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init2", 0);

  /* "include/Histo1D.pyx":37
 * 
 *     def __init2(self, char *path="", char *title=""):
 *         cutil.set_owned_ptr(self, new c.Histo1D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(15, 37, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(15, 37, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Histo1D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 37, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Histo1D.pyx":36
 *         util.try_loop([self.__init2, self.__init5, self.__init3], *args, **kwargs)
 * 
 *     def __init2(self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo1D(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Histo1D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":40
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_5__init3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_4__init3[] = "Histo1D.__init3(self, bins_or_edges, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_5__init3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_bins_or_edges = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_bins_or_edges,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bins_or_edges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init3") < 0)) __PYX_ERR(15, 40, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_bins_or_edges = values[0];
    if (values[1]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(15, 40, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[2]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(15, 40, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init3", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 40, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.__init3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_4__init3(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_bins_or_edges, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_4yoda_4core_7Histo1D_7__init3_2generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "include/Histo1D.pyx":45
 *         try:
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)             # <<<<<<<<<<<<<<
 *             cutil.set_owned_ptr(self, new c.Histo1D(edges, string(path), string(title)))
 *         except:
 */

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_7__init3_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *)__pyx_tp_new_4yoda_4core___pyx_scope_struct_1_genexpr(__pyx_ptype_4yoda_4core___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_4yoda_4core_7Histo1D_7__init3_2generator, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_init3_locals_genexpr, __pyx_n_s_yoda_core); if (unlikely(!gen)) __PYX_ERR(15, 45, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.__init3.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_4yoda_4core_7Histo1D_7__init3_2generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(15, 45, __pyx_L1_error)
  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(15, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges)) { __Pyx_RaiseClosureNameError("bins_or_edges"); __PYX_ERR(15, 45, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 45, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(15, 45, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 45, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(15, 45, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 45, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(15, 45, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_x);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_x, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyNumber_Float(__pyx_cur_scope->__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_4))) __PYX_ERR(15, 45, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":40
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4__init3(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_bins_or_edges, char *__pyx_v_path, char *__pyx_v_title) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *__pyx_cur_scope;
  std::vector<double>  __pyx_v_edges;
  PyObject *__pyx_v_bins = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::vector<double>  __pyx_t_6;
  std::string __pyx_t_7;
  std::string __pyx_t_8;
  YODA::Histo1D *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  Py_ssize_t __pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  __Pyx_RefNannySetupContext("__init3", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *)__pyx_tp_new_4yoda_4core___pyx_scope_struct____init3(__pyx_ptype_4yoda_4core___pyx_scope_struct____init3, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_bins_or_edges = __pyx_v_bins_or_edges;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_bins_or_edges);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_bins_or_edges);

  /* "include/Histo1D.pyx":43
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 *         try:             # <<<<<<<<<<<<<<
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Histo1D.pyx":45
 *         try:
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)             # <<<<<<<<<<<<<<
 *             cutil.set_owned_ptr(self, new c.Histo1D(edges, string(path), string(title)))
 *         except:
 */
      __pyx_t_4 = __pyx_pf_4yoda_4core_7Histo1D_7__init3_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 45, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_Generator_Next(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 45, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __pyx_convert_vector_from_py_double(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(15, 45, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_edges = __pyx_t_6;

      /* "include/Histo1D.pyx":46
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 *             cutil.set_owned_ptr(self, new c.Histo1D(edges, string(path), string(title)))             # <<<<<<<<<<<<<<
 *         except:
 *             ## Assume it's a list of HistoBin1D
 */
      try {
        __pyx_t_7 = std::string(__pyx_v_path);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(15, 46, __pyx_L3_error)
      }
      try {
        __pyx_t_8 = std::string(__pyx_v_title);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(15, 46, __pyx_L3_error)
      }
      try {
        __pyx_t_9 = new YODA::Histo1D(__pyx_v_edges, __pyx_t_7, __pyx_t_8);
      } catch(...) {
        translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        __PYX_ERR(15, 46, __pyx_L3_error)
      }
      __pyx_t_5 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 46, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "include/Histo1D.pyx":43
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 *         try:             # <<<<<<<<<<<<<<
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Histo1D.pyx":47
 *             edges = list(float(x) for x in bins_or_edges)
 *             cutil.set_owned_ptr(self, new c.Histo1D(edges, string(path), string(title)))
 *         except:             # <<<<<<<<<<<<<<
 *             ## Assume it's a list of HistoBin1D
 *             bins = bins_or_edges
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Histo1D.__init3", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_10) < 0) __PYX_ERR(15, 47, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_10);

      /* "include/Histo1D.pyx":49
 *         except:
 *             ## Assume it's a list of HistoBin1D
 *             bins = bins_or_edges             # <<<<<<<<<<<<<<
 *             self.__init2(path, title)
 *             self.addBins(bins)
 */
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_bins_or_edges);
      __pyx_v_bins = __pyx_cur_scope->__pyx_v_bins_or_edges;

      /* "include/Histo1D.pyx":50
 *             ## Assume it's a list of HistoBin1D
 *             bins = bins_or_edges
 *             self.__init2(path, title)             # <<<<<<<<<<<<<<
 *             self.addBins(bins)
 * 
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init2); if (unlikely(!__pyx_t_12)) __PYX_ERR(15, 50, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = __Pyx_PyBytes_FromString(__pyx_v_path); if (unlikely(!__pyx_t_13)) __PYX_ERR(15, 50, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyBytes_FromString(__pyx_v_title); if (unlikely(!__pyx_t_14)) __PYX_ERR(15, 50, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_15 = NULL;
      __pyx_t_16 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_15)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
          __pyx_t_16 = 1;
        }
      }
      __pyx_t_17 = PyTuple_New(2+__pyx_t_16); if (unlikely(!__pyx_t_17)) __PYX_ERR(15, 50, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_17);
      if (__pyx_t_15) {
        __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_15); __pyx_t_15 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_16, __pyx_t_13);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_16, __pyx_t_14);
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_17, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(15, 50, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

      /* "include/Histo1D.pyx":51
 *             bins = bins_or_edges
 *             self.__init2(path, title)
 *             self.addBins(bins)             # <<<<<<<<<<<<<<
 * 
 *     def __init5(self, nbins, low, high, char *path="", char *title=""):
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins); if (unlikely(!__pyx_t_12)) __PYX_ERR(15, 51, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_17 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_17)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      if (!__pyx_t_17) {
        __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_bins); if (unlikely(!__pyx_t_11)) __PYX_ERR(15, 51, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_11);
      } else {
        __pyx_t_14 = PyTuple_New(1+1); if (unlikely(!__pyx_t_14)) __PYX_ERR(15, 51, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_17); __pyx_t_17 = NULL;
        __Pyx_INCREF(__pyx_v_bins);
        __Pyx_GIVEREF(__pyx_v_bins);
        PyTuple_SET_ITEM(__pyx_t_14, 0+1, __pyx_v_bins);
        __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_14, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(15, 51, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      }
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;

    /* "include/Histo1D.pyx":43
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 *         try:             # <<<<<<<<<<<<<<
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Histo1D.pyx":40
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("yoda.core.Histo1D.__init3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bins);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":53
 *             self.addBins(bins)
 * 
 *     def __init5(self, nbins, low, high, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo1D(nbins, low, high, string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_7__init5(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_6__init5[] = "Histo1D.__init5(self, nbins, low, high, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_7__init5(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nbins = 0;
  PyObject *__pyx_v_low = 0;
  PyObject *__pyx_v_high = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init5 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nbins,&__pyx_n_s_low,&__pyx_n_s_high,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nbins)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_low)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init5", 0, 3, 5, 1); __PYX_ERR(15, 53, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_high)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init5", 0, 3, 5, 2); __PYX_ERR(15, 53, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init5") < 0)) __PYX_ERR(15, 53, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_nbins = values[0];
    __pyx_v_low = values[1];
    __pyx_v_high = values[2];
    if (values[3]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[3]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(15, 53, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[4]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[4]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(15, 53, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init5", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 53, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.__init5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_6__init5(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_nbins, __pyx_v_low, __pyx_v_high, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_6__init5(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_nbins, PyObject *__pyx_v_low, PyObject *__pyx_v_high, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  std::string __pyx_t_4;
  std::string __pyx_t_5;
  YODA::Histo1D *__pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__init5", 0);

  /* "include/Histo1D.pyx":54
 * 
 *     def __init5(self, nbins, low, high, char *path="", char *title=""):
 *         cutil.set_owned_ptr(self, new c.Histo1D(nbins, low, high, string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_nbins); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 54, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_low); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 54, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_high); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 54, __pyx_L1_error)
  try {
    __pyx_t_4 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(15, 54, __pyx_L1_error)
  }
  try {
    __pyx_t_5 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(15, 54, __pyx_L1_error)
  }
  try {
    __pyx_t_6 = new YODA::Histo1D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 54, __pyx_L1_error)
  }
  __pyx_t_7 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(15, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "include/Histo1D.pyx":53
 *             self.addBins(bins)
 * 
 *     def __init5(self, nbins, low, high, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo1D(nbins, low, high, string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo1D.__init5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":57
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         "Number of bins"
 *         return self.numBins
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_7Histo1D_9__len__(PyObject *__pyx_v_self); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_8__len__[] = "Number of bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_7Histo1D_8__len__;
#endif
static Py_ssize_t __pyx_pw_4yoda_4core_7Histo1D_9__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_8__len__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_7Histo1D_8__len__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Histo1D.pyx":59
 *     def __len__(self):
 *         "Number of bins"
 *         return self.numBins             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, i):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numBins); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":57
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         "Number of bins"
 *         return self.numBins
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo1D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":61
 *         return self.numBins
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_10__getitem__[] = "Direct access to bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_7Histo1D_10__getitem__;
#endif
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_10__getitem__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_10__getitem__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_i) {
  size_t __pyx_v_ii;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Histo1D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Histo1D.pyx":63
 *     def __getitem__(self, i):
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(HistoBin1D, & self.h1ptr().bin(ii), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_i); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(15, 63, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(15, 63, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 63, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_4 == 0 && PyErr_Occurred())) __PYX_ERR(15, 63, __pyx_L1_error)
  __pyx_v_ii = __pyx_t_4;

  /* "include/Histo1D.pyx":64
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())
 *         return cutil.new_borrowed_cls(HistoBin1D, & self.h1ptr().bin(ii), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(15, 64, __pyx_L1_error)
  __pyx_t_5 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin1D), (&__pyx_t_2->bin(__pyx_v_ii)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":61
 *         return self.numBins
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo1D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":67
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         xmean = None
 *         if self.sumW() != 0:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_12__repr__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_12__repr__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_v_xmean = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Histo1D.pyx":68
 * 
 *     def __repr__(self):
 *         xmean = None             # <<<<<<<<<<<<<<
 *         if self.sumW() != 0:
 *             xmean = "%0.2e" % self.xMean()
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_xmean = Py_None;

  /* "include/Histo1D.pyx":69
 *     def __repr__(self):
 *         xmean = None
 *         if self.sumW() != 0:             # <<<<<<<<<<<<<<
 *             xmean = "%0.2e" % self.xMean()
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 69, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 69, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 69, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(15, 69, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "include/Histo1D.pyx":70
 *         xmean = None
 *         if self.sumW() != 0:
 *             xmean = "%0.2e" % self.xMean()             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \
 *                (self.__class__.__name__, self.path,
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMean); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 70, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 70, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_0_2e, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_xmean, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "include/Histo1D.pyx":69
 *     def __repr__(self):
 *         xmean = None
 *         if self.sumW() != 0:             # <<<<<<<<<<<<<<
 *             xmean = "%0.2e" % self.xMean()
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \
 */
  }

  /* "include/Histo1D.pyx":71
 *         if self.sumW() != 0:
 *             xmean = "%0.2e" % self.xMean()
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \             # <<<<<<<<<<<<<<
 *                (self.__class__.__name__, self.path,
 *                 len(self.bins), self.sumW(), xmean)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/Histo1D.pyx":72
 *             xmean = "%0.2e" % self.xMean()
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \
 *                (self.__class__.__name__, self.path,             # <<<<<<<<<<<<<<
 *                 len(self.bins), self.sumW(), xmean)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "include/Histo1D.pyx":73
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \
 *                (self.__class__.__name__, self.path,
 *                 len(self.bins), self.sumW(), xmean)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bins); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(15, 73, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_7)) __PYX_ERR(15, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_8) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 73, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 73, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "include/Histo1D.pyx":72
 *             xmean = "%0.2e" % self.xMean()
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \
 *                (self.__class__.__name__, self.path,             # <<<<<<<<<<<<<<
 *                 len(self.bins), self.sumW(), xmean)
 * 
 */
  __pyx_t_7 = PyTuple_New(5); if (unlikely(!__pyx_t_7)) __PYX_ERR(15, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_6);
  __Pyx_INCREF(__pyx_v_xmean);
  __Pyx_GIVEREF(__pyx_v_xmean);
  PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_v_xmean);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_6 = 0;

  /* "include/Histo1D.pyx":71
 *         if self.sumW() != 0:
 *             xmean = "%0.2e" % self.xMean()
 *         return "<%s '%s' %d bins, sumw=%0.2g, xmean=%s>" % \             # <<<<<<<<<<<<<<
 *                (self.__class__.__name__, self.path,
 *                 len(self.bins), self.sumW(), xmean)
 */
  __pyx_t_6 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_bins_sumw_0_2g_xmean_s, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":67
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         xmean = None
 *         if self.sumW() != 0:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Histo1D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xmean);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":76
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_14reset[] = "Histo1D.reset(self)\nNone -> None.\n        Reset the histogram but leave the bin structure.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_14reset(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_14reset(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Histo1D.pyx":79
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 *         self.h1ptr().reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 79, __pyx_L1_error)
  try {
    __pyx_t_1->reset();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 79, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":76
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":82
 * 
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Histo1D.
 *         Clone this Histo1D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_16clone[] = "Histo1D.clone(self)\nNone -> Histo1D.\n        Clone this Histo1D.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_16clone(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_16clone(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  YODA::Histo1D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Histo1D.pyx":85
 *         """None -> Histo1D.
 *         Clone this Histo1D."""
 *         return cutil.new_owned_cls(Histo1D, self.h1ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 85, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 85, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Histo1D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":82
 * 
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Histo1D.
 *         Clone this Histo1D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":88
 * 
 * 
 *     def fill(self, x, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,[w]) -> None.
 *         Fill with given x value and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_18fill[] = "Histo1D.fill(self, x, weight=1.0)\n(x,[w]) -> None.\n        Fill with given x value and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_weight,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(15, 88, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_weight = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 88, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_18fill(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_x, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_18fill(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Histo1D.pyx":91
 *         """(x,[w]) -> None.
 *         Fill with given x value and optional weight."""
 *         self.h1ptr().fill(x, weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 91, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 91, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 91, __pyx_L1_error)
  try {
    __pyx_t_1->fill(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 91, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":88
 * 
 * 
 *     def fill(self, x, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,[w]) -> None.
 *         Fill with given x value and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":94
 * 
 * 
 *     def fillBin(self, size_t ix, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(ix,[w]) -> None.
 *         Fill bin ix and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_20fillBin[] = "Histo1D.fillBin(self, size_t ix, weight=1.0)\n(ix,[w]) -> None.\n        Fill bin ix and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_ix;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fillBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ix,&__pyx_n_s_weight,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ix)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fillBin") < 0)) __PYX_ERR(15, 94, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ix = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ix == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 94, __pyx_L3_error)
    __pyx_v_weight = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fillBin", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 94, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_20fillBin(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_ix, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_20fillBin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, size_t __pyx_v_ix, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fillBin", 0);

  /* "include/Histo1D.pyx":97
 *         """(ix,[w]) -> None.
 *         Fill bin ix and optional weight."""
 *         self.h1ptr().fillBin(ix, weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 97, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 97, __pyx_L1_error)
  try {
    __pyx_t_1->fillBin(__pyx_v_ix, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 97, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":94
 * 
 * 
 *     def fillBin(self, size_t ix, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(ix,[w]) -> None.
 *         Fill bin ix and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":101
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """None -> Dbn1D
 *         The Dbn1D representing the total distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_8totalDbn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_8totalDbn_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_8totalDbn___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":104
 *         """None -> Dbn1D
 *         The Dbn1D representing the total distribution."""
 *         return cutil.new_borrowed_cls(Dbn1D, &self.h1ptr().totalDbn(), self)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 104, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn1D), (&__pyx_t_1->totalDbn()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":101
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """None -> Dbn1D
 *         The Dbn1D representing the total distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Histo1D.totalDbn.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":107
 * 
 *     @property
 *     def underflow(self):             # <<<<<<<<<<<<<<
 *         """None -> Dbn1D
 *         The Dbn1D representing the underflow distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_9underflow_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_9underflow_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_9underflow___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_9underflow___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":110
 *         """None -> Dbn1D
 *         The Dbn1D representing the underflow distribution."""
 *         return cutil.new_borrowed_cls(Dbn1D, &self.h1ptr().underflow(), self)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 110, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn1D), (&__pyx_t_1->underflow()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":107
 * 
 *     @property
 *     def underflow(self):             # <<<<<<<<<<<<<<
 *         """None -> Dbn1D
 *         The Dbn1D representing the underflow distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Histo1D.underflow.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":113
 * 
 *     @property
 *     def overflow(self):             # <<<<<<<<<<<<<<
 *         """None -> Dbn1D
 *         The Dbn1D representing the overflow distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_8overflow_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_8overflow_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_8overflow___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_8overflow___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":116
 *         """None -> Dbn1D
 *         The Dbn1D representing the overflow distribution."""
 *         return cutil.new_borrowed_cls(Dbn1D, &self.h1ptr().overflow(), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 116, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn1D), (&__pyx_t_1->overflow()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":113
 * 
 *     @property
 *     def overflow(self):             # <<<<<<<<<<<<<<
 *         """None -> Dbn1D
 *         The Dbn1D representing the overflow distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Histo1D.overflow.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":119
 * 
 * 
 *     def integral(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Histogram integral, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_23integral(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_22integral[] = "Histo1D.integral(self, includeoverflows=True)\n([bool]) -> float\n        Histogram integral, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_23integral(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integral (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integral") < 0)) __PYX_ERR(15, 119, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integral", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 119, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.integral", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_22integral(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_22integral(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("integral", 0);

  /* "include/Histo1D.pyx":122
 *         """([bool]) -> float
 *         Histogram integral, optionally excluding the overflows."""
 *         return self.h1ptr().integral(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def integralRange(self, int ia, int ib):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 122, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 122, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->integral(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":119
 * 
 * 
 *     def integral(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Histogram integral, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.integral", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":124
 *         return self.h1ptr().integral(includeoverflows)
 * 
 *     def integralRange(self, int ia, int ib):             # <<<<<<<<<<<<<<
 *         """(int, int) -> float
 *         Integral between bins ia..ib inclusive"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_25integralRange(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_24integralRange[] = "Histo1D.integralRange(self, int ia, int ib)\n(int, int) -> float\n        Integral between bins ia..ib inclusive";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_25integralRange(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_ia;
  int __pyx_v_ib;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integralRange (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ia,&__pyx_n_s_ib,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ia)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ib)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integralRange", 1, 2, 2, 1); __PYX_ERR(15, 124, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integralRange") < 0)) __PYX_ERR(15, 124, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ia = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_ia == (int)-1) && PyErr_Occurred())) __PYX_ERR(15, 124, __pyx_L3_error)
    __pyx_v_ib = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ib == (int)-1) && PyErr_Occurred())) __PYX_ERR(15, 124, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integralRange", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 124, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.integralRange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_24integralRange(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_ia, __pyx_v_ib);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_24integralRange(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, int __pyx_v_ia, int __pyx_v_ib) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("integralRange", 0);

  /* "include/Histo1D.pyx":127
 *         """(int, int) -> float
 *         Integral between bins ia..ib inclusive"""
 *         return self.h1ptr().integralRange(ia, ib)             # <<<<<<<<<<<<<<
 * 
 *     def integralTo(self, int ia, includeunderflow=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 127, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->integralRange(__pyx_v_ia, __pyx_v_ib)); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":124
 *         return self.h1ptr().integral(includeoverflows)
 * 
 *     def integralRange(self, int ia, int ib):             # <<<<<<<<<<<<<<
 *         """(int, int) -> float
 *         Integral between bins ia..ib inclusive"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Histo1D.integralRange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":129
 *         return self.h1ptr().integralRange(ia, ib)
 * 
 *     def integralTo(self, int ia, includeunderflow=True):             # <<<<<<<<<<<<<<
 *         """(int, [bool]) -> float
 *         Integral up to bin ia inclusive, optionally excluding the underflow"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_27integralTo(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_26integralTo[] = "Histo1D.integralTo(self, int ia, includeunderflow=True)\n(int, [bool]) -> float\n        Integral up to bin ia inclusive, optionally excluding the underflow";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_27integralTo(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_ia;
  PyObject *__pyx_v_includeunderflow = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integralTo (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ia,&__pyx_n_s_includeunderflow,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ia)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeunderflow);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integralTo") < 0)) __PYX_ERR(15, 129, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ia = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_ia == (int)-1) && PyErr_Occurred())) __PYX_ERR(15, 129, __pyx_L3_error)
    __pyx_v_includeunderflow = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integralTo", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 129, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.integralTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_26integralTo(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_ia, __pyx_v_includeunderflow);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_26integralTo(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, int __pyx_v_ia, PyObject *__pyx_v_includeunderflow) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("integralTo", 0);

  /* "include/Histo1D.pyx":132
 *         """(int, [bool]) -> float
 *         Integral up to bin ia inclusive, optionally excluding the underflow"""
 *         return self.h1ptr().integralRange(ia, includeunderflow)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 132, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_includeunderflow); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(15, 132, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->integralRange(__pyx_v_ia, __pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":129
 *         return self.h1ptr().integralRange(ia, ib)
 * 
 *     def integralTo(self, int ia, includeunderflow=True):             # <<<<<<<<<<<<<<
 *         """(int, [bool]) -> float
 *         Integral up to bin ia inclusive, optionally excluding the underflow"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.integralTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":135
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_29numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_28numEntries[] = "Histo1D.numEntries(self, includeoverflows=True)\n([bool]) -> int\n        Number of times this histogram was filled, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_29numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "numEntries") < 0)) __PYX_ERR(15, 135, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("numEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 135, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_28numEntries(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_28numEntries(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("numEntries", 0);

  /* "include/Histo1D.pyx":138
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 *         return self.h1ptr().numEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def effNumEntries(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 138, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 138, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_1->numEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":135
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":140
 *         return self.h1ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights, and optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_31effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_30effNumEntries[] = "Histo1D.effNumEntries(self, includeoverflows=True)\n([bool]) -> float\n        Effective number of times this histogram was filled, computed from weights, and optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_31effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("effNumEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "effNumEntries") < 0)) __PYX_ERR(15, 140, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("effNumEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 140, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_30effNumEntries(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_30effNumEntries(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("effNumEntries", 0);

  /* "include/Histo1D.pyx":143
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights, and optionally excluding the overflows."""
 *         return self.h1ptr().effNumEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 143, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 143, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->effNumEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":140
 *         return self.h1ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights, and optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":145
 *         return self.h1ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_33sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_32sumW[] = "Histo1D.sumW(self, includeoverflows=True)\n([bool]) -> float\n        Sum of weights filled into this histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_33sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW") < 0)) __PYX_ERR(15, 145, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 145, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_32sumW(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_32sumW(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW", 0);

  /* "include/Histo1D.pyx":148
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram, optionally excluding the overflows."""
 *         return self.h1ptr().sumW(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW2(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 148, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 148, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":145
 *         return self.h1ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":150
 *         return self.h1ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_35sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_34sumW2[] = "Histo1D.sumW2(self, includeoverflows=True)\n([bool]) -> float\n        Sum of weights filled into this histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_35sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW2") < 0)) __PYX_ERR(15, 150, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW2", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 150, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_34sumW2(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_34sumW2(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW2", 0);

  /* "include/Histo1D.pyx":153
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram, optionally excluding the overflows."""
 *         return self.h1ptr().sumW2(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 153, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 153, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW2(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":150
 *         return self.h1ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":156
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_37xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_36xMean[] = "Histo1D.xMean(self, includeoverflows=True)\n([bool]) -> float\n        Mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_37xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xMean") < 0)) __PYX_ERR(15, 156, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 156, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_36xMean(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_36xMean(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xMean", 0);

  /* "include/Histo1D.pyx":159
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 *         return self.h1ptr().xMean(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xVariance(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 159, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 159, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xMean(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":156
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":161
 *         return self.h1ptr().xMean(includeoverflows)
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_39xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_38xVariance[] = "Histo1D.xVariance(self, includeoverflows=True)\n([bool]) -> float\n        Variance in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_39xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xVariance") < 0)) __PYX_ERR(15, 161, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 161, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_38xVariance(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_38xVariance(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xVariance", 0);

  /* "include/Histo1D.pyx":164
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 *         return self.h1ptr().xVariance(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xStdDev(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 164, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 164, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xVariance(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":161
 *         return self.h1ptr().xMean(includeoverflows)
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":166
 *         return self.h1ptr().xVariance(includeoverflows)
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_41xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_40xStdDev[] = "Histo1D.xStdDev(self, includeoverflows=True)\n([bool]) -> float\n        Standard deviation in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_41xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdDev") < 0)) __PYX_ERR(15, 166, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 166, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_40xStdDev(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_40xStdDev(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdDev", 0);

  /* "include/Histo1D.pyx":169
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 *         return self.h1ptr().xStdDev(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xStdErr(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 169, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 169, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdDev(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":166
 *         return self.h1ptr().xVariance(includeoverflows)
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":171
 *         return self.h1ptr().xStdDev(includeoverflows)
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_43xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_42xStdErr[] = "Histo1D.xStdErr(self, includeoverflows=True)\n([bool]) -> float\n        Standard error on the mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_43xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdErr") < 0)) __PYX_ERR(15, 171, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 171, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_42xStdErr(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_42xStdErr(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdErr", 0);

  /* "include/Histo1D.pyx":174
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 *         return self.h1ptr().xStdErr(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xRMS(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 174, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 174, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdErr(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":171
 *         return self.h1ptr().xStdDev(includeoverflows)
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":176
 *         return self.h1ptr().xStdErr(includeoverflows)
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_45xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_44xRMS[] = "Histo1D.xRMS(self, includeoverflows=True)\n([bool]) -> float\n        RMS in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_45xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xRMS") < 0)) __PYX_ERR(15, 176, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 176, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_44xRMS(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_44xRMS(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xRMS", 0);

  /* "include/Histo1D.pyx":179
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 *         return self.h1ptr().xRMS(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 179, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 179, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xRMS(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":176
 *         return self.h1ptr().xStdErr(includeoverflows)
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":182
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """ (float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_47scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_46scaleW[] = "Histo1D.scaleW(self, w)\n (float) -> None.\n        Rescale the weights in this histogram by the factor w.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_47scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_46scaleW(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_46scaleW(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Histo1D.pyx":185
 *         """ (float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 *         self.h1ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def normalize(self, normto=1.0, includeoverflows=True):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 185, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 185, __pyx_L1_error)
  try {
    __pyx_t_1->scaleW(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 185, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":182
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """ (float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":187
 *         self.h1ptr().scaleW(w)
 * 
 *     def normalize(self, normto=1.0, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """ (float, bool) -> None.
 *         Normalize the histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_49normalize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_48normalize[] = "Histo1D.normalize(self, normto=1.0, includeoverflows=True)\n (float, bool) -> None.\n        Normalize the histogram.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_49normalize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_normto = 0;
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("normalize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_normto,&__pyx_n_s_includeoverflows,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_normto);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "normalize") < 0)) __PYX_ERR(15, 187, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_normto = values[0];
    __pyx_v_includeoverflows = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("normalize", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 187, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.normalize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_48normalize(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_normto, __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_48normalize(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_normto, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  bool __pyx_t_3;
  __Pyx_RefNannySetupContext("normalize", 0);

  /* "include/Histo1D.pyx":190
 *         """ (float, bool) -> None.
 *         Normalize the histogram."""
 *         self.h1ptr().normalize(normto, includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 190, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_normto); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 190, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 190, __pyx_L1_error)
  try {
    __pyx_t_1->normalize(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 190, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":187
 *         self.h1ptr().scaleW(w)
 * 
 *     def normalize(self, normto=1.0, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """ (float, bool) -> None.
 *         Normalize the histogram."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.normalize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":194
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.h1ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":196
 *     def xMin(self):
 *         """Low x edge of the histo."""
 *         return self.h1ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 196, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 196, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":194
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.h1ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":199
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.h1ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":201
 *     def xMax(self):
 *         """High x edge of the histo."""
 *         return self.h1ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 201, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 201, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":199
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.h1ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":204
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """All x edges of the histo."""
 *         return self.h1ptr().xEdges()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_6xEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_6xEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_6xEdges___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  std::vector<double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":206
 *     def xEdges(self):
 *         """All x edges of the histo."""
 *         return self.h1ptr().xEdges()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 206, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xEdges();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 206, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_convert_vector_to_py_double(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":204
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """All x edges of the histo."""
 *         return self.h1ptr().xEdges()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.xEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":210
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_7numBins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_7numBins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_7numBins___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_7numBins___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":213
 *         """() -> int
 *         Number of bins (not including overflows)."""
 *         return self.h1ptr().numBins()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 213, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 213, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":210
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.numBins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":216
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return list(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_4bins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_4bins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_4bins___get__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_4bins___get__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo1D.pyx":218
 *     def bins(self):
 *         """Access the ordered bins list."""
 *         return list(self)             # <<<<<<<<<<<<<<
 * 
 *     def bin(self, i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PySequence_List(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":216
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return list(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo1D.bins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":220
 *         return list(self)
 * 
 *     def bin(self, i):             # <<<<<<<<<<<<<<
 *         """Get the i'th bin (equivalent to bins[i]"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_51bin(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_50bin[] = "Histo1D.bin(self, i)\nGet the i'th bin (equivalent to bins[i]";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_51bin(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bin (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_50bin(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_50bin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("bin", 0);

  /* "include/Histo1D.pyx":223
 *         """Get the i'th bin (equivalent to bins[i]"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())
 *         return cutil.new_borrowed_cls(HistoBin1D, & self.h1ptr().bin(i), self)             # <<<<<<<<<<<<<<
 * 
 *     def binIndexAt(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 223, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 223, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin1D), (&__pyx_t_1->bin(__pyx_t_2)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":220
 *         return list(self)
 * 
 *     def bin(self, i):             # <<<<<<<<<<<<<<
 *         """Get the i'th bin (equivalent to bins[i]"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.h1ptr().numBins())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.bin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":225
 *         return cutil.new_borrowed_cls(HistoBin1D, & self.h1ptr().bin(i), self)
 * 
 *     def binIndexAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin index containing position x"""
 *         return self.h1ptr().binIndexAt(x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_53binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_52binIndexAt[] = "Histo1D.binIndexAt(self, x)\nGet the bin index containing position x";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_53binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binIndexAt (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_52binIndexAt(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_52binIndexAt(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("binIndexAt", 0);

  /* "include/Histo1D.pyx":227
 *     def binIndexAt(self, x):
 *         """Get the bin index containing position x"""
 *         return self.h1ptr().binIndexAt(x)             # <<<<<<<<<<<<<<
 * 
 *     def binAt(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 227, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 227, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->binIndexAt(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 227, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":225
 *         return cutil.new_borrowed_cls(HistoBin1D, & self.h1ptr().bin(i), self)
 * 
 *     def binIndexAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin index containing position x"""
 *         return self.h1ptr().binIndexAt(x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Histo1D.binIndexAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":229
 *         return self.h1ptr().binIndexAt(x)
 * 
 *     def binAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position x"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_55binAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_54binAt[] = "Histo1D.binAt(self, x)\nGet the bin containing position x";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_55binAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binAt (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_54binAt(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_54binAt(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("binAt", 0);

  /* "include/Histo1D.pyx":234
 *         #return cutil.new_borrowed_cls(HistoBin1D, & self.h1ptr().binAt(x), self)
 *         # TODO: need out-of-range check to return None?
 *         return self.bin(self.binIndexAt(x))             # <<<<<<<<<<<<<<
 * 
 *     def addBin(self, low, high):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bin); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_binIndexAt); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_x);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 234, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 234, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":229
 *         return self.h1ptr().binIndexAt(x)
 * 
 *     def binAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position x"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Histo1D.binAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":236
 *         return self.bin(self.binIndexAt(x))
 * 
 *     def addBin(self, low, high):             # <<<<<<<<<<<<<<
 *         """(low, high) -> None.
 *         Add a bin."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_57addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_56addBin[] = "Histo1D.addBin(self, low, high)\n(low, high) -> None.\n        Add a bin.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_57addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_low = 0;
  PyObject *__pyx_v_high = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_low,&__pyx_n_s_high,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_low)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_high)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 2, 2, 1); __PYX_ERR(15, 236, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addBin") < 0)) __PYX_ERR(15, 236, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_low = values[0];
    __pyx_v_high = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBin", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 236, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_56addBin(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_low, __pyx_v_high);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_56addBin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_low, PyObject *__pyx_v_high) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("addBin", 0);

  /* "include/Histo1D.pyx":239
 *         """(low, high) -> None.
 *         Add a bin."""
 *         self.h1ptr().addBin(low, high)             # <<<<<<<<<<<<<<
 * 
 *     def addBins(self, edges_or_bins):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 239, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_low); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 239, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_high); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 239, __pyx_L1_error)
  try {
    __pyx_t_1->addBin(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 239, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":236
 *         return self.bin(self.binIndexAt(x))
 * 
 *     def addBin(self, low, high):             # <<<<<<<<<<<<<<
 *         """(low, high) -> None.
 *         Add a bin."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":241
 *         self.h1ptr().addBin(low, high)
 * 
 *     def addBins(self, edges_or_bins):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_59addBins(PyObject *__pyx_v_self, PyObject *__pyx_v_edges_or_bins); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_58addBins[] = "Histo1D.addBins(self, edges_or_bins)\nAdd several bins.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_59addBins(PyObject *__pyx_v_self, PyObject *__pyx_v_edges_or_bins) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBins (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_58addBins(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_edges_or_bins));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_58addBins(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_edges_or_bins) {
  PyObject *__pyx_v_arg = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("addBins", 0);

  /* "include/Histo1D.pyx":244
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 *         arg = list(edges_or_bins)             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__addBins_edges,
 *                        self.__addBins_tuples,
 */
  __pyx_t_1 = PySequence_List(__pyx_v_edges_or_bins); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_arg = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":245
 *         # TODO: simplify / make consistent
 *         arg = list(edges_or_bins)
 *         util.try_loop([self.__addBins_edges,             # <<<<<<<<<<<<<<
 *                        self.__addBins_tuples,
 *                        self.__addBins_points,
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins_edges); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "include/Histo1D.pyx":246
 *         arg = list(edges_or_bins)
 *         util.try_loop([self.__addBins_edges,
 *                        self.__addBins_tuples,             # <<<<<<<<<<<<<<
 *                        self.__addBins_points,
 *                        self.__addBins_bins], arg)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins_tuples); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "include/Histo1D.pyx":247
 *         util.try_loop([self.__addBins_edges,
 *                        self.__addBins_tuples,
 *                        self.__addBins_points,             # <<<<<<<<<<<<<<
 *                        self.__addBins_bins], arg)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins_points); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "include/Histo1D.pyx":248
 *                        self.__addBins_tuples,
 *                        self.__addBins_points,
 *                        self.__addBins_bins], arg)             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_edges(self, edges):
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins_bins); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);

  /* "include/Histo1D.pyx":245
 *         # TODO: simplify / make consistent
 *         arg = list(edges_or_bins)
 *         util.try_loop([self.__addBins_edges,             # <<<<<<<<<<<<<<
 *                        self.__addBins_tuples,
 *                        self.__addBins_points,
 */
  __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(15, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_7, 2, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_7, 3, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;

  /* "include/Histo1D.pyx":248
 *                        self.__addBins_tuples,
 *                        self.__addBins_points,
 *                        self.__addBins_bins], arg)             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_edges(self, edges):
 */
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_8, __pyx_t_7);
  __Pyx_INCREF(__pyx_v_arg);
  __Pyx_GIVEREF(__pyx_v_arg);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_8, __pyx_v_arg);
  __pyx_t_7 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":241
 *         self.h1ptr().addBin(low, high)
 * 
 *     def addBins(self, edges_or_bins):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo1D.addBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_arg);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":250
 *                        self.__addBins_bins], arg)
 * 
 *     def __addBins_edges(self, edges):             # <<<<<<<<<<<<<<
 *         cdef vector[double] cedges
 *         for edge in edges:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_61__addBins_edges(PyObject *__pyx_v_self, PyObject *__pyx_v_edges); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_60__addBins_edges[] = "Histo1D.__addBins_edges(self, edges)";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_61__addBins_edges(PyObject *__pyx_v_self, PyObject *__pyx_v_edges) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addBins_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_60__addBins_edges(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_edges));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_60__addBins_edges(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_edges) {
  std::vector<double>  __pyx_v_cedges;
  PyObject *__pyx_v_edge = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_t_6;
  YODA::Histo1D *__pyx_t_7;
  __Pyx_RefNannySetupContext("__addBins_edges", 0);

  /* "include/Histo1D.pyx":252
 *     def __addBins_edges(self, edges):
 *         cdef vector[double] cedges
 *         for edge in edges:             # <<<<<<<<<<<<<<
 *             cedges.push_back(edge)
 *         if len(edges):
 */
  if (likely(PyList_CheckExact(__pyx_v_edges)) || PyTuple_CheckExact(__pyx_v_edges)) {
    __pyx_t_1 = __pyx_v_edges; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_edges); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 252, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(15, 252, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 252, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(15, 252, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 252, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(15, 252, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_edge, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Histo1D.pyx":253
 *         cdef vector[double] cedges
 *         for edge in edges:
 *             cedges.push_back(edge)             # <<<<<<<<<<<<<<
 *         if len(edges):
 *             self.h1ptr().addBins(cedges)
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_edge); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 253, __pyx_L1_error)
    try {
      __pyx_v_cedges.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(15, 253, __pyx_L1_error)
    }

    /* "include/Histo1D.pyx":252
 *     def __addBins_edges(self, edges):
 *         cdef vector[double] cedges
 *         for edge in edges:             # <<<<<<<<<<<<<<
 *             cedges.push_back(edge)
 *         if len(edges):
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":254
 *         for edge in edges:
 *             cedges.push_back(edge)
 *         if len(edges):             # <<<<<<<<<<<<<<
 *             self.h1ptr().addBins(cedges)
 * 
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_edges); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(15, 254, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_2 != 0);
  if (__pyx_t_6) {

    /* "include/Histo1D.pyx":255
 *             cedges.push_back(edge)
 *         if len(edges):
 *             self.h1ptr().addBins(cedges)             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_bins(self, bins):
 */
    __pyx_t_7 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(15, 255, __pyx_L1_error)
    try {
      __pyx_t_7->addBins(__pyx_v_cedges);
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(15, 255, __pyx_L1_error)
    }

    /* "include/Histo1D.pyx":254
 *         for edge in edges:
 *             cedges.push_back(edge)
 *         if len(edges):             # <<<<<<<<<<<<<<
 *             self.h1ptr().addBins(cedges)
 * 
 */
  }

  /* "include/Histo1D.pyx":250
 *                        self.__addBins_bins], arg)
 * 
 *     def __addBins_edges(self, edges):             # <<<<<<<<<<<<<<
 *         cdef vector[double] cedges
 *         for edge in edges:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Histo1D.__addBins_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edge);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":257
 *             self.h1ptr().addBins(cedges)
 * 
 *     def __addBins_bins(self, bins):             # <<<<<<<<<<<<<<
 *         self.__addBins_tuples(imap(attrgetter('xEdges'), bins))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_63__addBins_bins(PyObject *__pyx_v_self, PyObject *__pyx_v_bins); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_62__addBins_bins[] = "Histo1D.__addBins_bins(self, bins)";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_63__addBins_bins(PyObject *__pyx_v_self, PyObject *__pyx_v_bins) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addBins_bins (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_62__addBins_bins(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_bins));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_62__addBins_bins(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_bins) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__addBins_bins", 0);

  /* "include/Histo1D.pyx":258
 * 
 *     def __addBins_bins(self, bins):
 *         self.__addBins_tuples(imap(attrgetter('xEdges'), bins))             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_points(self, points):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins_tuples); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_imap); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_attrgetter); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_6);
  __Pyx_INCREF(__pyx_v_bins);
  __Pyx_GIVEREF(__pyx_v_bins);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_bins);
  __pyx_t_6 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 258, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(15, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":257
 *             self.h1ptr().addBins(cedges)
 * 
 *     def __addBins_bins(self, bins):             # <<<<<<<<<<<<<<
 *         self.__addBins_tuples(imap(attrgetter('xEdges'), bins))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Histo1D.__addBins_bins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":260
 *         self.__addBins_tuples(imap(attrgetter('xEdges'), bins))
 * 
 *     def __addBins_points(self, points):             # <<<<<<<<<<<<<<
 *         self.__addBins_tuples(imap(attrgetter('xWidth'), points))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_65__addBins_points(PyObject *__pyx_v_self, PyObject *__pyx_v_points); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_64__addBins_points[] = "Histo1D.__addBins_points(self, points)";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_65__addBins_points(PyObject *__pyx_v_self, PyObject *__pyx_v_points) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addBins_points (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_64__addBins_points(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_points));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_64__addBins_points(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_points) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__addBins_points", 0);

  /* "include/Histo1D.pyx":261
 * 
 *     def __addBins_points(self, points):
 *         self.__addBins_tuples(imap(attrgetter('xWidth'), points))             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_tuples(self, tuples):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins_tuples); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_imap); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_attrgetter); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_6);
  __Pyx_INCREF(__pyx_v_points);
  __Pyx_GIVEREF(__pyx_v_points);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_points);
  __pyx_t_6 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 261, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(15, 261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":260
 *         self.__addBins_tuples(imap(attrgetter('xEdges'), bins))
 * 
 *     def __addBins_points(self, points):             # <<<<<<<<<<<<<<
 *         self.__addBins_tuples(imap(attrgetter('xWidth'), points))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Histo1D.__addBins_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":263
 *         self.__addBins_tuples(imap(attrgetter('xWidth'), points))
 * 
 *     def __addBins_tuples(self, tuples):             # <<<<<<<<<<<<<<
 *         cdef double a, b
 *         for a, b in tuples:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_67__addBins_tuples(PyObject *__pyx_v_self, PyObject *__pyx_v_tuples); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_66__addBins_tuples[] = "Histo1D.__addBins_tuples(self, tuples)";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_67__addBins_tuples(PyObject *__pyx_v_self, PyObject *__pyx_v_tuples) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addBins_tuples (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_66__addBins_tuples(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_tuples));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_66__addBins_tuples(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_tuples) {
  double __pyx_v_a;
  double __pyx_v_b;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  double __pyx_t_9;
  double __pyx_t_10;
  YODA::Histo1D *__pyx_t_11;
  __Pyx_RefNannySetupContext("__addBins_tuples", 0);

  /* "include/Histo1D.pyx":265
 *     def __addBins_tuples(self, tuples):
 *         cdef double a, b
 *         for a, b in tuples:             # <<<<<<<<<<<<<<
 *             self.h1ptr().addBin(a, b)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_tuples)) || PyTuple_CheckExact(__pyx_v_tuples)) {
    __pyx_t_1 = __pyx_v_tuples; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_tuples); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 265, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(15, 265, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 265, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(15, 265, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 265, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(15, 265, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(15, 265, __pyx_L1_error)
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 265, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(15, 265, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(15, 265, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) __PYX_ERR(15, 265, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(15, 265, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 265, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(15, 265, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_a = __pyx_t_9;
    __pyx_v_b = __pyx_t_10;

    /* "include/Histo1D.pyx":266
 *         cdef double a, b
 *         for a, b in tuples:
 *             self.h1ptr().addBin(a, b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_11 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_11 == NULL)) __PYX_ERR(15, 266, __pyx_L1_error)
    try {
      __pyx_t_11->addBin(__pyx_v_a, __pyx_v_b);
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(15, 266, __pyx_L1_error)
    }

    /* "include/Histo1D.pyx":265
 *     def __addBins_tuples(self, tuples):
 *         cdef double a, b
 *         for a, b in tuples:             # <<<<<<<<<<<<<<
 *             self.h1ptr().addBin(a, b)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":263
 *         self.__addBins_tuples(imap(attrgetter('xWidth'), points))
 * 
 *     def __addBins_tuples(self, tuples):             # <<<<<<<<<<<<<<
 *         cdef double a, b
 *         for a, b in tuples:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo1D.__addBins_tuples", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":269
 * 
 * 
 *     def mergeBins(self, ia, ib):             # <<<<<<<<<<<<<<
 *         """mergeBins(ia, ib) -> None.
 *         Merge bins from indices ia through ib."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_69mergeBins(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_68mergeBins[] = "Histo1D.mergeBins(self, ia, ib)\nmergeBins(ia, ib) -> None.\n        Merge bins from indices ia through ib.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_69mergeBins(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ia = 0;
  PyObject *__pyx_v_ib = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mergeBins (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ia,&__pyx_n_s_ib,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ia)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ib)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("mergeBins", 1, 2, 2, 1); __PYX_ERR(15, 269, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mergeBins") < 0)) __PYX_ERR(15, 269, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ia = values[0];
    __pyx_v_ib = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mergeBins", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 269, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.mergeBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_68mergeBins(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_ia, __pyx_v_ib);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_68mergeBins(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_ia, PyObject *__pyx_v_ib) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  __Pyx_RefNannySetupContext("mergeBins", 0);

  /* "include/Histo1D.pyx":272
 *         """mergeBins(ia, ib) -> None.
 *         Merge bins from indices ia through ib."""
 *         self.h1ptr().mergeBins(ia, ib)             # <<<<<<<<<<<<<<
 * 
 *     def rebinBy(self, n, begin=0, end=None):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 272, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_ia); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 272, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_As_size_t(__pyx_v_ib); if (unlikely((__pyx_t_3 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 272, __pyx_L1_error)
  try {
    __pyx_t_1->mergeBins(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 272, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":269
 * 
 * 
 *     def mergeBins(self, ia, ib):             # <<<<<<<<<<<<<<
 *         """mergeBins(ia, ib) -> None.
 *         Merge bins from indices ia through ib."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.mergeBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":274
 *         self.h1ptr().mergeBins(ia, ib)
 * 
 *     def rebinBy(self, n, begin=0, end=None):             # <<<<<<<<<<<<<<
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_71rebinBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_70rebinBy[] = "Histo1D.rebinBy(self, n, begin=0, end=None)\n(n) -> None.\n        Merge every group of n bins together (between begin and end, if specified).";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_71rebinBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n = 0;
  PyObject *__pyx_v_begin = 0;
  PyObject *__pyx_v_end = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebinBy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n,&__pyx_n_s_begin,&__pyx_n_s_end,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)__pyx_int_0);
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_begin);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_end);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rebinBy") < 0)) __PYX_ERR(15, 274, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_n = values[0];
    __pyx_v_begin = values[1];
    __pyx_v_end = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rebinBy", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 274, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.rebinBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_70rebinBy(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_n, __pyx_v_begin, __pyx_v_end);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_70rebinBy(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_n, PyObject *__pyx_v_begin, PyObject *__pyx_v_end) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  YODA::Histo1D *__pyx_t_4;
  unsigned int __pyx_t_5;
  size_t __pyx_t_6;
  size_t __pyx_t_7;
  __Pyx_RefNannySetupContext("rebinBy", 0);
  __Pyx_INCREF(__pyx_v_end);

  /* "include/Histo1D.pyx":277
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 *         if end is None:             # <<<<<<<<<<<<<<
 *             end = self.numBins
 *         self.h1ptr().rebinBy(int(n), begin, end)
 */
  __pyx_t_1 = (__pyx_v_end == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "include/Histo1D.pyx":278
 *         Merge every group of n bins together (between begin and end, if specified)."""
 *         if end is None:
 *             end = self.numBins             # <<<<<<<<<<<<<<
 *         self.h1ptr().rebinBy(int(n), begin, end)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numBins); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_end, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "include/Histo1D.pyx":277
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 *         if end is None:             # <<<<<<<<<<<<<<
 *             end = self.numBins
 *         self.h1ptr().rebinBy(int(n), begin, end)
 */
  }

  /* "include/Histo1D.pyx":279
 *         if end is None:
 *             end = self.numBins
 *         self.h1ptr().rebinBy(int(n), begin, end)             # <<<<<<<<<<<<<<
 * 
 *     def rebinTo(self, edges):
 */
  __pyx_t_4 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(15, 279, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_n); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_As_unsigned_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(15, 279, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_v_begin); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 279, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_end); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(15, 279, __pyx_L1_error)
  try {
    __pyx_t_4->rebinBy(__pyx_t_5, __pyx_t_6, __pyx_t_7);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 279, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":274
 *         self.h1ptr().mergeBins(ia, ib)
 * 
 *     def rebinBy(self, n, begin=0, end=None):             # <<<<<<<<<<<<<<
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo1D.rebinBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_end);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":281
 *         self.h1ptr().rebinBy(int(n), begin, end)
 * 
 *     def rebinTo(self, edges):             # <<<<<<<<<<<<<<
 *         """([edges]) -> None.
 *         Merge bins to produce the given new edges... which must be a subset of the current ones."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_73rebinTo(PyObject *__pyx_v_self, PyObject *__pyx_v_edges); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_72rebinTo[] = "Histo1D.rebinTo(self, edges)\n([edges]) -> None.\n        Merge bins to produce the given new edges... which must be a subset of the current ones.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_73rebinTo(PyObject *__pyx_v_self, PyObject *__pyx_v_edges) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebinTo (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_72rebinTo(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((PyObject *)__pyx_v_edges));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_72rebinTo(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_edges) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  std::vector<double>  __pyx_t_2;
  __Pyx_RefNannySetupContext("rebinTo", 0);

  /* "include/Histo1D.pyx":284
 *         """([edges]) -> None.
 *         Merge bins to produce the given new edges... which must be a subset of the current ones."""
 *         self.h1ptr().rebinTo(edges)             # <<<<<<<<<<<<<<
 * 
 *     def rebin(self, arg, **kwargs):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 284, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_double(__pyx_v_edges); if (unlikely(PyErr_Occurred())) __PYX_ERR(15, 284, __pyx_L1_error)
  try {
    __pyx_t_1->rebinTo(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 284, __pyx_L1_error)
  }

  /* "include/Histo1D.pyx":281
 *         self.h1ptr().rebinBy(int(n), begin, end)
 * 
 *     def rebinTo(self, edges):             # <<<<<<<<<<<<<<
 *         """([edges]) -> None.
 *         Merge bins to produce the given new edges... which must be a subset of the current ones."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.rebinTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":286
 *         self.h1ptr().rebinTo(edges)
 * 
 *     def rebin(self, arg, **kwargs):             # <<<<<<<<<<<<<<
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_75rebin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_74rebin[] = "Histo1D.rebin(self, arg, **kwargs)\n(n) -> None or ([edges]) -> None\n        Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_75rebin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_arg = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebin (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_arg,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_arg)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "rebin") < 0)) __PYX_ERR(15, 286, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_arg = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rebin", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 286, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("yoda.core.Histo1D.rebin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_74rebin(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_arg, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_74rebin(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_arg, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("rebin", 0);

  /* "include/Histo1D.pyx":289
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 *         if hasattr(arg, "__iter__"):             # <<<<<<<<<<<<<<
 *             self.rebinTo(arg, **kwargs)
 *         else:
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_arg, __pyx_n_s_iter); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(15, 289, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "include/Histo1D.pyx":290
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 *         if hasattr(arg, "__iter__"):
 *             self.rebinTo(arg, **kwargs)             # <<<<<<<<<<<<<<
 *         else:
 *             self.rebinBy(arg, **kwargs)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rebinTo); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_arg);
    __Pyx_GIVEREF(__pyx_v_arg);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_arg);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 290, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Histo1D.pyx":289
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 *         if hasattr(arg, "__iter__"):             # <<<<<<<<<<<<<<
 *             self.rebinTo(arg, **kwargs)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "include/Histo1D.pyx":292
 *             self.rebinTo(arg, **kwargs)
 *         else:
 *             self.rebinBy(arg, **kwargs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rebinBy); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 292, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 292, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_arg);
    __Pyx_GIVEREF(__pyx_v_arg);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_arg);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_3)) __PYX_ERR(15, 292, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "include/Histo1D.pyx":286
 *         self.h1ptr().rebinTo(edges)
 * 
 *     def rebin(self, arg, **kwargs):             # <<<<<<<<<<<<<<
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo1D.rebin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":295
 * 
 * 
 *     def mkScatter(self, usefocus=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 *         Convert this Histo1D to a Scatter2D, with y representing bin heights
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_77mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_76mkScatter[] = "Histo1D.mkScatter(self, usefocus=False)\nNone -> Scatter2D.\n        Convert this Histo1D to a Scatter2D, with y representing bin heights\n        (not sumW) and height errors.";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_77mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_usefocus = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_usefocus,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usefocus);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mkScatter") < 0)) __PYX_ERR(15, 295, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_usefocus = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mkScatter", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 295, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_76mkScatter(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_usefocus);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_76mkScatter(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_usefocus) {
  YODA::Scatter2D __pyx_v_s2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  bool __pyx_t_2;
  YODA::Scatter2D __pyx_t_3;
  YODA::Scatter2D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Histo1D.pyx":299
 *         Convert this Histo1D to a Scatter2D, with y representing bin heights
 *         (not sumW) and height errors."""
 *         cdef c.Scatter2D s2 = c.mkScatter_Histo1D(deref(self.h1ptr()), usefocus)             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 299, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_usefocus); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 299, __pyx_L1_error)
  try {
    __pyx_t_3 = YODA::mkScatter((*__pyx_t_1), __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 299, __pyx_L1_error)
  }
  __pyx_v_s2 = __pyx_t_3;

  /* "include/Histo1D.pyx":300
 *         (not sumW) and height errors."""
 *         cdef c.Scatter2D s2 = c.mkScatter_Histo1D(deref(self.h1ptr()), usefocus)
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_4 = __pyx_v_s2.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 300, __pyx_L1_error)
  }
  __pyx_t_5 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(15, 300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":295
 * 
 * 
 *     def mkScatter(self, usefocus=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 *         Convert this Histo1D to a Scatter2D, with y representing bin heights
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo1D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":303
 * 
 * 
 *     def toIntegral(self, efficiency=False, includeunderflow=True, includeoverflow=True):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_79toIntegral(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_78toIntegral[] = "Histo1D.toIntegral(self, efficiency=False, includeunderflow=True, includeoverflow=True)\nNone -> Scatter2D.\n\n        Convert this Histo1D to a Scatter2D representing an integral (i.e. cumulative)\n        histogram constructed from this differential one.\n\n        The efficiency argument is used to construct an 'efficiency integral' histogram\n        and the includeXXXflow bools determine whether under and overflows are included\n        in computing the (efficiency) integral.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_79toIntegral(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_efficiency = 0;
  PyObject *__pyx_v_includeunderflow = 0;
  PyObject *__pyx_v_includeoverflow = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("toIntegral (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_efficiency,&__pyx_n_s_includeunderflow,&__pyx_n_s_includeoverflow,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_efficiency);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeunderflow);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflow);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "toIntegral") < 0)) __PYX_ERR(15, 303, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_efficiency = values[0];
    __pyx_v_includeunderflow = values[1];
    __pyx_v_includeoverflow = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("toIntegral", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 303, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.toIntegral", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_78toIntegral(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_efficiency, __pyx_v_includeunderflow, __pyx_v_includeoverflow);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_78toIntegral(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, PyObject *__pyx_v_efficiency, PyObject *__pyx_v_includeunderflow, PyObject *__pyx_v_includeoverflow) {
  YODA::Scatter2D __pyx_v_s;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  YODA::Histo1D *__pyx_t_3;
  bool __pyx_t_4;
  YODA::Scatter2D __pyx_t_5;
  bool __pyx_t_6;
  YODA::Scatter2D *__pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("toIntegral", 0);

  /* "include/Histo1D.pyx":314
 *         """
 *         cdef c.Scatter2D s
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s = c.Histo1D_toIntegral(deref(self.h1ptr()), includeunderflow)
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_efficiency); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(15, 314, __pyx_L1_error)
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "include/Histo1D.pyx":315
 *         cdef c.Scatter2D s
 *         if not efficiency:
 *             s = c.Histo1D_toIntegral(deref(self.h1ptr()), includeunderflow)             # <<<<<<<<<<<<<<
 *         else:
 *             s = c.Histo1D_toIntegralEff(deref(self.h1ptr()), includeunderflow, includeoverflow)
 */
    __pyx_t_3 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(15, 315, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_includeunderflow); if (unlikely((__pyx_t_4 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 315, __pyx_L1_error)
    try {
      __pyx_t_5 = toIntegralHisto((*__pyx_t_3), __pyx_t_4);
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(15, 315, __pyx_L1_error)
    }
    __pyx_v_s = __pyx_t_5;

    /* "include/Histo1D.pyx":314
 *         """
 *         cdef c.Scatter2D s
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s = c.Histo1D_toIntegral(deref(self.h1ptr()), includeunderflow)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "include/Histo1D.pyx":317
 *             s = c.Histo1D_toIntegral(deref(self.h1ptr()), includeunderflow)
 *         else:
 *             s = c.Histo1D_toIntegralEff(deref(self.h1ptr()), includeunderflow, includeoverflow)             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 * 
 */
  /*else*/ {
    __pyx_t_3 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(15, 317, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_includeunderflow); if (unlikely((__pyx_t_4 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 317, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflow); if (unlikely((__pyx_t_6 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(15, 317, __pyx_L1_error)
    try {
      __pyx_t_5 = toIntegralEfficiencyHisto((*__pyx_t_3), __pyx_t_4, __pyx_t_6);
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(15, 317, __pyx_L1_error)
    }
    __pyx_v_s = __pyx_t_5;
  }
  __pyx_L3:;

  /* "include/Histo1D.pyx":318
 *         else:
 *             s = c.Histo1D_toIntegralEff(deref(self.h1ptr()), includeunderflow, includeoverflow)
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())             # <<<<<<<<<<<<<<
 * 
 *     def divideBy(self, Histo1D h, efficiency=False):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_7 = __pyx_v_s.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 318, __pyx_L1_error)
  }
  __pyx_t_8 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(15, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_r = __pyx_t_8;
  __pyx_t_8 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":303
 * 
 * 
 *     def toIntegral(self, efficiency=False, includeunderflow=True, includeoverflow=True):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Histo1D.toIntegral", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":320
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 * 
 *     def divideBy(self, Histo1D h, efficiency=False):             # <<<<<<<<<<<<<<
 *         """Histo1D -> Scatter2D
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_81divideBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo1D_80divideBy[] = "Histo1D.divideBy(self, Histo1D h, efficiency=False)\nHisto1D -> Scatter2D\n\n        Divide this histogram by h, returning a Scatter2D. The optional 'efficiency'\n        argument, if set True, will use a binomial efficiency treatment of the errors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_81divideBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_h = 0;
  PyObject *__pyx_v_efficiency = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("divideBy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_h,&__pyx_n_s_efficiency,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_h)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_efficiency);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "divideBy") < 0)) __PYX_ERR(15, 320, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Histo1D *)values[0]);
    __pyx_v_efficiency = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("divideBy", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(15, 320, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_h), __pyx_ptype_4yoda_4core_Histo1D, 1, "h", 0))) __PYX_ERR(15, 320, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_80divideBy(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), __pyx_v_h, __pyx_v_efficiency);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_80divideBy(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_h, PyObject *__pyx_v_efficiency) {
  YODA::Scatter2D __pyx_v_s;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  YODA::Histo1D *__pyx_t_3;
  YODA::Histo1D *__pyx_t_4;
  YODA::Scatter2D __pyx_t_5;
  YODA::Scatter2D *__pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("divideBy", 0);

  /* "include/Histo1D.pyx":329
 *         #     raise ValueError("Histograms must be of the same type to be divided")
 *         cdef c.Scatter2D s
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s = c.Histo1D_div_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_efficiency); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(15, 329, __pyx_L1_error)
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "include/Histo1D.pyx":330
 *         cdef c.Scatter2D s
 *         if not efficiency:
 *             s = c.Histo1D_div_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))             # <<<<<<<<<<<<<<
 *         else:
 *             s = c.Histo1D_eff_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))
 */
    __pyx_t_3 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(15, 330, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_h); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(15, 330, __pyx_L1_error)
    try {
      __pyx_t_5 = divide((*__pyx_t_3), (*__pyx_t_4));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(15, 330, __pyx_L1_error)
    }
    __pyx_v_s = __pyx_t_5;

    /* "include/Histo1D.pyx":329
 *         #     raise ValueError("Histograms must be of the same type to be divided")
 *         cdef c.Scatter2D s
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s = c.Histo1D_div_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "include/Histo1D.pyx":332
 *             s = c.Histo1D_div_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))
 *         else:
 *             s = c.Histo1D_eff_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 * 
 */
  /*else*/ {
    __pyx_t_4 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(15, 332, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_h); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(15, 332, __pyx_L1_error)
    try {
      __pyx_t_5 = efficiency((*__pyx_t_4), (*__pyx_t_3));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(15, 332, __pyx_L1_error)
    }
    __pyx_v_s = __pyx_t_5;
  }
  __pyx_L3:;

  /* "include/Histo1D.pyx":333
 *         else:
 *             s = c.Histo1D_eff_Histo1D(deref(self.h1ptr()), deref(h.h1ptr()))
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_6 = __pyx_v_s.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(15, 333, __pyx_L1_error)
  }
  __pyx_t_7 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(15, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_r = __pyx_t_7;
  __pyx_t_7 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":320
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 * 
 *     def divideBy(self, Histo1D h, efficiency=False):             # <<<<<<<<<<<<<<
 *         """Histo1D -> Scatter2D
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo1D.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":338
 *     ## In-place special methods
 * 
 *     def __iadd__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         c.Histo1D_iadd_Histo1D(self.h1ptr(), other.h1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_83__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_83__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo1D, 1, "other", 0))) __PYX_ERR(15, 338, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_82__iadd__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_82__iadd__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  YODA::Histo1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/Histo1D.pyx":339
 * 
 *     def __iadd__(Histo1D self, Histo1D other):
 *         c.Histo1D_iadd_Histo1D(self.h1ptr(), other.h1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 339, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(15, 339, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/Histo1D.pyx":340
 *     def __iadd__(Histo1D self, Histo1D other):
 *         c.Histo1D_iadd_Histo1D(self.h1ptr(), other.h1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __isub__(Histo1D self, Histo1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Histo1D.pyx":338
 *     ## In-place special methods
 * 
 *     def __iadd__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         c.Histo1D_iadd_Histo1D(self.h1ptr(), other.h1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":342
 *         return self
 * 
 *     def __isub__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         c.Histo1D_isub_Histo1D(self.h1ptr(), other.h1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_85__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_85__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo1D, 1, "other", 0))) __PYX_ERR(15, 342, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_84__isub__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_84__isub__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo1D *__pyx_t_1;
  YODA::Histo1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/Histo1D.pyx":343
 * 
 *     def __isub__(Histo1D self, Histo1D other):
 *         c.Histo1D_isub_Histo1D(self.h1ptr(), other.h1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(15, 343, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(15, 343, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/Histo1D.pyx":344
 *     def __isub__(Histo1D self, Histo1D other):
 *         c.Histo1D_isub_Histo1D(self.h1ptr(), other.h1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     # def __imul__(Histo1D self, double x):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Histo1D.pyx":342
 *         return self
 * 
 *     def __isub__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         c.Histo1D_isub_Histo1D(self.h1ptr(), other.h1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo1D.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":363
 *     #     return self.clone()
 * 
 *     def __add__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         # print "BAR"
 *         h = Histo1D()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_87__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_87__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Histo1D, 1, "self", 0))) __PYX_ERR(15, 363, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo1D, 1, "other", 0))) __PYX_ERR(15, 363, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_86__add__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_86__add__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Histo1D *__pyx_t_2;
  YODA::Histo1D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Histo1D.pyx":365
 *     def __add__(Histo1D self, Histo1D other):
 *         # print "BAR"
 *         h = Histo1D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Histo1D_add_Histo1D(self.h1ptr(), other.h1ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Histo1D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":366
 *         # print "BAR"
 *         h = Histo1D()
 *         cutil.set_owned_ptr(h, c.Histo1D_add_Histo1D(self.h1ptr(), other.h1ptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(15, 366, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(15, 366, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_add(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":367
 *         h = Histo1D()
 *         cutil.set_owned_ptr(h, c.Histo1D_add_Histo1D(self.h1ptr(), other.h1ptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     # TODO: Cython doesn't support type overloading for special functions?
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Histo1D.pyx":363
 *     #     return self.clone()
 * 
 *     def __add__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         # print "BAR"
 *         h = Histo1D()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo1D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":385
 *     #     return self
 * 
 *     def __sub__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         h = Histo1D()
 *         cutil.set_owned_ptr(h, c.Histo1D_sub_Histo1D(self.h1ptr(), other.h1ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_89__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_89__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Histo1D, 1, "self", 0))) __PYX_ERR(15, 385, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo1D, 1, "other", 0))) __PYX_ERR(15, 385, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_88__sub__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo1D_88__sub__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Histo1D *__pyx_t_2;
  YODA::Histo1D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Histo1D.pyx":386
 * 
 *     def __sub__(Histo1D self, Histo1D other):
 *         h = Histo1D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Histo1D_sub_Histo1D(self.h1ptr(), other.h1ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Histo1D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":387
 *     def __sub__(Histo1D self, Histo1D other):
 *         h = Histo1D()
 *         cutil.set_owned_ptr(h, c.Histo1D_sub_Histo1D(self.h1ptr(), other.h1ptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(15, 387, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_7Histo1D_h1ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(15, 387, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_sub(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo1D.pyx":388
 *         h = Histo1D()
 *         cutil.set_owned_ptr(h, c.Histo1D_sub_Histo1D(self.h1ptr(), other.h1ptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     # def __mul__(Histo1D self, double x):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Histo1D.pyx":385
 *     #     return self
 * 
 *     def __sub__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         h = Histo1D()
 *         cutil.set_owned_ptr(h, c.Histo1D_sub_Histo1D(self.h1ptr(), other.h1ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo1D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo1D.pyx":397
 *     #     return h
 * 
 *     def __div__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

/* Python wrapper */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_91__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo1D_91__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Histo1D, 1, "self", 0))) __PYX_ERR(15, 397, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo1D, 1, "other", 0))) __PYX_ERR(15, 397, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo1D_90__div__(((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_7Histo1D_90__div__(struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "include/Histo1D.pyx":398
 * 
 *     def __div__(Histo1D self, Histo1D other):
 *         return self.divideBy(other)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_divideBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(15, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_other)); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(15, 398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_other));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_other));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_other));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(15, 398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo1D.pyx":397
 *     #     return h
 * 
 *     def __div__(Histo1D self, Histo1D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Histo1D.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

/* "include/Profile1D.pyx":29
 *     """
 * 
 *     cdef inline c.Profile1D* p1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Profile1D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Profile1D *__pyx_f_4yoda_4core_9Profile1D_p1ptr(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  YODA::Profile1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("p1ptr", 0);

  /* "include/Profile1D.pyx":30
 * 
 *     cdef inline c.Profile1D* p1ptr(self) except NULL:
 *         return <c.Profile1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 30, __pyx_L1_error)
  __pyx_r = ((YODA::Profile1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":29
 *     """
 * 
 *     cdef inline c.Profile1D* p1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Profile1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.p1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":33
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init3, self.__init5], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_9Profile1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_9Profile1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D___init__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_9Profile1D___init__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Profile1D.pyx":34
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init2, self.__init3, self.__init5], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init2(self, char *path="", char *title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init2); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init3); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init5); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_args); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, __pyx_v_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Profile1D.pyx":33
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init3, self.__init5], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":36
 *         util.try_loop([self.__init2, self.__init3, self.__init5], *args, **kwargs)
 * 
 *     def __init2(self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(
 *             self, new c.Profile1D(string(path), string(title)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_2__init2[] = "Profile1D.__init2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init2") < 0)) __PYX_ERR(16, 36, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(16, 36, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(16, 36, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 36, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_2__init2(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_2__init2(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Profile1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init2", 0);

  /* "include/Profile1D.pyx":38
 *     def __init2(self, char *path="", char *title=""):
 *         cutil.set_owned_ptr(
 *             self, new c.Profile1D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(16, 38, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(16, 38, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Profile1D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 38, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":37
 * 
 *     def __init2(self, char *path="", char *title=""):
 *         cutil.set_owned_ptr(             # <<<<<<<<<<<<<<
 *             self, new c.Profile1D(string(path), string(title)))
 * 
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Profile1D.pyx":36
 *         util.try_loop([self.__init2, self.__init3, self.__init5], *args, **kwargs)
 * 
 *     def __init2(self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(
 *             self, new c.Profile1D(string(path), string(title)))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile1D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":41
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_5__init3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_4__init3[] = "Profile1D.__init3(self, bins_or_edges, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_5__init3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_bins_or_edges = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_bins_or_edges,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bins_or_edges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init3") < 0)) __PYX_ERR(16, 41, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_bins_or_edges = values[0];
    if (values[1]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(16, 41, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[2]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(16, 41, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init3", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 41, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__init3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_4__init3(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_bins_or_edges, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_4yoda_4core_9Profile1D_7__init3_2generator1(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "include/Profile1D.pyx":46
 *         try:
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)             # <<<<<<<<<<<<<<
 *             cutil.set_owned_ptr(self, new c.Profile1D(edges, string(path), string(title)))
 *         except:
 */

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_7__init3_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *)__pyx_tp_new_4yoda_4core___pyx_scope_struct_3_genexpr(__pyx_ptype_4yoda_4core___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_4yoda_4core_9Profile1D_7__init3_2generator1, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_init3_locals_genexpr, __pyx_n_s_yoda_core); if (unlikely(!gen)) __PYX_ERR(16, 46, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__init3.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_4yoda_4core_9Profile1D_7__init3_2generator1(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(16, 46, __pyx_L1_error)
  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(16, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges)) { __Pyx_RaiseClosureNameError("bins_or_edges"); __PYX_ERR(16, 46, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_bins_or_edges); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 46, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(16, 46, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 46, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(16, 46, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 46, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(16, 46, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_x);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_x, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyNumber_Float(__pyx_cur_scope->__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_4))) __PYX_ERR(16, 46, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":41
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4__init3(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_bins_or_edges, char *__pyx_v_path, char *__pyx_v_title) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *__pyx_cur_scope;
  std::vector<double>  __pyx_v_edges;
  PyObject *__pyx_v_bins = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::vector<double>  __pyx_t_6;
  std::string __pyx_t_7;
  std::string __pyx_t_8;
  YODA::Profile1D *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  Py_ssize_t __pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  __Pyx_RefNannySetupContext("__init3", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *)__pyx_tp_new_4yoda_4core___pyx_scope_struct_2___init3(__pyx_ptype_4yoda_4core___pyx_scope_struct_2___init3, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_bins_or_edges = __pyx_v_bins_or_edges;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_bins_or_edges);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_bins_or_edges);

  /* "include/Profile1D.pyx":44
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 *         try:             # <<<<<<<<<<<<<<
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Profile1D.pyx":46
 *         try:
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)             # <<<<<<<<<<<<<<
 *             cutil.set_owned_ptr(self, new c.Profile1D(edges, string(path), string(title)))
 *         except:
 */
      __pyx_t_4 = __pyx_pf_4yoda_4core_9Profile1D_7__init3_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 46, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_Generator_Next(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 46, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __pyx_convert_vector_from_py_double(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(16, 46, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_edges = __pyx_t_6;

      /* "include/Profile1D.pyx":47
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 *             cutil.set_owned_ptr(self, new c.Profile1D(edges, string(path), string(title)))             # <<<<<<<<<<<<<<
 *         except:
 *             ## Assume it's a list of HistoBin1D
 */
      try {
        __pyx_t_7 = std::string(__pyx_v_path);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(16, 47, __pyx_L3_error)
      }
      try {
        __pyx_t_8 = std::string(__pyx_v_title);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(16, 47, __pyx_L3_error)
      }
      try {
        __pyx_t_9 = new YODA::Profile1D(__pyx_v_edges, __pyx_t_7, __pyx_t_8);
      } catch(...) {
        translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
        __PYX_ERR(16, 47, __pyx_L3_error)
      }
      __pyx_t_5 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 47, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "include/Profile1D.pyx":44
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 *         try:             # <<<<<<<<<<<<<<
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Profile1D.pyx":48
 *             edges = list(float(x) for x in bins_or_edges)
 *             cutil.set_owned_ptr(self, new c.Profile1D(edges, string(path), string(title)))
 *         except:             # <<<<<<<<<<<<<<
 *             ## Assume it's a list of HistoBin1D
 *             bins = bins_or_edges
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Profile1D.__init3", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_10) < 0) __PYX_ERR(16, 48, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_10);

      /* "include/Profile1D.pyx":50
 *         except:
 *             ## Assume it's a list of HistoBin1D
 *             bins = bins_or_edges             # <<<<<<<<<<<<<<
 *             self.__init2(path, title)
 *             self.addBins(bins)
 */
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_bins_or_edges);
      __pyx_v_bins = __pyx_cur_scope->__pyx_v_bins_or_edges;

      /* "include/Profile1D.pyx":51
 *             ## Assume it's a list of HistoBin1D
 *             bins = bins_or_edges
 *             self.__init2(path, title)             # <<<<<<<<<<<<<<
 *             self.addBins(bins)
 * 
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init2); if (unlikely(!__pyx_t_12)) __PYX_ERR(16, 51, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = __Pyx_PyBytes_FromString(__pyx_v_path); if (unlikely(!__pyx_t_13)) __PYX_ERR(16, 51, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyBytes_FromString(__pyx_v_title); if (unlikely(!__pyx_t_14)) __PYX_ERR(16, 51, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_15 = NULL;
      __pyx_t_16 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_15)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
          __pyx_t_16 = 1;
        }
      }
      __pyx_t_17 = PyTuple_New(2+__pyx_t_16); if (unlikely(!__pyx_t_17)) __PYX_ERR(16, 51, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_17);
      if (__pyx_t_15) {
        __Pyx_GIVEREF(__pyx_t_15); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_15); __pyx_t_15 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_16, __pyx_t_13);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_16, __pyx_t_14);
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_17, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(16, 51, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

      /* "include/Profile1D.pyx":52
 *             bins = bins_or_edges
 *             self.__init2(path, title)
 *             self.addBins(bins)             # <<<<<<<<<<<<<<
 * 
 *     def __init5(self, size_t nbins, double lower, double upper, char *path="", char *title=""):
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addBins); if (unlikely(!__pyx_t_12)) __PYX_ERR(16, 52, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_17 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_17)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      if (!__pyx_t_17) {
        __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_bins); if (unlikely(!__pyx_t_11)) __PYX_ERR(16, 52, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_11);
      } else {
        __pyx_t_14 = PyTuple_New(1+1); if (unlikely(!__pyx_t_14)) __PYX_ERR(16, 52, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_GIVEREF(__pyx_t_17); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_17); __pyx_t_17 = NULL;
        __Pyx_INCREF(__pyx_v_bins);
        __Pyx_GIVEREF(__pyx_v_bins);
        PyTuple_SET_ITEM(__pyx_t_14, 0+1, __pyx_v_bins);
        __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_14, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(16, 52, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      }
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;

    /* "include/Profile1D.pyx":44
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 *         try:             # <<<<<<<<<<<<<<
 *             ## If float conversions work for all elements, it's a list of edges:
 *             edges = list(float(x) for x in bins_or_edges)
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Profile1D.pyx":41
 * 
 *     # TODO: Is Cython clever enough that we can make 3a and 3b versions and let it do the type inference?
 *     def __init3(self, bins_or_edges, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do this type-checking better
 *         cdef vector[double] edges
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("yoda.core.Profile1D.__init3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bins);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":54
 *             self.addBins(bins)
 * 
 *     def __init5(self, size_t nbins, double lower, double upper, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(
 *             self, new c.Profile1D(nbins, lower, upper, string(path), string(title)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_7__init5(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_6__init5[] = "Profile1D.__init5(self, size_t nbins, double lower, double upper, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_7__init5(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_nbins;
  double __pyx_v_lower;
  double __pyx_v_upper;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init5 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nbins,&__pyx_n_s_lower,&__pyx_n_s_upper,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nbins)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lower)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init5", 0, 3, 5, 1); __PYX_ERR(16, 54, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_upper)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init5", 0, 3, 5, 2); __PYX_ERR(16, 54, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init5") < 0)) __PYX_ERR(16, 54, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_nbins = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_nbins == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(16, 54, __pyx_L3_error)
    __pyx_v_lower = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_lower == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 54, __pyx_L3_error)
    __pyx_v_upper = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_upper == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 54, __pyx_L3_error)
    if (values[3]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[3]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(16, 54, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[4]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[4]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(16, 54, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init5", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 54, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__init5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_6__init5(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_nbins, __pyx_v_lower, __pyx_v_upper, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_6__init5(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, size_t __pyx_v_nbins, double __pyx_v_lower, double __pyx_v_upper, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Profile1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init5", 0);

  /* "include/Profile1D.pyx":56
 *     def __init5(self, size_t nbins, double lower, double upper, char *path="", char *title=""):
 *         cutil.set_owned_ptr(
 *             self, new c.Profile1D(nbins, lower, upper, string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(16, 56, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(16, 56, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Profile1D(__pyx_v_nbins, __pyx_v_lower, __pyx_v_upper, __pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 56, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":55
 * 
 *     def __init5(self, size_t nbins, double lower, double upper, char *path="", char *title=""):
 *         cutil.set_owned_ptr(             # <<<<<<<<<<<<<<
 *             self, new c.Profile1D(nbins, lower, upper, string(path), string(title)))
 * 
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Profile1D.pyx":54
 *             self.addBins(bins)
 * 
 *     def __init5(self, size_t nbins, double lower, double upper, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(
 *             self, new c.Profile1D(nbins, lower, upper, string(path), string(title)))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile1D.__init5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":59
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         "Number of bins"
 *         return self.p1ptr().bins().size()
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_9Profile1D_9__len__(PyObject *__pyx_v_self); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_8__len__[] = "Number of bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_9Profile1D_8__len__;
#endif
static Py_ssize_t __pyx_pw_4yoda_4core_9Profile1D_9__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_8__len__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_9Profile1D_8__len__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Profile1D.pyx":61
 *     def __len__(self):
 *         "Number of bins"
 *         return self.p1ptr().bins().size()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, i):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 61, __pyx_L1_error)
  __pyx_r = __pyx_t_1->bins().size();
  goto __pyx_L0;

  /* "include/Profile1D.pyx":59
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         "Number of bins"
 *         return self.p1ptr().bins().size()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":63
 *         return self.p1ptr().bins().size()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.p1ptr().bins().size())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_10__getitem__[] = "Direct access to bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_9Profile1D_10__getitem__;
#endif
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_10__getitem__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_10__getitem__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_i) {
  size_t __pyx_v_ii;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Profile1D *__pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Profile1D.pyx":65
 *     def __getitem__(self, i):
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.p1ptr().bins().size())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(ProfileBin1D, & self.p1ptr().bin(ii), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_i); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(16, 65, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 65, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_2->bins().size()); if (unlikely(__pyx_t_3 == 0 && PyErr_Occurred())) __PYX_ERR(16, 65, __pyx_L1_error)
  __pyx_v_ii = __pyx_t_3;

  /* "include/Profile1D.pyx":66
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.p1ptr().bins().size())
 *         return cutil.new_borrowed_cls(ProfileBin1D, & self.p1ptr().bin(ii), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 66, __pyx_L1_error)
  __pyx_t_4 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin1D), (&__pyx_t_2->bin(__pyx_v_ii)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":63
 *         return self.p1ptr().bins().size()
 * 
 *     def __getitem__(self, i):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t ii = cutil.pythonic_index(i, self.p1ptr().bins().size())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile1D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":69
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \
 *                (self.__class__.__name__, self.path,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_12__repr__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_12__repr__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Profile1D.pyx":70
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \             # <<<<<<<<<<<<<<
 *                (self.__class__.__name__, self.path,
 *                 len(self.bins), self.sumW())
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/Profile1D.pyx":71
 *     def __repr__(self):
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \
 *                (self.__class__.__name__, self.path,             # <<<<<<<<<<<<<<
 *                 len(self.bins), self.sumW())
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "include/Profile1D.pyx":72
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \
 *                (self.__class__.__name__, self.path,
 *                 len(self.bins), self.sumW())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bins); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(16, 72, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_6)) __PYX_ERR(16, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 72, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 72, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/Profile1D.pyx":71
 *     def __repr__(self):
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \
 *                (self.__class__.__name__, self.path,             # <<<<<<<<<<<<<<
 *                 len(self.bins), self.sumW())
 * 
 */
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(16, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_5 = 0;

  /* "include/Profile1D.pyx":70
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \             # <<<<<<<<<<<<<<
 *                (self.__class__.__name__, self.path,
 *                 len(self.bins), self.sumW())
 */
  __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_bins_sumw_0_2g, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":69
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % \
 *                (self.__class__.__name__, self.path,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile1D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":75
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_14reset[] = "Profile1D.reset(self)\nNone -> None.\n        Reset the histogram but leave the bin structure.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_14reset(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_14reset(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Profile1D.pyx":78
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 *         self.p1ptr().reset()             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 78, __pyx_L1_error)
  try {
    __pyx_t_1->reset();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 78, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":75
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":80
 *         self.p1ptr().reset()
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Profile1D.
 *         Clone this Profile1D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_16clone[] = "Profile1D.clone(self)\nNone -> Profile1D.\n        Clone this Profile1D.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_16clone(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_16clone(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  YODA::Profile1D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Profile1D.pyx":83
 *         """None -> Profile1D.
 *         Clone this Profile1D."""
 *         return cutil.new_owned_cls(Profile1D, self.p1ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 83, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 83, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Profile1D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":80
 *         self.p1ptr().reset()
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Profile1D.
 *         Clone this Profile1D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":86
 * 
 * 
 *     def fill(self, x, y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,y,[w]) -> None.
 *         Fill with given x & y values and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_18fill[] = "Profile1D.fill(self, x, y, weight=1.0)\n(x,y,[w]) -> None.\n        Fill with given x & y values and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_weight,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 2, 3, 1); __PYX_ERR(16, 86, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(16, 86, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_weight = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 86, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_18fill(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_18fill(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Profile1D.pyx":89
 *         """(x,y,[w]) -> None.
 *         Fill with given x & y values and optional weight."""
 *         self.p1ptr().fill(x, y, weight)             # <<<<<<<<<<<<<<
 * 
 *     def fillBin(self, size_t ix, double y, weight=1.0):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 89, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 89, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 89, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 89, __pyx_L1_error)
  try {
    __pyx_t_1->fill(__pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 89, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":86
 * 
 * 
 *     def fill(self, x, y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,y,[w]) -> None.
 *         Fill with given x & y values and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":91
 *         self.p1ptr().fill(x, y, weight)
 * 
 *     def fillBin(self, size_t ix, double y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(ix,y,[w]) -> None.
 *         Fill bin ix with y value and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_20fillBin[] = "Profile1D.fillBin(self, size_t ix, double y, weight=1.0)\n(ix,y,[w]) -> None.\n        Fill bin ix with y value and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_ix;
  double __pyx_v_y;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fillBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ix,&__pyx_n_s_y,&__pyx_n_s_weight,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ix)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fillBin", 0, 2, 3, 1); __PYX_ERR(16, 91, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fillBin") < 0)) __PYX_ERR(16, 91, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ix = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_ix == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(16, 91, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 91, __pyx_L3_error)
    __pyx_v_weight = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fillBin", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 91, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_20fillBin(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_ix, __pyx_v_y, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_20fillBin(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, size_t __pyx_v_ix, double __pyx_v_y, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fillBin", 0);

  /* "include/Profile1D.pyx":94
 *         """(ix,y,[w]) -> None.
 *         Fill bin ix with y value and optional weight."""
 *         self.p1ptr().fillBin(ix, y, weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 94, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 94, __pyx_L1_error)
  try {
    __pyx_t_1->fillBin(__pyx_v_ix, __pyx_v_y, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 94, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":91
 *         self.p1ptr().fill(x, y, weight)
 * 
 *     def fillBin(self, size_t ix, double y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(ix,y,[w]) -> None.
 *         Fill bin ix with y value and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":98
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_8totalDbn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_8totalDbn_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_8totalDbn___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":101
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn2D, &self.p1ptr().totalDbn(), self)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/Profile1D.pyx":102
 *         The Dbn2D representing the total distribution."""
 *         return cutil.new_borrowed_cls(
 *             Dbn2D, &self.p1ptr().totalDbn(), self)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 102, __pyx_L1_error)

  /* "include/Profile1D.pyx":101
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn2D, &self.p1ptr().totalDbn(), self)
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), (&__pyx_t_1->totalDbn()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":98
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Profile1D.totalDbn.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":105
 * 
 *     @property
 *     def underflow(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the underflow distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_9underflow_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_9underflow_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_9underflow___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_9underflow___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":108
 *         """() -> Dbn2D
 *         The Dbn2D representing the underflow distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn2D, &self.p1ptr().underflow(), self)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/Profile1D.pyx":109
 *         The Dbn2D representing the underflow distribution."""
 *         return cutil.new_borrowed_cls(
 *             Dbn2D, &self.p1ptr().underflow(), self)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 109, __pyx_L1_error)

  /* "include/Profile1D.pyx":108
 *         """() -> Dbn2D
 *         The Dbn2D representing the underflow distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn2D, &self.p1ptr().underflow(), self)
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), (&__pyx_t_1->underflow()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":105
 * 
 *     @property
 *     def underflow(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the underflow distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Profile1D.underflow.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":112
 * 
 *     @property
 *     def overflow(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the overflow distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_8overflow_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_8overflow_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_8overflow___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_8overflow___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":115
 *         """() -> Dbn2D
 *         The Dbn2D representing the overflow distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn2D, &self.p1ptr().overflow(), self)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/Profile1D.pyx":116
 *         The Dbn2D representing the overflow distribution."""
 *         return cutil.new_borrowed_cls(
 *             Dbn2D, &self.p1ptr().overflow(), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 116, __pyx_L1_error)

  /* "include/Profile1D.pyx":115
 *         """() -> Dbn2D
 *         The Dbn2D representing the overflow distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn2D, &self.p1ptr().overflow(), self)
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), (&__pyx_t_1->overflow()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":112
 * 
 *     @property
 *     def overflow(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the overflow distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Profile1D.overflow.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":119
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_23numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_22numEntries[] = "Profile1D.numEntries(self, includeoverflows=True)\n([bool]) -> int\n        Number of times this histogram was filled, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_23numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "numEntries") < 0)) __PYX_ERR(16, 119, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("numEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 119, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_22numEntries(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_22numEntries(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("numEntries", 0);

  /* "include/Profile1D.pyx":122
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 *         return self.p1ptr().numEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def effNumEntries(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 122, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 122, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_1->numEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":119
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":124
 *         return self.p1ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_25effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_24effNumEntries[] = "Profile1D.effNumEntries(self, includeoverflows=True)\n([bool]) -> float\n        Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_25effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("effNumEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "effNumEntries") < 0)) __PYX_ERR(16, 124, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("effNumEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 124, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_24effNumEntries(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_24effNumEntries(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("effNumEntries", 0);

  /* "include/Profile1D.pyx":127
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows."""
 *         return self.p1ptr().effNumEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 127, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 127, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->effNumEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":124
 *         return self.p1ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":129
 *         return self.p1ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_27sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_26sumW[] = "Profile1D.sumW(self, includeoverflows=True)\n([bool]) -> float\n        Sum of weights filled into this histogram.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_27sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW") < 0)) __PYX_ERR(16, 129, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 129, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_26sumW(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_26sumW(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW", 0);

  /* "include/Profile1D.pyx":132
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 *         return self.p1ptr().sumW(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW2(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 132, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 132, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":129
 *         return self.p1ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":134
 *         return self.p1ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_29sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_28sumW2[] = "Profile1D.sumW2(self, includeoverflows=True)\n([bool]) -> float\n        Sum of weights filled into this histogram.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_29sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW2") < 0)) __PYX_ERR(16, 134, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW2", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 134, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_28sumW2(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_28sumW2(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW2", 0);

  /* "include/Profile1D.pyx":137
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 *         return self.p1ptr().sumW2(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 137, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 137, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW2(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":134
 *         return self.p1ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":140
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_31xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_30xMean[] = "Profile1D.xMean(self, includeoverflows=True)\n([bool]) -> float\n        Mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_31xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xMean") < 0)) __PYX_ERR(16, 140, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 140, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_30xMean(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_30xMean(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xMean", 0);

  /* "include/Profile1D.pyx":143
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 *         return self.p1ptr().xMean(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xVariance(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 143, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 143, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xMean(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":140
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":145
 *         return self.p1ptr().xMean(includeoverflows)
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_33xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_32xVariance[] = "Profile1D.xVariance(self, includeoverflows=True)\n([bool]) -> float\n        Variance in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_33xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xVariance") < 0)) __PYX_ERR(16, 145, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 145, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_32xVariance(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_32xVariance(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xVariance", 0);

  /* "include/Profile1D.pyx":148
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 *         return self.p1ptr().xVariance(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xStdDev(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 148, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 148, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xVariance(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":145
 *         return self.p1ptr().xMean(includeoverflows)
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":150
 *         return self.p1ptr().xVariance(includeoverflows)
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_35xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_34xStdDev[] = "Profile1D.xStdDev(self, includeoverflows=True)\n([bool]) -> float\n        Standard deviation in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_35xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdDev") < 0)) __PYX_ERR(16, 150, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 150, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_34xStdDev(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_34xStdDev(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdDev", 0);

  /* "include/Profile1D.pyx":153
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 *         return self.p1ptr().xStdDev(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xStdErr(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 153, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 153, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdDev(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":150
 *         return self.p1ptr().xVariance(includeoverflows)
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":155
 *         return self.p1ptr().xStdDev(includeoverflows)
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_37xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_36xStdErr[] = "Profile1D.xStdErr(self, includeoverflows=True)\n([bool]) -> float\n        Standard error on the mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_37xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdErr") < 0)) __PYX_ERR(16, 155, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 155, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_36xStdErr(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_36xStdErr(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdErr", 0);

  /* "include/Profile1D.pyx":158
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 *         return self.p1ptr().xStdErr(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xRMS(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 158, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 158, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdErr(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":155
 *         return self.p1ptr().xStdDev(includeoverflows)
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":160
 *         return self.p1ptr().xStdErr(includeoverflows)
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_39xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_38xRMS[] = "Profile1D.xRMS(self, includeoverflows=True)\n([bool]) -> float\n        RMS in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_39xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xRMS") < 0)) __PYX_ERR(16, 160, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 160, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_38xRMS(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_38xRMS(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xRMS", 0);

  /* "include/Profile1D.pyx":163
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 *         return self.p1ptr().xRMS(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 163, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 163, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xRMS(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":160
 *         return self.p1ptr().xStdErr(includeoverflows)
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":166
 * 
 * 
 *     def scaleW(self, double w):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_41scaleW(PyObject *__pyx_v_self, PyObject *__pyx_arg_w); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_40scaleW[] = "Profile1D.scaleW(self, double w)\n(float) -> None.\n        Rescale the weights in this histogram by the factor w.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_41scaleW(PyObject *__pyx_v_self, PyObject *__pyx_arg_w) {
  double __pyx_v_w;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  assert(__pyx_arg_w); {
    __pyx_v_w = __pyx_PyFloat_AsDouble(__pyx_arg_w); if (unlikely((__pyx_v_w == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 166, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_40scaleW(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((double)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_40scaleW(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, double __pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Profile1D.pyx":169
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 *         self.p1ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, double f):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 169, __pyx_L1_error)
  try {
    __pyx_t_1->scaleW(__pyx_v_w);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 169, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":166
 * 
 * 
 *     def scaleW(self, double w):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":171
 *         self.p1ptr().scaleW(w)
 * 
 *     def scaleY(self, double f):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Scale the y-direction (profiled value) in this histogram by the factor f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_43scaleY(PyObject *__pyx_v_self, PyObject *__pyx_arg_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_42scaleY[] = "Profile1D.scaleY(self, double f)\n(float) -> None.\n        Scale the y-direction (profiled value) in this histogram by the factor f.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_43scaleY(PyObject *__pyx_v_self, PyObject *__pyx_arg_f) {
  double __pyx_v_f;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  assert(__pyx_arg_f); {
    __pyx_v_f = __pyx_PyFloat_AsDouble(__pyx_arg_f); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 171, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_42scaleY(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((double)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_42scaleY(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, double __pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Profile1D.pyx":174
 *         """(float) -> None.
 *         Scale the y-direction (profiled value) in this histogram by the factor f."""
 *         self.p1ptr().scaleY(f)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 174, __pyx_L1_error)
  try {
    __pyx_t_1->scaleY(__pyx_v_f);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 174, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":171
 *         self.p1ptr().scaleW(w)
 * 
 *     def scaleY(self, double f):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Scale the y-direction (profiled value) in this histogram by the factor f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":178
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.p1ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":180
 *     def xMin(self):
 *         """Low x edge of the histo."""
 *         return self.p1ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 180, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 180, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":178
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.p1ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":183
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.p1ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":185
 *     def xMax(self):
 *         """High x edge of the histo."""
 *         return self.p1ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 185, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 185, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":183
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.p1ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":188
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """All x edges of the histo."""
 *         return self.p1ptr().xEdges()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_6xEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_6xEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_6xEdges___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  std::vector<double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":190
 *     def xEdges(self):
 *         """All x edges of the histo."""
 *         return self.p1ptr().xEdges()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 190, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xEdges();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 190, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_convert_vector_to_py_double(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":188
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """All x edges of the histo."""
 *         return self.p1ptr().xEdges()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.xEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":194
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_7numBins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_7numBins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_7numBins___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_7numBins___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":197
 *         """() -> int
 *         Number of bins (not including overflows)."""
 *         return self.p1ptr().numBins()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 197, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 197, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":194
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.numBins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":200
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return list(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_4bins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_4bins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_4bins___get__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_4bins___get__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile1D.pyx":202
 *     def bins(self):
 *         """Access the ordered bins list."""
 *         return list(self)             # <<<<<<<<<<<<<<
 * 
 *     def binIndexAt(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PySequence_List(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":200
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return list(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Profile1D.bins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":204
 *         return list(self)
 * 
 *     def binIndexAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin index containing position x"""
 *         return self.p1ptr().binIndexAt(x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_45binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_44binIndexAt[] = "Profile1D.binIndexAt(self, x)\nGet the bin index containing position x";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_45binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binIndexAt (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_44binIndexAt(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_44binIndexAt(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  double __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("binIndexAt", 0);

  /* "include/Profile1D.pyx":206
 *     def binIndexAt(self, x):
 *         """Get the bin index containing position x"""
 *         return self.p1ptr().binIndexAt(x)             # <<<<<<<<<<<<<<
 * 
 *     def binAt(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 206, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 206, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->binIndexAt(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 206, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":204
 *         return list(self)
 * 
 *     def binIndexAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin index containing position x"""
 *         return self.p1ptr().binIndexAt(x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile1D.binIndexAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":208
 *         return self.p1ptr().binIndexAt(x)
 * 
 *     def binAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position x"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_47binAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_46binAt[] = "Profile1D.binAt(self, x)\nGet the bin containing position x";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_47binAt(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binAt (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_46binAt(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_46binAt(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("binAt", 0);

  /* "include/Profile1D.pyx":213
 *         # return cutil.new_borrowed_cls(ProfileBin1D, & self.p1ptr().binAt(x), self)
 *         # TODO: need out-of-range check to return None?
 *         return self.bin(self.binIndexAt(x))             # <<<<<<<<<<<<<<
 * 
 *     def addBin(self, low, high):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bin); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_binIndexAt); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(16, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_x);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 213, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(16, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":208
 *         return self.p1ptr().binIndexAt(x)
 * 
 *     def binAt(self, x):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position x"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Profile1D.binAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":215
 *         return self.bin(self.binIndexAt(x))
 * 
 *     def addBin(self, low, high):             # <<<<<<<<<<<<<<
 *         """Add a bin."""
 *         self.p1ptr().addBin(low, high)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_49addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_48addBin[] = "Profile1D.addBin(self, low, high)\nAdd a bin.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_49addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_low = 0;
  PyObject *__pyx_v_high = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_low,&__pyx_n_s_high,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_low)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_high)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 2, 2, 1); __PYX_ERR(16, 215, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addBin") < 0)) __PYX_ERR(16, 215, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_low = values[0];
    __pyx_v_high = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBin", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 215, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_48addBin(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_low, __pyx_v_high);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_48addBin(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_low, PyObject *__pyx_v_high) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("addBin", 0);

  /* "include/Profile1D.pyx":217
 *     def addBin(self, low, high):
 *         """Add a bin."""
 *         self.p1ptr().addBin(low, high)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 217, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_low); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 217, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_high); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 217, __pyx_L1_error)
  try {
    __pyx_t_1->addBin(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 217, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":218
 *         """Add a bin."""
 *         self.p1ptr().addBin(low, high)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def addBins(self, edges):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":215
 *         return self.bin(self.binIndexAt(x))
 * 
 *     def addBin(self, low, high):             # <<<<<<<<<<<<<<
 *         """Add a bin."""
 *         self.p1ptr().addBin(low, high)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":220
 *         return self
 * 
 *     def addBins(self, edges):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_51addBins(PyObject *__pyx_v_self, PyObject *__pyx_v_edges); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_50addBins[] = "Profile1D.addBins(self, edges)\nAdd several bins.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_51addBins(PyObject *__pyx_v_self, PyObject *__pyx_v_edges) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBins (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_50addBins(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((PyObject *)__pyx_v_edges));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_50addBins(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_edges) {
  std::vector<double>  __pyx_v_cedges;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  YODA::Profile1D *__pyx_t_6;
  __Pyx_RefNannySetupContext("addBins", 0);

  /* "include/Profile1D.pyx":224
 *         # TODO: simplify / make consistent
 *         cdef vector[double] cedges
 *         for i in edges:             # <<<<<<<<<<<<<<
 *             cedges.push_back(i)
 *         self.p1ptr().addBins(cedges)
 */
  if (likely(PyList_CheckExact(__pyx_v_edges)) || PyTuple_CheckExact(__pyx_v_edges)) {
    __pyx_t_1 = __pyx_v_edges; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_edges); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 224, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(16, 224, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 224, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(16, 224, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 224, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(16, 224, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Profile1D.pyx":225
 *         cdef vector[double] cedges
 *         for i in edges:
 *             cedges.push_back(i)             # <<<<<<<<<<<<<<
 *         self.p1ptr().addBins(cedges)
 *         return self
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_i); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(16, 225, __pyx_L1_error)
    try {
      __pyx_v_cedges.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(16, 225, __pyx_L1_error)
    }

    /* "include/Profile1D.pyx":224
 *         # TODO: simplify / make consistent
 *         cdef vector[double] cedges
 *         for i in edges:             # <<<<<<<<<<<<<<
 *             cedges.push_back(i)
 *         self.p1ptr().addBins(cedges)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile1D.pyx":226
 *         for i in edges:
 *             cedges.push_back(i)
 *         self.p1ptr().addBins(cedges)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_6 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(16, 226, __pyx_L1_error)
  try {
    __pyx_t_6->addBins(__pyx_v_cedges);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 226, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":227
 *             cedges.push_back(i)
 *         self.p1ptr().addBins(cedges)
 *         return self             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":220
 *         return self
 * 
 *     def addBins(self, edges):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile1D.addBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":230
 * 
 * 
 *     def mergeBins(self, a, b):             # <<<<<<<<<<<<<<
 *         """mergeBins(ia, ib) -> None.
 *         Merge bins from indices ia through ib."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_53mergeBins(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_52mergeBins[] = "Profile1D.mergeBins(self, a, b)\nmergeBins(ia, ib) -> None.\n        Merge bins from indices ia through ib.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_53mergeBins(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_a = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mergeBins (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("mergeBins", 1, 2, 2, 1); __PYX_ERR(16, 230, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mergeBins") < 0)) __PYX_ERR(16, 230, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_a = values[0];
    __pyx_v_b = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mergeBins", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 230, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.mergeBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_52mergeBins(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_a, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_52mergeBins(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  __Pyx_RefNannySetupContext("mergeBins", 0);

  /* "include/Profile1D.pyx":233
 *         """mergeBins(ia, ib) -> None.
 *         Merge bins from indices ia through ib."""
 *         self.p1ptr().mergeBins(a, b)             # <<<<<<<<<<<<<<
 * 
 *     def rebinBy(self, n, begin=0, end=None):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 233, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_a); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(16, 233, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_As_size_t(__pyx_v_b); if (unlikely((__pyx_t_3 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(16, 233, __pyx_L1_error)
  try {
    __pyx_t_1->mergeBins(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 233, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":230
 * 
 * 
 *     def mergeBins(self, a, b):             # <<<<<<<<<<<<<<
 *         """mergeBins(ia, ib) -> None.
 *         Merge bins from indices ia through ib."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.mergeBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":235
 *         self.p1ptr().mergeBins(a, b)
 * 
 *     def rebinBy(self, n, begin=0, end=None):             # <<<<<<<<<<<<<<
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_55rebinBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_54rebinBy[] = "Profile1D.rebinBy(self, n, begin=0, end=None)\n(n) -> None.\n        Merge every group of n bins together (between begin and end, if specified).";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_55rebinBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n = 0;
  PyObject *__pyx_v_begin = 0;
  PyObject *__pyx_v_end = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebinBy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n,&__pyx_n_s_begin,&__pyx_n_s_end,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)__pyx_int_0);
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_begin);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_end);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rebinBy") < 0)) __PYX_ERR(16, 235, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_n = values[0];
    __pyx_v_begin = values[1];
    __pyx_v_end = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rebinBy", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 235, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.rebinBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_54rebinBy(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_n, __pyx_v_begin, __pyx_v_end);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_54rebinBy(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_n, PyObject *__pyx_v_begin, PyObject *__pyx_v_end) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  YODA::Profile1D *__pyx_t_4;
  unsigned int __pyx_t_5;
  size_t __pyx_t_6;
  size_t __pyx_t_7;
  __Pyx_RefNannySetupContext("rebinBy", 0);
  __Pyx_INCREF(__pyx_v_end);

  /* "include/Profile1D.pyx":238
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 *         if end is None:             # <<<<<<<<<<<<<<
 *             end = self.numBins
 *         self.p1ptr().rebinBy(int(n), begin, end)
 */
  __pyx_t_1 = (__pyx_v_end == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "include/Profile1D.pyx":239
 *         Merge every group of n bins together (between begin and end, if specified)."""
 *         if end is None:
 *             end = self.numBins             # <<<<<<<<<<<<<<
 *         self.p1ptr().rebinBy(int(n), begin, end)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numBins); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_end, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "include/Profile1D.pyx":238
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 *         if end is None:             # <<<<<<<<<<<<<<
 *             end = self.numBins
 *         self.p1ptr().rebinBy(int(n), begin, end)
 */
  }

  /* "include/Profile1D.pyx":240
 *         if end is None:
 *             end = self.numBins
 *         self.p1ptr().rebinBy(int(n), begin, end)             # <<<<<<<<<<<<<<
 * 
 *     def rebinTo(self, edges):
 */
  __pyx_t_4 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(16, 240, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_v_n); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_As_unsigned_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(16, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_v_begin); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(16, 240, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_end); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(16, 240, __pyx_L1_error)
  try {
    __pyx_t_4->rebinBy(__pyx_t_5, __pyx_t_6, __pyx_t_7);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 240, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":235
 *         self.p1ptr().mergeBins(a, b)
 * 
 *     def rebinBy(self, n, begin=0, end=None):             # <<<<<<<<<<<<<<
 *         """(n) -> None.
 *         Merge every group of n bins together (between begin and end, if specified)."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile1D.rebinBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_end);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":242
 *         self.p1ptr().rebinBy(int(n), begin, end)
 * 
 *     def rebinTo(self, edges):             # <<<<<<<<<<<<<<
 *         """([edges]) -> None.
 *         Merge bins to produce the given new edges... which must be a subset of the current ones."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_57rebinTo(PyObject *__pyx_v_self, PyObject *__pyx_v_edges); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_56rebinTo[] = "Profile1D.rebinTo(self, edges)\n([edges]) -> None.\n        Merge bins to produce the given new edges... which must be a subset of the current ones.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_57rebinTo(PyObject *__pyx_v_self, PyObject *__pyx_v_edges) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebinTo (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_56rebinTo(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((PyObject *)__pyx_v_edges));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_56rebinTo(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_edges) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  std::vector<double>  __pyx_t_2;
  __Pyx_RefNannySetupContext("rebinTo", 0);

  /* "include/Profile1D.pyx":245
 *         """([edges]) -> None.
 *         Merge bins to produce the given new edges... which must be a subset of the current ones."""
 *         self.p1ptr().rebinTo(edges)             # <<<<<<<<<<<<<<
 * 
 *     def rebin(self, arg, **kwargs):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 245, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_double(__pyx_v_edges); if (unlikely(PyErr_Occurred())) __PYX_ERR(16, 245, __pyx_L1_error)
  try {
    __pyx_t_1->rebinTo(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 245, __pyx_L1_error)
  }

  /* "include/Profile1D.pyx":242
 *         self.p1ptr().rebinBy(int(n), begin, end)
 * 
 *     def rebinTo(self, edges):             # <<<<<<<<<<<<<<
 *         """([edges]) -> None.
 *         Merge bins to produce the given new edges... which must be a subset of the current ones."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.rebinTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":247
 *         self.p1ptr().rebinTo(edges)
 * 
 *     def rebin(self, arg, **kwargs):             # <<<<<<<<<<<<<<
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_59rebin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_58rebin[] = "Profile1D.rebin(self, arg, **kwargs)\n(n) -> None or ([edges]) -> None\n        Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_59rebin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_arg = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebin (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_arg,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_arg)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "rebin") < 0)) __PYX_ERR(16, 247, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_arg = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rebin", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 247, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("yoda.core.Profile1D.rebin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_58rebin(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_arg, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_58rebin(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_arg, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("rebin", 0);

  /* "include/Profile1D.pyx":250
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 *         if hasattr(arg, "__iter__"):             # <<<<<<<<<<<<<<
 *             self.rebinTo(arg, **kwargs)
 *         else:
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_arg, __pyx_n_s_iter); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(16, 250, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "include/Profile1D.pyx":251
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 *         if hasattr(arg, "__iter__"):
 *             self.rebinTo(arg, **kwargs)             # <<<<<<<<<<<<<<
 *         else:
 *             self.rebinBy(arg, **kwargs)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rebinTo); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_arg);
    __Pyx_GIVEREF(__pyx_v_arg);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_arg);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Profile1D.pyx":250
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 *         if hasattr(arg, "__iter__"):             # <<<<<<<<<<<<<<
 *             self.rebinTo(arg, **kwargs)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "include/Profile1D.pyx":253
 *             self.rebinTo(arg, **kwargs)
 *         else:
 *             self.rebinBy(arg, **kwargs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rebinBy); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_arg);
    __Pyx_GIVEREF(__pyx_v_arg);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_arg);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_3)) __PYX_ERR(16, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "include/Profile1D.pyx":247
 *         self.p1ptr().rebinTo(edges)
 * 
 *     def rebin(self, arg, **kwargs):             # <<<<<<<<<<<<<<
 *         """(n) -> None or ([edges]) -> None
 *         Merge bins, like rebinBy if an int argument is given; like rebinTo if an iterable is given."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile1D.rebin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":256
 * 
 * 
 *     def mkScatter(self, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 *         Convert this Profile1D to a Scatter2D, with y representing
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_61mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_60mkScatter[] = "Profile1D.mkScatter(self, usefocus=False, usestddev=False)\nNone -> Scatter2D.\n        Convert this Profile1D to a Scatter2D, with y representing\n        mean bin y values and their standard errors.";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_61mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_usefocus = 0;
  PyObject *__pyx_v_usestddev = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_usefocus,&__pyx_n_s_usestddev,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usefocus);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usestddev);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mkScatter") < 0)) __PYX_ERR(16, 256, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_usefocus = values[0];
    __pyx_v_usestddev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mkScatter", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(16, 256, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_60mkScatter(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), __pyx_v_usefocus, __pyx_v_usestddev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_60mkScatter(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, PyObject *__pyx_v_usefocus, PyObject *__pyx_v_usestddev) {
  YODA::Scatter2D __pyx_v_s2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  bool __pyx_t_2;
  bool __pyx_t_3;
  YODA::Scatter2D __pyx_t_4;
  YODA::Scatter2D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Profile1D.pyx":260
 *         Convert this Profile1D to a Scatter2D, with y representing
 *         mean bin y values and their standard errors."""
 *         cdef c.Scatter2D s2 = c.mkScatter_Profile1D(deref(self.p1ptr()), usefocus, usestddev)             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 260, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_usefocus); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 260, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_usestddev); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(16, 260, __pyx_L1_error)
  try {
    __pyx_t_4 = YODA::mkScatter((*__pyx_t_1), __pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 260, __pyx_L1_error)
  }
  __pyx_v_s2 = __pyx_t_4;

  /* "include/Profile1D.pyx":261
 *         mean bin y values and their standard errors."""
 *         cdef c.Scatter2D s2 = c.mkScatter_Profile1D(deref(self.p1ptr()), usefocus, usestddev)
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())             # <<<<<<<<<<<<<<
 * 
 *     def divideBy(self, Profile1D h):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_s2.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 261, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(16, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":256
 * 
 * 
 *     def mkScatter(self, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 *         Convert this Profile1D to a Scatter2D, with y representing
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Profile1D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":263
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())
 * 
 *     def divideBy(self, Profile1D h):             # <<<<<<<<<<<<<<
 *         cdef c.Scatter2D s = c.Profile1D_div_Profile1D(deref(self.p1ptr()), deref(h.p1ptr()))
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_63divideBy(PyObject *__pyx_v_self, PyObject *__pyx_v_h); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile1D_62divideBy[] = "Profile1D.divideBy(self, Profile1D h)";
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_63divideBy(PyObject *__pyx_v_self, PyObject *__pyx_v_h) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("divideBy (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_h), __pyx_ptype_4yoda_4core_Profile1D, 1, "h", 0))) __PYX_ERR(16, 263, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_62divideBy(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_h));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_62divideBy(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_h) {
  YODA::Scatter2D __pyx_v_s;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  YODA::Profile1D *__pyx_t_2;
  YODA::Scatter2D __pyx_t_3;
  YODA::Scatter2D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("divideBy", 0);

  /* "include/Profile1D.pyx":264
 * 
 *     def divideBy(self, Profile1D h):
 *         cdef c.Scatter2D s = c.Profile1D_div_Profile1D(deref(self.p1ptr()), deref(h.p1ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 264, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_h); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 264, __pyx_L1_error)
  try {
    __pyx_t_3 = divide((*__pyx_t_1), (*__pyx_t_2));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 264, __pyx_L1_error)
  }
  __pyx_v_s = __pyx_t_3;

  /* "include/Profile1D.pyx":265
 *     def divideBy(self, Profile1D h):
 *         cdef c.Scatter2D s = c.Profile1D_div_Profile1D(deref(self.p1ptr()), deref(h.p1ptr()))
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_4 = __pyx_v_s.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(16, 265, __pyx_L1_error)
  }
  __pyx_t_5 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(16, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":263
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())
 * 
 *     def divideBy(self, Profile1D h):             # <<<<<<<<<<<<<<
 *         cdef c.Scatter2D s = c.Profile1D_div_Profile1D(deref(self.p1ptr()), deref(h.p1ptr()))
 *         return cutil.new_owned_cls(Scatter2D, s.newclone())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile1D.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":268
 * 
 * 
 *     def __iadd__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         c.Profile1D_iadd_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_65__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_65__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile1D, 1, "other", 0))) __PYX_ERR(16, 268, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_64__iadd__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_64__iadd__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  YODA::Profile1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/Profile1D.pyx":269
 * 
 *     def __iadd__(Profile1D self, Profile1D other):
 *         c.Profile1D_iadd_Profile1D(self.p1ptr(), other.p1ptr())             # <<<<<<<<<<<<<<
 *         return self
 *     def __isub__(Profile1D self, Profile1D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 269, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 269, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/Profile1D.pyx":270
 *     def __iadd__(Profile1D self, Profile1D other):
 *         c.Profile1D_iadd_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self             # <<<<<<<<<<<<<<
 *     def __isub__(Profile1D self, Profile1D other):
 *         c.Profile1D_isub_Profile1D(self.p1ptr(), other.p1ptr())
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":268
 * 
 * 
 *     def __iadd__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         c.Profile1D_iadd_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":271
 *         c.Profile1D_iadd_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self
 *     def __isub__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         c.Profile1D_isub_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_67__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_67__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile1D, 1, "other", 0))) __PYX_ERR(16, 271, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_66__isub__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_66__isub__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile1D *__pyx_t_1;
  YODA::Profile1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/Profile1D.pyx":272
 *         return self
 *     def __isub__(Profile1D self, Profile1D other):
 *         c.Profile1D_isub_Profile1D(self.p1ptr(), other.p1ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(16, 272, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 272, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/Profile1D.pyx":273
 *     def __isub__(Profile1D self, Profile1D other):
 *         c.Profile1D_isub_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __add__(Profile1D self, Profile1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":271
 *         c.Profile1D_iadd_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self
 *     def __isub__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         c.Profile1D_isub_Profile1D(self.p1ptr(), other.p1ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile1D.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":275
 *         return self
 * 
 *     def __add__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_69__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_69__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Profile1D, 1, "self", 0))) __PYX_ERR(16, 275, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile1D, 1, "other", 0))) __PYX_ERR(16, 275, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_68__add__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_68__add__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Profile1D *__pyx_t_2;
  YODA::Profile1D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Profile1D.pyx":276
 * 
 *     def __add__(Profile1D self, Profile1D other):
 *         h = Profile1D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Profile1D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Profile1D.pyx":277
 *     def __add__(Profile1D self, Profile1D other):
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))             # <<<<<<<<<<<<<<
 *         return h
 *     def __sub__(Profile1D self, Profile1D other):
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 277, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(16, 277, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_add(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile1D.pyx":278
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))
 *         return h             # <<<<<<<<<<<<<<
 *     def __sub__(Profile1D self, Profile1D other):
 *         h = Profile1D()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":275
 *         return self
 * 
 *     def __add__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Profile1D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":279
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))
 *         return h
 *     def __sub__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_sub_Profile1D(self.p1ptr(), other.p1ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_71__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_71__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Profile1D, 1, "self", 0))) __PYX_ERR(16, 279, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile1D, 1, "other", 0))) __PYX_ERR(16, 279, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_70__sub__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile1D_70__sub__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Profile1D *__pyx_t_2;
  YODA::Profile1D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Profile1D.pyx":280
 *         return h
 *     def __sub__(Profile1D self, Profile1D other):
 *         h = Profile1D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Profile1D_sub_Profile1D(self.p1ptr(), other.p1ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Profile1D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Profile1D.pyx":281
 *     def __sub__(Profile1D self, Profile1D other):
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_sub_Profile1D(self.p1ptr(), other.p1ptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(16, 281, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_9Profile1D_p1ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(16, 281, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_sub(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile1D.pyx":282
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_sub_Profile1D(self.p1ptr(), other.p1ptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     def __div__(Profile1D self, Profile1D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Profile1D.pyx":279
 *         cutil.set_owned_ptr(h, c.Profile1D_add_Profile1D(self.p1ptr(), other.p1ptr()))
 *         return h
 *     def __sub__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         h = Profile1D()
 *         cutil.set_owned_ptr(h, c.Profile1D_sub_Profile1D(self.p1ptr(), other.p1ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Profile1D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile1D.pyx":284
 *         return h
 * 
 *     def __div__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

/* Python wrapper */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_73__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile1D_73__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Profile1D, 1, "self", 0))) __PYX_ERR(16, 284, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile1D, 1, "other", 0))) __PYX_ERR(16, 284, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile1D_72__div__(((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile1D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_9Profile1D_72__div__(struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile1D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "include/Profile1D.pyx":285
 * 
 *     def __div__(Profile1D self, Profile1D other):
 *         return self.divideBy(other)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_divideBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(16, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_other)); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 285, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(16, 285, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_other));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_other));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_other));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(16, 285, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile1D.pyx":284
 *         return h
 * 
 *     def __div__(Profile1D self, Profile1D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile1D.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

/* "include/generated/Bin2D_Dbn2D.pyx":12
 *     """2D Bin class templated on a Dbn2D"""
 * 
 *     cdef inline c.Bin2D_Dbn2D* b2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn2D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("b2ptr", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":13
 * 
 *     cdef inline c.Bin2D_Dbn2D* b2ptr(self) except NULL:
 *         return <c.Bin2D_Dbn2D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn2D* _Bin2D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 13, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin2D_Dbn2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":12
 *     """2D Bin class templated on a Dbn2D"""
 * 
 *     cdef inline c.Bin2D_Dbn2D* b2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn2D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.b2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":15
 *         return <c.Bin2D_Dbn2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn2D* _Bin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn2D*> self.ptr()
 * 
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_f_4yoda_4core_11Bin2D_Dbn2D__Bin2D(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Bin2D", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":16
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn2D* _Bin2D(self) except NULL:
 *         return <c.Bin2D_Dbn2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 16, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin2D_Dbn2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":15
 *         return <c.Bin2D_Dbn2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn2D* _Bin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D._Bin2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":19
 * 
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn2D( pair[double, double](xlow, xhigh),
 *                                                       pair[double, double](ylow, yhigh) ))
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(17, 19, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(17, 19, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(17, 19, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(17, 19, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
    __pyx_v_ylow = values[2];
    __pyx_v_yhigh = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(17, 19, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D___init__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_ylow, __pyx_v_yhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_11Bin2D_Dbn2D___init__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  std::pair<double,double>  __pyx_t_3;
  std::pair<double,double>  __pyx_t_4;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":20
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn2D( pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(17, 20, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(17, 20, __pyx_L1_error)
  try {
    __pyx_t_3 = std::pair<double,double> (__pyx_t_1, __pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(17, 20, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn2D.pyx":21
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn2D( pair[double, double](xlow, xhigh),
 *                                                       pair[double, double](ylow, yhigh) ))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(17, 21, __pyx_L1_error)
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(17, 21, __pyx_L1_error)
  try {
    __pyx_t_4 = std::pair<double,double> (__pyx_t_2, __pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(17, 21, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn2D.pyx":20
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn2D( pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 */
  try {
    __pyx_t_5 = new __pyx_t_4yoda_12declarations_Bin2D_Dbn2D(__pyx_t_3, __pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(17, 20, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(17, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/generated/Bin2D_Dbn2D.pyx":19
 * 
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn2D( pair[double, double](xlow, xhigh),
 *                                                       pair[double, double](ylow, yhigh) ))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":23
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g), y=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax, self.yMin, self.yMax)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_2__repr__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_2__repr__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":24
 * 
 *     def __repr__(self):
 *         return '<%s x=[%g, %g), y=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax, self.yMin, self.yMax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMin); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMax); if (unlikely(!__pyx_t_5)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(5); if (unlikely(!__pyx_t_6)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_s_x_g_g_y_g_g, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(17, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":23
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g), y=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax, self.yMin, self.yMax)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":35
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x edges.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xEdges___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  std::pair<double,double>  __pyx_v_x;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  std::pair<double,double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":39
 *         The lower and upper x edges.
 *         """
 *         cdef pair[double, double] x = self.b2ptr().xEdges()             # <<<<<<<<<<<<<<
 *         return (x.first, x.second)
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 39, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xEdges();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 39, __pyx_L1_error)
  }
  __pyx_v_x = __pyx_t_2;

  /* "include/generated/Bin2D_Dbn2D.pyx":40
 *         """
 *         cdef pair[double, double] x = self.b2ptr().xEdges()
 *         return (x.first, x.second)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_x.first); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_x.second); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(17, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":35
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x edges.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":43
 * 
 *     @property
 *     def yEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper y edges.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yEdges___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  std::pair<double,double>  __pyx_v_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  std::pair<double,double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":47
 *         The lower and upper y edges.
 *         """
 *         cdef pair[double, double] y = self.b2ptr().yEdges()             # <<<<<<<<<<<<<<
 *         return (y.first, y.second)
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 47, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yEdges();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 47, __pyx_L1_error)
  }
  __pyx_v_y = __pyx_t_2;

  /* "include/generated/Bin2D_Dbn2D.pyx":48
 *         """
 *         cdef pair[double, double] y = self.b2ptr().yEdges()
 *         return (y.first, y.second)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_y.first); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_y.second); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(17, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":43
 * 
 *     @property
 *     def yEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper y edges.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":51
 * 
 *     @property
 *     def xyEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x,y edge pairs.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xyEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xyEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xyEdges___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xyEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":55
 *         The lower and upper x,y edge pairs.
 *         """
 *         return util.XY(self.xEdges, self.yEdges)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xEdges); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yEdges); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":51
 * 
 *     @property
 *     def xyEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x,y edge pairs.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":59
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in x."""
 *         return self.b2ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":61
 *     def xMin(self):
 *         """Low edge in x."""
 *         return self.b2ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 61, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 61, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":59
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in x."""
 *         return self.b2ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":64
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in y."""
 *         return self.b2ptr().yMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMin___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":66
 *     def yMin(self):
 *         """Low edge in y."""
 *         return self.b2ptr().yMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 66, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 66, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":64
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in y."""
 *         return self.b2ptr().yMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":69
 * 
 *     @property
 *     def xyMin(self):             # <<<<<<<<<<<<<<
 *         """Low edges in x,y."""
 *         return util.XY(self.xMin, self.yMin)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMin___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":71
 *     def xyMin(self):
 *         """Low edges in x,y."""
 *         return util.XY(self.xMin, self.yMin)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMin); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":69
 * 
 *     @property
 *     def xyMin(self):             # <<<<<<<<<<<<<<
 *         """Low edges in x,y."""
 *         return util.XY(self.xMin, self.yMin)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":75
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in x."""
 *         return self.b2ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":77
 *     def xMax(self):
 *         """High edge in x."""
 *         return self.b2ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 77, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 77, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":75
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in x."""
 *         return self.b2ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":80
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in y."""
 *         return self.b2ptr().yMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMax___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":82
 *     def yMax(self):
 *         """High edge in y."""
 *         return self.b2ptr().yMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 82, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 82, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":80
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in y."""
 *         return self.b2ptr().yMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":85
 * 
 *     @property
 *     def xyMax(self):             # <<<<<<<<<<<<<<
 *         """High edges in x,y."""
 *         return util.XY(self.xMax, self.yMax)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMax___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":87
 *     def xyMax(self):
 *         """High edges in x,y."""
 *         return util.XY(self.xMax, self.yMax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMax); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":85
 * 
 *     @property
 *     def xyMax(self):             # <<<<<<<<<<<<<<
 *         """High edges in x,y."""
 *         return util.XY(self.xMax, self.yMax)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":91
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in x"""
 *         return self.b2ptr().xMid()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMid___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":93
 *     def xMid(self):
 *         """Geometric centre of the bin in x"""
 *         return self.b2ptr().xMid()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 93, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMid();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 93, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":91
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in x"""
 *         return self.b2ptr().xMid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":96
 * 
 *     @property
 *     def yMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in y"""
 *         return self.b2ptr().yMid()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMid___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":98
 *     def yMid(self):
 *         """Geometric centre of the bin in y"""
 *         return self.b2ptr().yMid()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 98, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMid();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 98, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":96
 * 
 *     @property
 *     def yMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in y"""
 *         return self.b2ptr().yMid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":101
 * 
 *     @property
 *     def xyMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin"""
 *         return util.XY(self.xMid, self.yMid)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMid___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":103
 *     def xyMid(self):
 *         """Geometric centre of the bin"""
 *         return util.XY(self.xMid, self.yMid)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMid); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMid); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":101
 * 
 *     @property
 *     def xyMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin"""
 *         return util.XY(self.xMid, self.yMid)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":107
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in x"""
 *         return self.b2ptr().xWidth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xWidth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xWidth_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xWidth___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":109
 *     def xWidth(self):
 *         """Width of the bin in x"""
 *         return self.b2ptr().xWidth()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 109, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xWidth();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 109, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":107
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in x"""
 *         return self.b2ptr().xWidth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xWidth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":112
 * 
 *     @property
 *     def yWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in y"""
 *         return self.b2ptr().yWidth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yWidth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yWidth_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yWidth___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":114
 *     def yWidth(self):
 *         """Width of the bin in y"""
 *         return self.b2ptr().yWidth()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 114, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yWidth();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 114, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":112
 * 
 *     @property
 *     def yWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in y"""
 *         return self.b2ptr().yWidth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yWidth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":117
 * 
 *     @property
 *     def xyWidths(self):             # <<<<<<<<<<<<<<
 *         """The widths of this bin in the x- and y-dimensions."""
 *         return util.XY(self.xWidth, self.yWidth)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyWidths_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyWidths_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyWidths___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyWidths___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":119
 *     def xyWidths(self):
 *         """The widths of this bin in the x- and y-dimensions."""
 *         return util.XY(self.xWidth, self.yWidth)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xWidth); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yWidth); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":117
 * 
 *     @property
 *     def xyWidths(self):             # <<<<<<<<<<<<<<
 *         """The widths of this bin in the x- and y-dimensions."""
 *         return util.XY(self.xWidth, self.yWidth)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyWidths.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":123
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in x"""
 *         return self.b2ptr().xFocus()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xFocus___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":125
 *     def xFocus(self):
 *         """Focus of the bin in x"""
 *         return self.b2ptr().xFocus()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 125, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xFocus();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 125, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":123
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in x"""
 *         return self.b2ptr().xFocus()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":128
 * 
 *     @property
 *     def yFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in y"""
 *         return self.b2ptr().yFocus()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yFocus___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6yFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":130
 *     def yFocus(self):
 *         """Focus of the bin in y"""
 *         return self.b2ptr().yFocus()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 130, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yFocus();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 130, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":128
 * 
 *     @property
 *     def yFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in y"""
 *         return self.b2ptr().yFocus()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":133
 * 
 *     @property
 *     def xyFocus(self):             # <<<<<<<<<<<<<<
 *         """The focus of the bin in the x- and y-dimensions"""
 *         return util.XY(self.xFocus, self.yFocus)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xyFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xyFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xyFocus___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xyFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":135
 *     def xyFocus(self):
 *         """The focus of the bin in the x- and y-dimensions"""
 *         return util.XY(self.xFocus, self.yFocus)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xFocus); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yFocus); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":133
 * 
 *     @property
 *     def xyFocus(self):             # <<<<<<<<<<<<<<
 *         """The focus of the bin in the x- and y-dimensions"""
 *         return util.XY(self.xFocus, self.yFocus)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":139
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xMean___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":140
 *     @property
 *     def xMean(self):
 *         return self.b2ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 140, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 140, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":139
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":143
 * 
 *     @property
 *     def yMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5yMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5yMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5yMean___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5yMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":144
 *     @property
 *     def yMean(self):
 *         return self.b2ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 144, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 144, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":143
 * 
 *     @property
 *     def yMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":147
 * 
 *     @property
 *     def xyMean(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xMean, self.yMean)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xyMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xyMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xyMean___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6xyMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":148
 *     @property
 *     def xyMean(self):
 *         return util.XY(self.xMean, self.yMean)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMean); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMean); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":147
 * 
 *     @property
 *     def xyMean(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xMean, self.yMean)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":152
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9xVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9xVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_9xVariance___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":153
 *     @property
 *     def xVariance(self):
 *         return self.b2ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 153, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 153, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":152
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":156
 * 
 *     @property
 *     def yVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9yVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9yVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_9yVariance___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_9yVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":157
 *     @property
 *     def yVariance(self):
 *         return self.b2ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 157, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 157, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":156
 * 
 *     @property
 *     def yVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":160
 * 
 *     @property
 *     def xyVariance(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xVariance, self.yVariance)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_10xyVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_10xyVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_10xyVariance___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_10xyVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":161
 *     @property
 *     def xyVariance(self):
 *         return util.XY(self.xVariance, self.yVariance)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xVariance); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yVariance); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":160
 * 
 *     @property
 *     def xyVariance(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xVariance, self.yVariance)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":165
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdDev()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":166
 *     @property
 *     def xStdDev(self):
 *         return self.b2ptr().xStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 166, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 166, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":165
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdDev()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":169
 * 
 *     @property
 *     def yStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdDev()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7yStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7yStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7yStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7yStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":170
 *     @property
 *     def yStdDev(self):
 *         return self.b2ptr().yStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 170, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 170, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":169
 * 
 *     @property
 *     def yStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdDev()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":173
 * 
 *     @property
 *     def xyStdDev(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdDev, self.yStdDev)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":174
 *     @property
 *     def xyStdDev(self):
 *         return util.XY(self.xStdDev, self.yStdDev)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdDev); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdDev); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":173
 * 
 *     @property
 *     def xyStdDev(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdDev, self.yStdDev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":178
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":179
 *     @property
 *     def xStdErr(self):
 *         return self.b2ptr().xStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 179, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 179, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":178
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":182
 * 
 *     @property
 *     def yStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7yStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7yStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7yStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_7yStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":183
 *     @property
 *     def yStdErr(self):
 *         return self.b2ptr().yStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 183, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 183, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":182
 * 
 *     @property
 *     def yStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":186
 * 
 *     @property
 *     def xyStdErr(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdErr, self.yStdErr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8xyStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":187
 *     @property
 *     def xyStdErr(self):
 *         return util.XY(self.xStdErr, self.yStdErr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdErr); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdErr); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":186
 * 
 *     @property
 *     def xyStdErr(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdErr, self.yStdErr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":191
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xRMS()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xRMS___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":192
 *     @property
 *     def xRMS(self):
 *         return self.b2ptr().xRMS()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 192, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 192, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":191
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xRMS()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":195
 * 
 *     @property
 *     def yRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yRMS()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yRMS___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4yRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":196
 *     @property
 *     def yRMS(self):
 *         return self.b2ptr().yRMS()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 196, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 196, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":195
 * 
 *     @property
 *     def yRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yRMS()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.yRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":199
 * 
 *     @property
 *     def xyRMS(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xRMS, self.yRMS)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyRMS___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5xyRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":200
 *     @property
 *     def xyRMS(self):
 *         return util.XY(self.xRMS, self.yRMS)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xRMS); if (unlikely(!__pyx_t_2)) __PYX_ERR(17, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yRMS); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(17, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(17, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":199
 * 
 *     @property
 *     def xyRMS(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xRMS, self.yRMS)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.xyRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":207
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":208
 *     @property
 *     def sumWX(self):
 *         return self.b2ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 208, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 208, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":207
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":211
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5sumWY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5sumWY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5sumWY___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":212
 *     @property
 *     def sumWY(self):
 *         return self.b2ptr().sumWY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 212, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 212, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":211
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.sumWY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":215
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWXY()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWXY___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":216
 *     @property
 *     def sumWXY(self):
 *         return self.b2ptr().sumWXY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 216, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWXY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 216, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":215
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWXY()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.sumWXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":219
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":220
 *     @property
 *     def sumWX2(self):
 *         return self.b2ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 220, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 220, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":219
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":223
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWY2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWY2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWY2___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":224
 *     @property
 *     def sumWY2(self):
 *         return self.b2ptr().sumWY2()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 224, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 224, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(17, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":223
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.sumWY2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":231
 *     #    return self
 * 
 *     def adjacentTo(Bin2D_Dbn2D self, Bin2D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().adjacentTo(deref(other.b2ptr()))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5adjacentTo(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_4yoda_4core_11Bin2D_Dbn2D_4adjacentTo[] = "Bin2D_Dbn2D.adjacentTo(self, Bin2D_Dbn2D other)";
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5adjacentTo(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("adjacentTo (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin2D_Dbn2D, 1, "other", 0))) __PYX_ERR(17, 231, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4adjacentTo(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_4adjacentTo(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("adjacentTo", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":232
 * 
 *     def adjacentTo(Bin2D_Dbn2D self, Bin2D_Dbn2D other):
 *         return self.b2ptr().adjacentTo(deref(other.b2ptr()))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 232, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(17, 232, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->adjacentTo((*__pyx_t_2));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 232, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":231
 *     #    return self
 * 
 *     def adjacentTo(Bin2D_Dbn2D self, Bin2D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().adjacentTo(deref(other.b2ptr()))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.adjacentTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":235
 * 
 * 
 *     def __add__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn2D,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin2D_Dbn2D, 1, "self", 0))) __PYX_ERR(17, 235, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin2D_Dbn2D, 1, "other", 0))) __PYX_ERR(17, 235, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6__add__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_6__add__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":236
 * 
 *     def __add__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn2D,
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) + deref(other.b2ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin2D_Dbn2D.pyx":238
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn2D,
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) + deref(other.b2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 238, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(17, 238, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin2D_Dbn2D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 238, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn2D.pyx":236
 * 
 *     def __add__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn2D,
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) + deref(other.b2ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin2D_Dbn2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":235
 * 
 * 
 *     def __add__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn2D,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn2D.pyx":240
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) + deref(other.b2ptr())))
 * 
 *     def __sub__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn2D,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin2D_Dbn2D, 1, "self", 0))) __PYX_ERR(17, 240, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin2D_Dbn2D, 1, "other", 0))) __PYX_ERR(17, 240, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8__sub__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn2D_8__sub__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/generated/Bin2D_Dbn2D.pyx":241
 * 
 *     def __sub__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn2D,
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) - deref(other.b2ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin2D_Dbn2D.pyx":243
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn2D,
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) - deref(other.b2ptr())))             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(17, 243, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(17, 243, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin2D_Dbn2D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(17, 243, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn2D.pyx":241
 * 
 *     def __sub__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn2D,
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) - deref(other.b2ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin2D_Dbn2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(17, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn2D.pyx":240
 *             new c.Bin2D_Dbn2D(deref(self.b2ptr()) + deref(other.b2ptr())))
 * 
 *     def __sub__(Bin2D_Dbn2D self, Bin2D_Dbn2D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn2D,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":12
 *     """2D Bin class templated on a Dbn3D"""
 * 
 *     cdef inline c.Bin2D_Dbn3D* b2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn3D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("b2ptr", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":13
 * 
 *     cdef inline c.Bin2D_Dbn3D* b2ptr(self) except NULL:
 *         return <c.Bin2D_Dbn3D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn3D* _Bin2D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 13, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin2D_Dbn3D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":12
 *     """2D Bin class templated on a Dbn3D"""
 * 
 *     cdef inline c.Bin2D_Dbn3D* b2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn3D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.b2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":15
 *         return <c.Bin2D_Dbn3D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn3D* _Bin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn3D*> self.ptr()
 * 
 */

static CYTHON_INLINE __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_f_4yoda_4core_11Bin2D_Dbn3D__Bin2D(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_Bin2D", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":16
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn3D* _Bin2D(self) except NULL:
 *         return <c.Bin2D_Dbn3D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 16, __pyx_L1_error)
  __pyx_r = ((__pyx_t_4yoda_12declarations_Bin2D_Dbn3D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":15
 *         return <c.Bin2D_Dbn3D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.Bin2D_Dbn3D* _Bin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Bin2D_Dbn3D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D._Bin2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":19
 * 
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn3D( pair[double, double](xlow, xhigh),
 *                                                       pair[double, double](ylow, yhigh) ))
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(18, 19, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(18, 19, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(18, 19, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(18, 19, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
    __pyx_v_ylow = values[2];
    __pyx_v_yhigh = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(18, 19, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D___init__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_ylow, __pyx_v_yhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_11Bin2D_Dbn3D___init__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  std::pair<double,double>  __pyx_t_3;
  std::pair<double,double>  __pyx_t_4;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":20
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn3D( pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(18, 20, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(18, 20, __pyx_L1_error)
  try {
    __pyx_t_3 = std::pair<double,double> (__pyx_t_1, __pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(18, 20, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn3D.pyx":21
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn3D( pair[double, double](xlow, xhigh),
 *                                                       pair[double, double](ylow, yhigh) ))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(18, 21, __pyx_L1_error)
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(18, 21, __pyx_L1_error)
  try {
    __pyx_t_4 = std::pair<double,double> (__pyx_t_2, __pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(18, 21, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn3D.pyx":20
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn3D( pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 */
  try {
    __pyx_t_5 = new __pyx_t_4yoda_12declarations_Bin2D_Dbn3D(__pyx_t_3, __pyx_t_4);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(18, 20, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(18, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/generated/Bin2D_Dbn3D.pyx":19
 * 
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Bin2D_Dbn3D( pair[double, double](xlow, xhigh),
 *                                                       pair[double, double](ylow, yhigh) ))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":23
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g), y=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax, self.yMin, self.yMax)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_2__repr__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_2__repr__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":24
 * 
 *     def __repr__(self):
 *         return '<%s x=[%g, %g), y=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax, self.yMin, self.yMax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMin); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMax); if (unlikely(!__pyx_t_5)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(5); if (unlikely(!__pyx_t_6)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_s_x_g_g_y_g_g, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(18, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":23
 *                                                       pair[double, double](ylow, yhigh) ))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<%s x=[%g, %g), y=[%g, %g)>' % (self.__class__.__name__, self.xMin, self.xMax, self.yMin, self.yMax)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":35
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x edges.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xEdges___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  std::pair<double,double>  __pyx_v_x;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  std::pair<double,double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":39
 *         The lower and upper x edges.
 *         """
 *         cdef pair[double, double] x = self.b2ptr().xEdges()             # <<<<<<<<<<<<<<
 *         return (x.first, x.second)
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 39, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xEdges();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 39, __pyx_L1_error)
  }
  __pyx_v_x = __pyx_t_2;

  /* "include/generated/Bin2D_Dbn3D.pyx":40
 *         """
 *         cdef pair[double, double] x = self.b2ptr().xEdges()
 *         return (x.first, x.second)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_x.first); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_x.second); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(18, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":35
 * 
 *     @property
 *     def xEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x edges.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":43
 * 
 *     @property
 *     def yEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper y edges.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yEdges___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  std::pair<double,double>  __pyx_v_y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  std::pair<double,double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":47
 *         The lower and upper y edges.
 *         """
 *         cdef pair[double, double] y = self.b2ptr().yEdges()             # <<<<<<<<<<<<<<
 *         return (y.first, y.second)
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 47, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yEdges();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 47, __pyx_L1_error)
  }
  __pyx_v_y = __pyx_t_2;

  /* "include/generated/Bin2D_Dbn3D.pyx":48
 *         """
 *         cdef pair[double, double] y = self.b2ptr().yEdges()
 *         return (y.first, y.second)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_y.first); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_y.second); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(18, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":43
 * 
 *     @property
 *     def yEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper y edges.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":51
 * 
 *     @property
 *     def xyEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x,y edge pairs.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xyEdges_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xyEdges_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xyEdges___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xyEdges___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":55
 *         The lower and upper x,y edge pairs.
 *         """
 *         return util.XY(self.xEdges, self.yEdges)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xEdges); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yEdges); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":51
 * 
 *     @property
 *     def xyEdges(self):             # <<<<<<<<<<<<<<
 *         """
 *         The lower and upper x,y edge pairs.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyEdges.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":59
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in x."""
 *         return self.b2ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":61
 *     def xMin(self):
 *         """Low edge in x."""
 *         return self.b2ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 61, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 61, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":59
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in x."""
 *         return self.b2ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":64
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in y."""
 *         return self.b2ptr().yMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMin___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":66
 *     def yMin(self):
 *         """Low edge in y."""
 *         return self.b2ptr().yMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 66, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 66, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":64
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low edge in y."""
 *         return self.b2ptr().yMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":69
 * 
 *     @property
 *     def xyMin(self):             # <<<<<<<<<<<<<<
 *         """Low edges in x,y."""
 *         return util.XY(self.xMin, self.yMin)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMin___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMin___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":71
 *     def xyMin(self):
 *         """Low edges in x,y."""
 *         return util.XY(self.xMin, self.yMin)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMin); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMin); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":69
 * 
 *     @property
 *     def xyMin(self):             # <<<<<<<<<<<<<<
 *         """Low edges in x,y."""
 *         return util.XY(self.xMin, self.yMin)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":75
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in x."""
 *         return self.b2ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":77
 *     def xMax(self):
 *         """High edge in x."""
 *         return self.b2ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 77, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 77, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":75
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in x."""
 *         return self.b2ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":80
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in y."""
 *         return self.b2ptr().yMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMax___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":82
 *     def yMax(self):
 *         """High edge in y."""
 *         return self.b2ptr().yMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 82, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 82, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":80
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High edge in y."""
 *         return self.b2ptr().yMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":85
 * 
 *     @property
 *     def xyMax(self):             # <<<<<<<<<<<<<<
 *         """High edges in x,y."""
 *         return util.XY(self.xMax, self.yMax)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMax___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMax___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":87
 *     def xyMax(self):
 *         """High edges in x,y."""
 *         return util.XY(self.xMax, self.yMax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMax); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMax); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":85
 * 
 *     @property
 *     def xyMax(self):             # <<<<<<<<<<<<<<
 *         """High edges in x,y."""
 *         return util.XY(self.xMax, self.yMax)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":91
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in x"""
 *         return self.b2ptr().xMid()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMid___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":93
 *     def xMid(self):
 *         """Geometric centre of the bin in x"""
 *         return self.b2ptr().xMid()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 93, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMid();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 93, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":91
 * 
 *     @property
 *     def xMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in x"""
 *         return self.b2ptr().xMid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":96
 * 
 *     @property
 *     def yMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in y"""
 *         return self.b2ptr().yMid()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMid___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":98
 *     def yMid(self):
 *         """Geometric centre of the bin in y"""
 *         return self.b2ptr().yMid()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 98, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMid();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 98, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":96
 * 
 *     @property
 *     def yMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin in y"""
 *         return self.b2ptr().yMid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":101
 * 
 *     @property
 *     def xyMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin"""
 *         return util.XY(self.xMid, self.yMid)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMid___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyMid___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":103
 *     def xyMid(self):
 *         """Geometric centre of the bin"""
 *         return util.XY(self.xMid, self.yMid)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMid); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMid); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":101
 * 
 *     @property
 *     def xyMid(self):             # <<<<<<<<<<<<<<
 *         """Geometric centre of the bin"""
 *         return util.XY(self.xMid, self.yMid)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyMid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":107
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in x"""
 *         return self.b2ptr().xWidth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xWidth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xWidth_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xWidth___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":109
 *     def xWidth(self):
 *         """Width of the bin in x"""
 *         return self.b2ptr().xWidth()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 109, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xWidth();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 109, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":107
 * 
 *     @property
 *     def xWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in x"""
 *         return self.b2ptr().xWidth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xWidth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":112
 * 
 *     @property
 *     def yWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in y"""
 *         return self.b2ptr().yWidth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yWidth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yWidth_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yWidth___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yWidth___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":114
 *     def yWidth(self):
 *         """Width of the bin in y"""
 *         return self.b2ptr().yWidth()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 114, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yWidth();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 114, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":112
 * 
 *     @property
 *     def yWidth(self):             # <<<<<<<<<<<<<<
 *         """Width of the bin in y"""
 *         return self.b2ptr().yWidth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yWidth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":117
 * 
 *     @property
 *     def xyWidths(self):             # <<<<<<<<<<<<<<
 *         """The widths of this bin in the x- and y-dimensions."""
 *         return util.XY(self.xWidth, self.yWidth)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyWidths_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyWidths_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyWidths___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyWidths___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":119
 *     def xyWidths(self):
 *         """The widths of this bin in the x- and y-dimensions."""
 *         return util.XY(self.xWidth, self.yWidth)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xWidth); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yWidth); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":117
 * 
 *     @property
 *     def xyWidths(self):             # <<<<<<<<<<<<<<
 *         """The widths of this bin in the x- and y-dimensions."""
 *         return util.XY(self.xWidth, self.yWidth)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyWidths.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":123
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in x"""
 *         return self.b2ptr().xFocus()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xFocus___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":125
 *     def xFocus(self):
 *         """Focus of the bin in x"""
 *         return self.b2ptr().xFocus()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 125, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xFocus();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 125, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":123
 * 
 *     @property
 *     def xFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in x"""
 *         return self.b2ptr().xFocus()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":128
 * 
 *     @property
 *     def yFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in y"""
 *         return self.b2ptr().yFocus()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yFocus___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6yFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":130
 *     def yFocus(self):
 *         """Focus of the bin in y"""
 *         return self.b2ptr().yFocus()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 130, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yFocus();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 130, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":128
 * 
 *     @property
 *     def yFocus(self):             # <<<<<<<<<<<<<<
 *         """Focus of the bin in y"""
 *         return self.b2ptr().yFocus()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":133
 * 
 *     @property
 *     def xyFocus(self):             # <<<<<<<<<<<<<<
 *         """The focus of the bin in the x- and y-dimensions"""
 *         return util.XY(self.xFocus, self.yFocus)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xyFocus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xyFocus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xyFocus___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xyFocus___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":135
 *     def xyFocus(self):
 *         """The focus of the bin in the x- and y-dimensions"""
 *         return util.XY(self.xFocus, self.yFocus)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xFocus); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yFocus); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":133
 * 
 *     @property
 *     def xyFocus(self):             # <<<<<<<<<<<<<<
 *         """The focus of the bin in the x- and y-dimensions"""
 *         return util.XY(self.xFocus, self.yFocus)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyFocus.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":139
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xMean___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":140
 *     @property
 *     def xMean(self):
 *         return self.b2ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 140, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 140, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":139
 * 
 *     @property
 *     def xMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":143
 * 
 *     @property
 *     def yMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5yMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5yMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5yMean___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5yMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":144
 *     @property
 *     def yMean(self):
 *         return self.b2ptr().xMean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 144, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 144, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":143
 * 
 *     @property
 *     def yMean(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xMean()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":147
 * 
 *     @property
 *     def xyMean(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xMean, self.yMean)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xyMean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xyMean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xyMean___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6xyMean___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":148
 *     @property
 *     def xyMean(self):
 *         return util.XY(self.xMean, self.yMean)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMean); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMean); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":147
 * 
 *     @property
 *     def xyMean(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xMean, self.yMean)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyMean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":152
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9xVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9xVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_9xVariance___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_9xVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":153
 *     @property
 *     def xVariance(self):
 *         return self.b2ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 153, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 153, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":152
 * 
 *     @property
 *     def xVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":156
 * 
 *     @property
 *     def yVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9yVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9yVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_9yVariance___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_9yVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":157
 *     @property
 *     def yVariance(self):
 *         return self.b2ptr().xVariance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 157, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xVariance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 157, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":156
 * 
 *     @property
 *     def yVariance(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xVariance()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":160
 * 
 *     @property
 *     def xyVariance(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xVariance, self.yVariance)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_10xyVariance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_10xyVariance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_10xyVariance___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_10xyVariance___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":161
 *     @property
 *     def xyVariance(self):
 *         return util.XY(self.xVariance, self.yVariance)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xVariance); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yVariance); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":160
 * 
 *     @property
 *     def xyVariance(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xVariance, self.yVariance)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyVariance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":165
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdDev()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":166
 *     @property
 *     def xStdDev(self):
 *         return self.b2ptr().xStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 166, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 166, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":165
 * 
 *     @property
 *     def xStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdDev()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":169
 * 
 *     @property
 *     def yStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdDev()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7yStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7yStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7yStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7yStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":170
 *     @property
 *     def yStdDev(self):
 *         return self.b2ptr().yStdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 170, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yStdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 170, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":169
 * 
 *     @property
 *     def yStdDev(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdDev()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":173
 * 
 *     @property
 *     def xyStdDev(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdDev, self.yStdDev)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyStdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyStdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyStdDev___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyStdDev___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":174
 *     @property
 *     def xyStdDev(self):
 *         return util.XY(self.xStdDev, self.yStdDev)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdDev); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdDev); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":173
 * 
 *     @property
 *     def xyStdDev(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdDev, self.yStdDev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyStdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":178
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7xStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":179
 *     @property
 *     def xStdErr(self):
 *         return self.b2ptr().xStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 179, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 179, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":178
 * 
 *     @property
 *     def xStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xStdErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":182
 * 
 *     @property
 *     def yStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7yStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7yStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7yStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_7yStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":183
 *     @property
 *     def yStdErr(self):
 *         return self.b2ptr().yStdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 183, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yStdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 183, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":182
 * 
 *     @property
 *     def yStdErr(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yStdErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":186
 * 
 *     @property
 *     def xyStdErr(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdErr, self.yStdErr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyStdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyStdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyStdErr___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8xyStdErr___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":187
 *     @property
 *     def xyStdErr(self):
 *         return util.XY(self.xStdErr, self.yStdErr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdErr); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdErr); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":186
 * 
 *     @property
 *     def xyStdErr(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xStdErr, self.yStdErr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyStdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":191
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xRMS()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xRMS___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4xRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":192
 *     @property
 *     def xRMS(self):
 *         return self.b2ptr().xRMS()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 192, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 192, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":191
 * 
 *     @property
 *     def xRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().xRMS()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":195
 * 
 *     @property
 *     def yRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yRMS()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yRMS___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4yRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":196
 *     @property
 *     def yRMS(self):
 *         return self.b2ptr().yRMS()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 196, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yRMS();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 196, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":195
 * 
 *     @property
 *     def yRMS(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().yRMS()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.yRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":199
 * 
 *     @property
 *     def xyRMS(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xRMS, self.yRMS)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyRMS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyRMS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyRMS___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5xyRMS___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":200
 *     @property
 *     def xyRMS(self):
 *         return util.XY(self.xRMS, self.yRMS)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xRMS); if (unlikely(!__pyx_t_2)) __PYX_ERR(18, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yRMS); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(18, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(18, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":199
 * 
 *     @property
 *     def xyRMS(self):             # <<<<<<<<<<<<<<
 *         return util.XY(self.xRMS, self.yRMS)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.xyRMS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":207
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5sumWX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5sumWX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5sumWX___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5sumWX___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":208
 *     @property
 *     def sumWX(self):
 *         return self.b2ptr().sumWX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 208, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 208, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":207
 * 
 *     @property
 *     def sumWX(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.sumWX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":211
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5sumWY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5sumWY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5sumWY___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_5sumWY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":212
 *     @property
 *     def sumWY(self):
 *         return self.b2ptr().sumWY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 212, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 212, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":211
 * 
 *     @property
 *     def sumWY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.sumWY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":215
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWXY()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWXY___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWXY___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":216
 *     @property
 *     def sumWXY(self):
 *         return self.b2ptr().sumWXY()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 216, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWXY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 216, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":215
 * 
 *     @property
 *     def sumWXY(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWXY()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.sumWXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":219
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWX2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWX2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWX2___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWX2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":220
 *     @property
 *     def sumWX2(self):
 *         return self.b2ptr().sumWX2()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 220, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWX2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 220, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":219
 * 
 *     @property
 *     def sumWX2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWX2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.sumWX2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":223
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWY2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWY2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWY2___get__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6sumWY2___get__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":224
 *     @property
 *     def sumWY2(self):
 *         return self.b2ptr().sumWY2()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 224, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWY2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 224, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(18, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":223
 * 
 *     @property
 *     def sumWY2(self):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().sumWY2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.sumWY2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":231
 *     #    return self
 * 
 *     def adjacentTo(Bin2D_Dbn3D self, Bin2D_Dbn3D other):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().adjacentTo(deref(other.b2ptr()))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5adjacentTo(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_4yoda_4core_11Bin2D_Dbn3D_4adjacentTo[] = "Bin2D_Dbn3D.adjacentTo(self, Bin2D_Dbn3D other)";
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5adjacentTo(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("adjacentTo (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin2D_Dbn3D, 1, "other", 0))) __PYX_ERR(18, 231, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4adjacentTo(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_4adjacentTo(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("adjacentTo", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":232
 * 
 *     def adjacentTo(Bin2D_Dbn3D self, Bin2D_Dbn3D other):
 *         return self.b2ptr().adjacentTo(deref(other.b2ptr()))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 232, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(18, 232, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->adjacentTo((*__pyx_t_2));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 232, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":231
 *     #    return self
 * 
 *     def adjacentTo(Bin2D_Dbn3D self, Bin2D_Dbn3D other):             # <<<<<<<<<<<<<<
 *         return self.b2ptr().adjacentTo(deref(other.b2ptr()))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.adjacentTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":235
 * 
 * 
 *     def __add__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn3D,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin2D_Dbn3D, 1, "self", 0))) __PYX_ERR(18, 235, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin2D_Dbn3D, 1, "other", 0))) __PYX_ERR(18, 235, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6__add__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_6__add__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":236
 * 
 *     def __add__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn3D,
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) + deref(other.b2ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin2D_Dbn3D.pyx":238
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn3D,
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) + deref(other.b2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 238, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(18, 238, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin2D_Dbn3D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 238, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn3D.pyx":236
 * 
 *     def __add__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn3D,
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) + deref(other.b2ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin2D_Dbn3D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":235
 * 
 * 
 *     def __add__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn3D,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/generated/Bin2D_Dbn3D.pyx":240
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) + deref(other.b2ptr())))
 * 
 *     def __sub__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn3D,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Bin2D_Dbn3D, 1, "self", 0))) __PYX_ERR(18, 240, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Bin2D_Dbn3D, 1, "other", 0))) __PYX_ERR(18, 240, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8__sub__(((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_11Bin2D_Dbn3D_8__sub__(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_1;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_2;
  __pyx_t_4yoda_12declarations_Bin2D_Dbn3D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/generated/Bin2D_Dbn3D.pyx":241
 * 
 *     def __sub__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn3D,
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) - deref(other.b2ptr())))
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/generated/Bin2D_Dbn3D.pyx":243
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn3D,
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) - deref(other.b2ptr())))             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(18, 243, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(18, 243, __pyx_L1_error)
  try {
    __pyx_t_3 = new __pyx_t_4yoda_12declarations_Bin2D_Dbn3D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(18, 243, __pyx_L1_error)
  }

  /* "include/generated/Bin2D_Dbn3D.pyx":241
 * 
 *     def __sub__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):
 *         return cutil.new_owned_cls(             # <<<<<<<<<<<<<<
 *             Bin2D_Dbn3D,
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) - deref(other.b2ptr())))
 */
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Bin2D_Dbn3D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(18, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/generated/Bin2D_Dbn3D.pyx":240
 *             new c.Bin2D_Dbn3D(deref(self.b2ptr()) + deref(other.b2ptr())))
 * 
 *     def __sub__(Bin2D_Dbn3D self, Bin2D_Dbn3D other):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(
 *             Bin2D_Dbn3D,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Bin2D_Dbn3D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":4
 * cdef class ProfileBin2D(Bin2D_Dbn3D):
 * 
 *     cdef inline c.ProfileBin2D* pb2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin2D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE YODA::ProfileBin2D *__pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  YODA::ProfileBin2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("pb2ptr", 0);

  /* "include/ProfileBin2D.pyx":5
 * 
 *     cdef inline c.ProfileBin2D* pb2ptr(self) except NULL:
 *         return <c.ProfileBin2D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.ProfileBin2D* _ProfileBin2D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 5, __pyx_L1_error)
  __pyx_r = ((YODA::ProfileBin2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":4
 * cdef class ProfileBin2D(Bin2D_Dbn3D):
 * 
 *     cdef inline c.ProfileBin2D* pb2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin2D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.pb2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":7
 *         return <c.ProfileBin2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.ProfileBin2D* _ProfileBin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin2D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::ProfileBin2D *__pyx_f_4yoda_4core_12ProfileBin2D__ProfileBin2D(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  YODA::ProfileBin2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_ProfileBin2D", 0);

  /* "include/ProfileBin2D.pyx":8
 *     # TODO: remove
 *     cdef inline c.ProfileBin2D* _ProfileBin2D(self) except NULL:
 *         return <c.ProfileBin2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 8, __pyx_L1_error)
  __pyx_r = ((YODA::ProfileBin2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":7
 *         return <c.ProfileBin2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.ProfileBin2D* _ProfileBin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.ProfileBin2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin2D._ProfileBin2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":10
 *         return <c.ProfileBin2D*> self.ptr()
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.ProfileBin2D(xlow, xhigh, ylow, yhigh))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_12ProfileBin2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_12ProfileBin2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(19, 10, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(19, 10, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(19, 10, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(19, 10, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
    __pyx_v_ylow = values[2];
    __pyx_v_yhigh = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(19, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D___init__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_ylow, __pyx_v_yhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_12ProfileBin2D___init__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  YODA::ProfileBin2D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/ProfileBin2D.pyx":11
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.ProfileBin2D(xlow, xhigh, ylow, yhigh))             # <<<<<<<<<<<<<<
 * 
 *     # def fill(self, x, y, z, weight=1.0):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(19, 11, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(19, 11, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(19, 11, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(19, 11, __pyx_L1_error)
  try {
    __pyx_t_5 = new YODA::ProfileBin2D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 11, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(19, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/ProfileBin2D.pyx":10
 *         return <c.ProfileBin2D*> self.ptr()
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.ProfileBin2D(xlow, xhigh, ylow, yhigh))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":20
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().mean()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_4mean_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_4mean_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_4mean___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_4mean___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":21
 *     @property
 *     def mean(self):
 *         return self.pb2ptr().mean()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 21, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->mean();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 21, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":20
 * 
 *     @property
 *     def mean(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().mean()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.mean.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":24
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().stdDev()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_6stdDev_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_6stdDev_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_6stdDev___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6stdDev___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":25
 *     @property
 *     def stdDev(self):
 *         return self.pb2ptr().stdDev()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 25, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->stdDev();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 25, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":24
 * 
 *     @property
 *     def stdDev(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().stdDev()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.stdDev.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":28
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().variance()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_8variance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_8variance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_8variance___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_8variance___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":29
 *     @property
 *     def variance(self):
 *         return self.pb2ptr().variance()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 29, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->variance();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 29, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":28
 * 
 *     @property
 *     def variance(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().variance()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.variance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":32
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().stdErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_6stdErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_6stdErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_6stdErr___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6stdErr___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":33
 *     @property
 *     def stdErr(self):
 *         return self.pb2ptr().stdErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 33, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->stdErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 33, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":32
 * 
 *     @property
 *     def stdErr(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().stdErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.stdErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":36
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().rms()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_3rms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_3rms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_3rms___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_3rms___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":37
 *     @property
 *     def rms(self):
 *         return self.pb2ptr().rms()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 37, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->rms();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 37, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":36
 * 
 *     @property
 *     def rms(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().rms()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.rms.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":40
 * 
 *     @property
 *     def sumWZ(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().sumWZ()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_5sumWZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_5sumWZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_5sumWZ___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_5sumWZ___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":41
 *     @property
 *     def sumWZ(self):
 *         return self.pb2ptr().sumWZ()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 41, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWZ();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 41, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":40
 * 
 *     @property
 *     def sumWZ(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().sumWZ()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.sumWZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":44
 * 
 *     @property
 *     def sumWZ2(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().sumWZ2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_6sumWZ2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_6sumWZ2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_6sumWZ2___get__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6sumWZ2___get__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/ProfileBin2D.pyx":45
 *     @property
 *     def sumWZ2(self):
 *         return self.pb2ptr().sumWZ2()             # <<<<<<<<<<<<<<
 * 
 *     def __add__(ProfileBin2D a, ProfileBin2D b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 45, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->sumWZ2();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 45, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":44
 * 
 *     @property
 *     def sumWZ2(self):             # <<<<<<<<<<<<<<
 *         return self.pb2ptr().sumWZ2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.sumWZ2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":47
 *         return self.pb2ptr().sumWZ2()
 * 
 *     def __add__(ProfileBin2D a, ProfileBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) + deref(b.pb2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_3__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_3__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_ProfileBin2D, 1, "a", 0))) __PYX_ERR(19, 47, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_ProfileBin2D, 1, "b", 0))) __PYX_ERR(19, 47, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_2__add__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_2__add__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  YODA::ProfileBin2D *__pyx_t_2;
  YODA::ProfileBin2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/ProfileBin2D.pyx":48
 * 
 *     def __add__(ProfileBin2D a, ProfileBin2D b):
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) + deref(b.pb2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(ProfileBin2D a, ProfileBin2D b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 48, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(19, 48, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::ProfileBin2D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 48, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(19, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":47
 *         return self.pb2ptr().sumWZ2()
 * 
 *     def __add__(ProfileBin2D a, ProfileBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) + deref(b.pb2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":50
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) + deref(b.pb2ptr())))
 * 
 *     def __sub__(ProfileBin2D a, ProfileBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) - deref(b.pb2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_5__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_5__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_ProfileBin2D, 1, "a", 0))) __PYX_ERR(19, 50, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_ProfileBin2D, 1, "b", 0))) __PYX_ERR(19, 50, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_4__sub__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_4__sub__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::ProfileBin2D *__pyx_t_1;
  YODA::ProfileBin2D *__pyx_t_2;
  YODA::ProfileBin2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/ProfileBin2D.pyx":51
 * 
 *     def __sub__(ProfileBin2D a, ProfileBin2D b):
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) - deref(b.pb2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(19, 51, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(19, 51, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::ProfileBin2D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(19, 51, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(19, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":50
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) + deref(b.pb2ptr())))
 * 
 *     def __sub__(ProfileBin2D a, ProfileBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) - deref(b.pb2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/ProfileBin2D.pyx":53
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) - deref(b.pb2ptr())))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'ProfileBin2D(%g, %g, %g, %g)' % (self.edges.x + self.edges.y)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_12ProfileBin2D_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12ProfileBin2D_6__repr__(((struct __pyx_obj_4yoda_4core_ProfileBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12ProfileBin2D_6__repr__(struct __pyx_obj_4yoda_4core_ProfileBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/ProfileBin2D.pyx":54
 * 
 *     def __repr__(self):
 *         return 'ProfileBin2D(%g, %g, %g, %g)' % (self.edges.x + self.edges.y)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_edges); if (unlikely(!__pyx_t_1)) __PYX_ERR(19, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(19, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_edges); if (unlikely(!__pyx_t_1)) __PYX_ERR(19, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(19, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_ProfileBin2D_g_g_g_g, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(19, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/ProfileBin2D.pyx":53
 *         return cutil.new_owned_cls(ProfileBin2D, new c.ProfileBin2D(deref(a.pb2ptr()) - deref(b.pb2ptr())))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'ProfileBin2D(%g, %g, %g, %g)' % (self.edges.x + self.edges.y)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.ProfileBin2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":4
 * cdef class HistoBin2D(Bin2D_Dbn2D):
 * 
 *     cdef inline c.HistoBin2D* hb2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin2D*> self.ptr()
 *     # TODO: remove
 */

static CYTHON_INLINE YODA::HistoBin2D *__pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  YODA::HistoBin2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("hb2ptr", 0);

  /* "include/HistoBin2D.pyx":5
 * 
 *     cdef inline c.HistoBin2D* hb2ptr(self) except NULL:
 *         return <c.HistoBin2D*> self.ptr()             # <<<<<<<<<<<<<<
 *     # TODO: remove
 *     cdef inline c.HistoBin2D* _HistoBin2D(self) except NULL:
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 5, __pyx_L1_error)
  __pyx_r = ((YODA::HistoBin2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":4
 * cdef class HistoBin2D(Bin2D_Dbn2D):
 * 
 *     cdef inline c.HistoBin2D* hb2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin2D*> self.ptr()
 *     # TODO: remove
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin2D.hb2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":7
 *         return <c.HistoBin2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.HistoBin2D* _HistoBin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin2D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::HistoBin2D *__pyx_f_4yoda_4core_10HistoBin2D__HistoBin2D(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  YODA::HistoBin2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("_HistoBin2D", 0);

  /* "include/HistoBin2D.pyx":8
 *     # TODO: remove
 *     cdef inline c.HistoBin2D* _HistoBin2D(self) except NULL:
 *         return <c.HistoBin2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 8, __pyx_L1_error)
  __pyx_r = ((YODA::HistoBin2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":7
 *         return <c.HistoBin2D*> self.ptr()
 *     # TODO: remove
 *     cdef inline c.HistoBin2D* _HistoBin2D(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.HistoBin2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin2D._HistoBin2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":10
 *         return <c.HistoBin2D*> self.ptr()
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.HistoBin2D(xlow, xhigh, ylow, yhigh))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_10HistoBin2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_10HistoBin2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(20, 10, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(20, 10, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(20, 10, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(20, 10, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
    __pyx_v_ylow = values[2];
    __pyx_v_yhigh = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(20, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.HistoBin2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D___init__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_ylow, __pyx_v_yhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_10HistoBin2D___init__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  YODA::HistoBin2D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/HistoBin2D.pyx":11
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):
 *         cutil.set_owned_ptr(self, new c.HistoBin2D(xlow, xhigh, ylow, yhigh))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(20, 11, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(20, 11, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(20, 11, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(20, 11, __pyx_L1_error)
  try {
    __pyx_t_5 = new YODA::HistoBin2D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 11, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(20, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/HistoBin2D.pyx":10
 *         return <c.HistoBin2D*> self.ptr()
 * 
 *     def __init__(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.HistoBin2D(xlow, xhigh, ylow, yhigh))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":18
 * 
 *     @property
 *     def volume(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().volume()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_6volume_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_6volume_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_6volume___get__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6volume___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin2D.pyx":19
 *     @property
 *     def volume(self):
 *         return self.hb2ptr().volume()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 19, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->volume();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 19, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(20, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":18
 * 
 *     @property
 *     def volume(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().volume()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.volume.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":22
 * 
 *     @property
 *     def height(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().height()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_6height___get__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6height___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin2D.pyx":23
 *     @property
 *     def height(self):
 *         return self.hb2ptr().height()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 23, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->height();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 23, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(20, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":22
 * 
 *     @property
 *     def height(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().height()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":26
 * 
 *     @property
 *     def volumeErr(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().volumeErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_9volumeErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_9volumeErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_9volumeErr___get__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_9volumeErr___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin2D.pyx":27
 *     @property
 *     def volumeErr(self):
 *         return self.hb2ptr().volumeErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 27, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->volumeErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 27, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(20, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":26
 * 
 *     @property
 *     def volumeErr(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().volumeErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.volumeErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":30
 * 
 *     @property
 *     def heightErr(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().heightErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_9heightErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_9heightErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_9heightErr___get__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_9heightErr___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin2D.pyx":31
 *     @property
 *     def heightErr(self):
 *         return self.hb2ptr().heightErr()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 31, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->heightErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 31, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(20, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":30
 * 
 *     @property
 *     def heightErr(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().heightErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.heightErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":34
 * 
 *     @property
 *     def relErr(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().relErr()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_6relErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_6relErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_6relErr___get__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6relErr___get__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/HistoBin2D.pyx":35
 *     @property
 *     def relErr(self):
 *         return self.hb2ptr().relErr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 35, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->relErr();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 35, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(20, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":34
 * 
 *     @property
 *     def relErr(self):             # <<<<<<<<<<<<<<
 *         return self.hb2ptr().relErr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.relErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":38
 * 
 * 
 *     def __add__(HistoBin2D a, HistoBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) + deref(b.hb2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_3__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_3__add__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_HistoBin2D, 1, "a", 0))) __PYX_ERR(20, 38, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_HistoBin2D, 1, "b", 0))) __PYX_ERR(20, 38, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_2__add__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_2__add__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  YODA::HistoBin2D *__pyx_t_2;
  YODA::HistoBin2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/HistoBin2D.pyx":39
 * 
 *     def __add__(HistoBin2D a, HistoBin2D b):
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) + deref(b.hb2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __sub__(HistoBin2D a, HistoBin2D b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 39, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(20, 39, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::HistoBin2D(((*__pyx_t_1) + (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 39, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(20, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":38
 * 
 * 
 *     def __add__(HistoBin2D a, HistoBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) + deref(b.hb2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":41
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) + deref(b.hb2ptr())))
 * 
 *     def __sub__(HistoBin2D a, HistoBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) - deref(b.hb2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_5__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_5__sub__(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_4yoda_4core_HistoBin2D, 1, "a", 0))) __PYX_ERR(20, 41, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b), __pyx_ptype_4yoda_4core_HistoBin2D, 1, "b", 0))) __PYX_ERR(20, 41, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_4__sub__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_a), ((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_b));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_4__sub__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_a, struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::HistoBin2D *__pyx_t_1;
  YODA::HistoBin2D *__pyx_t_2;
  YODA::HistoBin2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/HistoBin2D.pyx":42
 * 
 *     def __sub__(HistoBin2D a, HistoBin2D b):
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) - deref(b.hb2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_a); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(20, 42, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_10HistoBin2D_hb2ptr(__pyx_v_b); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(20, 42, __pyx_L1_error)
  try {
    __pyx_t_3 = new YODA::HistoBin2D(((*__pyx_t_1) - (*__pyx_t_2)));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(20, 42, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin2D), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(20, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":41
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) + deref(b.hb2ptr())))
 * 
 *     def __sub__(HistoBin2D a, HistoBin2D b):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) - deref(b.hb2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/HistoBin2D.pyx":44
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) - deref(b.hb2ptr())))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'HistoBin2D(%g, %g, %g, %g)' % (self.xEdges + self.yEdges)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_10HistoBin2D_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_10HistoBin2D_6__repr__(((struct __pyx_obj_4yoda_4core_HistoBin2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10HistoBin2D_6__repr__(struct __pyx_obj_4yoda_4core_HistoBin2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/HistoBin2D.pyx":45
 * 
 *     def __repr__(self):
 *         return 'HistoBin2D(%g, %g, %g, %g)' % (self.xEdges + self.yEdges)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xEdges); if (unlikely(!__pyx_t_1)) __PYX_ERR(20, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yEdges); if (unlikely(!__pyx_t_2)) __PYX_ERR(20, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(20, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_HistoBin2D_g_g_g_g, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(20, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/HistoBin2D.pyx":44
 *         return cutil.new_owned_cls(HistoBin2D, new c.HistoBin2D(deref(a.hb2ptr()) - deref(b.hb2ptr())))
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'HistoBin2D(%g, %g, %g, %g)' % (self.xEdges + self.yEdges)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.HistoBin2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":28
 *     """
 * 
 *     cdef inline c.Histo2D* h2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Histo2D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Histo2D *__pyx_f_4yoda_4core_7Histo2D_h2ptr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  YODA::Histo2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("h2ptr", 0);

  /* "include/Histo2D.pyx":29
 * 
 *     cdef inline c.Histo2D* h2ptr(self) except NULL:
 *         return <c.Histo2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 29, __pyx_L1_error)
  __pyx_r = ((YODA::Histo2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Histo2D.pyx":28
 *     """
 * 
 *     cdef inline c.Histo2D* h2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Histo2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.h2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":32
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Histo2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_7Histo2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D___init__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Histo2D___init__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Histo2D.pyx":33
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init2(Histo2D self, char *path="", char *title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_args); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, __pyx_v_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Histo2D.pyx":32
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":35
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 *     def __init2(Histo2D self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo2D(string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_2__init2[] = "Histo2D.__init2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init2") < 0)) __PYX_ERR(0, 35, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(0, 35, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(0, 35, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 35, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_2__init2(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_2__init2(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Histo2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init2", 0);

  /* "include/Histo2D.pyx":36
 * 
 *     def __init2(Histo2D self, char *path="", char *title=""):
 *         cutil.set_owned_ptr(self, new c.Histo2D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init4(Histo2D self, xedges,  yedges,  char* path="", char* title=""):
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 36, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 36, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Histo2D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 36, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Histo2D.pyx":35
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 *     def __init2(Histo2D self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo2D(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Histo2D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":38
 *         cutil.set_owned_ptr(self, new c.Histo2D(string(path), string(title)))
 * 
 *     def __init4(Histo2D self, xedges,  yedges,  char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do some type-checking and allow iterables of HistoBin2D as well?
 *         cutil.set_owned_ptr(self, new c.Histo2D(xedges, yedges, string(path), string(title)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_5__init4(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_4__init4[] = "Histo2D.__init4(self, xedges, yedges, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_5__init4(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xedges = 0;
  PyObject *__pyx_v_yedges = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init4 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xedges,&__pyx_n_s_yedges,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xedges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yedges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init4", 0, 2, 4, 1); __PYX_ERR(0, 38, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init4") < 0)) __PYX_ERR(0, 38, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xedges = values[0];
    __pyx_v_yedges = values[1];
    if (values[2]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(0, 38, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[3]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[3]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(0, 38, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init4", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 38, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.__init4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_4__init4(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_xedges, __pyx_v_yedges, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4__init4(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_xedges, PyObject *__pyx_v_yedges, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<double>  __pyx_t_1;
  std::vector<double>  __pyx_t_2;
  std::string __pyx_t_3;
  std::string __pyx_t_4;
  YODA::Histo2D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init4", 0);

  /* "include/Histo2D.pyx":40
 *     def __init4(Histo2D self, xedges,  yedges,  char* path="", char* title=""):
 *         # TODO: Do some type-checking and allow iterables of HistoBin2D as well?
 *         cutil.set_owned_ptr(self, new c.Histo2D(xedges, yedges, string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init8(Histo2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char* path="", char* title=""):
 */
  __pyx_t_1 = __pyx_convert_vector_from_py_double(__pyx_v_xedges); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_double(__pyx_v_yedges); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 40, __pyx_L1_error)
  try {
    __pyx_t_3 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  try {
    __pyx_t_4 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  try {
    __pyx_t_5 = new YODA::Histo2D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/Histo2D.pyx":38
 *         cutil.set_owned_ptr(self, new c.Histo2D(string(path), string(title)))
 * 
 *     def __init4(Histo2D self, xedges,  yedges,  char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do some type-checking and allow iterables of HistoBin2D as well?
 *         cutil.set_owned_ptr(self, new c.Histo2D(xedges, yedges, string(path), string(title)))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Histo2D.__init4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":42
 *         cutil.set_owned_ptr(self, new c.Histo2D(xedges, yedges, string(path), string(title)))
 * 
 *     def __init8(Histo2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo2D(nxbins, xlow, xhigh,  nybins, ylow, yhigh,  string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_7__init8(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_6__init8[] = "Histo2D.__init8(self, nxbins, xlow, xhigh, nybins, ylow, yhigh, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_7__init8(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nxbins = 0;
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_nybins = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init8 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nxbins,&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_nybins,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nxbins)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 1); __PYX_ERR(0, 42, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 2); __PYX_ERR(0, 42, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nybins)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 3); __PYX_ERR(0, 42, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 4); __PYX_ERR(0, 42, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 5); __PYX_ERR(0, 42, __pyx_L3_error)
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init8") < 0)) __PYX_ERR(0, 42, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_nxbins = values[0];
    __pyx_v_xlow = values[1];
    __pyx_v_xhigh = values[2];
    __pyx_v_nybins = values[3];
    __pyx_v_ylow = values[4];
    __pyx_v_yhigh = values[5];
    if (values[6]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[6]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[7]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[7]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 42, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.__init8", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_6__init8(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_nxbins, __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_nybins, __pyx_v_ylow, __pyx_v_yhigh, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_6__init8(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_nxbins, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_nybins, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  size_t __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  std::string __pyx_t_7;
  std::string __pyx_t_8;
  YODA::Histo2D *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__init8", 0);

  /* "include/Histo2D.pyx":43
 * 
 *     def __init8(Histo2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char* path="", char* title=""):
 *         cutil.set_owned_ptr(self, new c.Histo2D(nxbins, xlow, xhigh,  nybins, ylow, yhigh,  string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_nxbins); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_v_nybins); if (unlikely((__pyx_t_4 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  try {
    __pyx_t_7 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 43, __pyx_L1_error)
  }
  try {
    __pyx_t_8 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 43, __pyx_L1_error)
  }
  try {
    __pyx_t_9 = new YODA::Histo2D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 43, __pyx_L1_error)
  }
  __pyx_t_10 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "include/Histo2D.pyx":42
 *         cutil.set_owned_ptr(self, new c.Histo2D(xedges, yedges, string(path), string(title)))
 * 
 *     def __init8(Histo2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Histo2D(nxbins, xlow, xhigh,  nybins, ylow, yhigh,  string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yoda.core.Histo2D.__init8", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":46
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         "Number of bins"
 *         return self.numBins
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_7Histo2D_9__len__(PyObject *__pyx_v_self); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_8__len__[] = "Number of bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_7Histo2D_8__len__;
#endif
static Py_ssize_t __pyx_pw_4yoda_4core_7Histo2D_9__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_8__len__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_7Histo2D_8__len__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Histo2D.pyx":48
 *     def __len__(self):
 *         "Number of bins"
 *         return self.numBins             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, py_ix):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numBins); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":46
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         "Number of bins"
 *         return self.numBins
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo2D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":50
 *         return self.numBins
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.h2ptr().numBins())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_10__getitem__[] = "Direct access to bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_7Histo2D_10__getitem__;
#endif
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_10__getitem__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((PyObject *)__pyx_v_py_ix));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_10__getitem__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Histo2D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  __Pyx_FakeReference<YODA::HistoBin2D> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Histo2D.pyx":52
 *     def __getitem__(self, py_ix):
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.h2ptr().numBins())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(HistoBin2D, & self.h2ptr().bins().at(i), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_py_ix); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 52, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 52, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 52, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_4 == 0 && PyErr_Occurred())) __PYX_ERR(0, 52, __pyx_L1_error)
  __pyx_v_i = __pyx_t_4;

  /* "include/Histo2D.pyx":53
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.h2ptr().numBins())
 *         return cutil.new_borrowed_cls(HistoBin2D, & self.h2ptr().bins().at(i), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 53, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_2->bins().at(__pyx_v_i);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 53, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin2D), (&__pyx_t_5), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":50
 *         return self.numBins
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.h2ptr().numBins())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Histo2D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":56
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%.2g>" % (self.__class__.__name__, self.path, len(self.bins), self.sumW())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_12__repr__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_12__repr__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Histo2D.pyx":57
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d bins, sumw=%.2g>" % (self.__class__.__name__, self.path, len(self.bins), self.sumW())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bins); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 57, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 57, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_bins_sumw_2g, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":56
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%.2g>" % (self.__class__.__name__, self.path, len(self.bins), self.sumW())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":60
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_14reset[] = "Histo2D.reset(self)\nNone -> None.\n        Reset the histogram but leave the bin structure.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_14reset(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_14reset(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Histo2D.pyx":63
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 *         self.h2ptr().reset()             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 63, __pyx_L1_error)
  try {
    __pyx_t_1->reset();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 63, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":60
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":65
 *         self.h2ptr().reset()
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Histo2D.
 *         Clone this Profile2D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_16clone[] = "Histo2D.clone(self)\nNone -> Histo2D.\n        Clone this Profile2D.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_16clone(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_16clone(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  YODA::Histo2D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Histo2D.pyx":68
 *         """None -> Histo2D.
 *         Clone this Profile2D."""
 *         return cutil.new_owned_cls(Histo2D, self.h2ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 68, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 68, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Histo2D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":65
 *         self.h2ptr().reset()
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Histo2D.
 *         Clone this Profile2D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":71
 * 
 * 
 *     def fill(self, double x, double y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,y,[w]) -> None.
 *         Fill with given x,y values and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_18fill[] = "Histo2D.fill(self, double x, double y, weight=1.0)\n(x,y,[w]) -> None.\n        Fill with given x,y values and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x;
  double __pyx_v_y;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_weight,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 2, 3, 1); __PYX_ERR(0, 71, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(0, 71, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 71, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 71, __pyx_L3_error)
    __pyx_v_weight = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 71, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_18fill(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_18fill(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, double __pyx_v_x, double __pyx_v_y, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Histo2D.pyx":74
 *         """(x,y,[w]) -> None.
 *         Fill with given x,y values and optional weight."""
 *         self.h2ptr().fill(x, y, weight)             # <<<<<<<<<<<<<<
 * 
 *     def fillBin(self, size_t i, weight=1.0):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 74, __pyx_L1_error)
  try {
    __pyx_t_1->fill(__pyx_v_x, __pyx_v_y, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 74, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":71
 * 
 * 
 *     def fill(self, double x, double y, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,y,[w]) -> None.
 *         Fill with given x,y values and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":76
 *         self.h2ptr().fill(x, y, weight)
 * 
 *     def fillBin(self, size_t i, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(i,[w]) -> None.
 *         Fill bin i and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_20fillBin[] = "Histo2D.fillBin(self, size_t i, weight=1.0)\n(i,[w]) -> None.\n        Fill bin i and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_i;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fillBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_weight,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fillBin") < 0)) __PYX_ERR(0, 76, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_i = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_i == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 76, __pyx_L3_error)
    __pyx_v_weight = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fillBin", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 76, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_20fillBin(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_i, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_20fillBin(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, size_t __pyx_v_i, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fillBin", 0);

  /* "include/Histo2D.pyx":79
 *         """(i,[w]) -> None.
 *         Fill bin i and optional weight."""
 *         self.h2ptr().fillBin(i, weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 79, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 79, __pyx_L1_error)
  try {
    __pyx_t_1->fillBin(__pyx_v_i, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 79, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":76
 *         self.h2ptr().fill(x, y, weight)
 * 
 *     def fillBin(self, size_t i, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(i,[w]) -> None.
 *         Fill bin i and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":83
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_8totalDbn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_8totalDbn_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_8totalDbn___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":86
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 *         return cutil.new_borrowed_cls(Dbn2D, &self.h2ptr().totalDbn(), self)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: reinstate
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 86, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn2D), (&__pyx_t_1->totalDbn()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":83
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn2D
 *         The Dbn2D representing the total distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Histo2D.totalDbn.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":95
 * 
 * 
 *     def integral(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Histogram integral, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_23integral(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_22integral[] = "Histo2D.integral(self, includeoverflows=True)\n([bool]) -> float\n        Histogram integral, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_23integral(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integral (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integral") < 0)) __PYX_ERR(0, 95, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integral", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 95, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.integral", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_22integral(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_22integral(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("integral", 0);

  /* "include/Histo2D.pyx":98
 *         """([bool]) -> float
 *         Histogram integral, optionally excluding the overflows."""
 *         return self.h2ptr().integral(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 98, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 98, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->integral(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":95
 * 
 * 
 *     def integral(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Histogram integral, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.integral", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":101
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_25numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_24numEntries[] = "Histo2D.numEntries(self, includeoverflows=True)\n([bool]) -> int\n        Number of times this histogram was filled, optionally excluding overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_25numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "numEntries") < 0)) __PYX_ERR(0, 101, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("numEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 101, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_24numEntries(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_24numEntries(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("numEntries", 0);

  /* "include/Histo2D.pyx":104
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding overflows."""
 *         return self.h2ptr().numEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def effNumEntries(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 104, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 104, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_1->numEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":101
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":106
 *         return self.h2ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_27effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_26effNumEntries[] = "Histo2D.effNumEntries(self, includeoverflows=True)\n([bool]) -> float\n        Effective number of times this histogram was filled, computed from weights and optionally excluding overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_27effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("effNumEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "effNumEntries") < 0)) __PYX_ERR(0, 106, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("effNumEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 106, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_26effNumEntries(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_26effNumEntries(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("effNumEntries", 0);

  /* "include/Histo2D.pyx":109
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding overflows."""
 *         return self.h2ptr().effNumEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 109, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 109, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->effNumEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":106
 *         return self.h2ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":111
 *         return self.h2ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_29sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_28sumW[] = "Histo2D.sumW(self, includeoverflows=True)\n([bool]) -> float\n        Sum of weights filled into this histogram.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_29sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW") < 0)) __PYX_ERR(0, 111, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 111, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_28sumW(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_28sumW(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW", 0);

  /* "include/Histo2D.pyx":114
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 *         return self.h2ptr().sumW(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW2(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 114, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 114, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":111
 *         return self.h2ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":116
 *         return self.h2ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of squared weights filled into this histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_31sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_30sumW2[] = "Histo2D.sumW2(self, includeoverflows=True)\n([bool]) -> float\n        Sum of squared weights filled into this histogram.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_31sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW2") < 0)) __PYX_ERR(0, 116, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW2", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 116, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_30sumW2(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_30sumW2(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW2", 0);

  /* "include/Histo2D.pyx":119
 *         """([bool]) -> float
 *         Sum of squared weights filled into this histogram."""
 *         return self.h2ptr().sumW2(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 119, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW2(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":116
 *         return self.h2ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of squared weights filled into this histogram."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":122
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_33xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_32xMean[] = "Histo2D.xMean(self, includeoverflows=True)\n([bool]) -> float\n        Mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_33xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xMean") < 0)) __PYX_ERR(0, 122, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 122, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_32xMean(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_32xMean(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xMean", 0);

  /* "include/Histo2D.pyx":125
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().xMean(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yMean(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xMean(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":122
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":127
 *         return self.h2ptr().xMean(includeoverflows)
 * 
 *     def yMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_35yMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_34yMean[] = "Histo2D.yMean(self, includeoverflows=True)\n([bool]) -> float\n        Mean y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_35yMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yMean") < 0)) __PYX_ERR(0, 127, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 127, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.yMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_34yMean(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_34yMean(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yMean", 0);

  /* "include/Histo2D.pyx":130
 *         """([bool]) -> float
 *         Mean y of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().yMean(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyMean(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 130, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 130, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yMean(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":127
 *         return self.h2ptr().xMean(includeoverflows)
 * 
 *     def yMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":132
 *         return self.h2ptr().yMean(includeoverflows)
 * 
 *     def xyMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Mean (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_37xyMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_36xyMean[] = "Histo2D.xyMean(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Mean (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_37xyMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyMean") < 0)) __PYX_ERR(0, 132, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 132, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xyMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_36xyMean(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_36xyMean(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyMean", 0);

  /* "include/Histo2D.pyx":135
 *         """([bool]) -> (float,float)
 *         Mean (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xMean(includeoverflows), self.yMean(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMean); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMean); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":132
 *         return self.h2ptr().yMean(includeoverflows)
 * 
 *     def xyMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Mean (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.xyMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":138
 * 
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_39xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_38xVariance[] = "Histo2D.xVariance(self, includeoverflows=True)\n([bool]) -> float\n        Variance in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_39xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xVariance") < 0)) __PYX_ERR(0, 138, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 138, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_38xVariance(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_38xVariance(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xVariance", 0);

  /* "include/Histo2D.pyx":141
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().xVariance(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yVariance(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 141, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 141, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xVariance(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":138
 * 
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":143
 *         return self.h2ptr().xVariance(includeoverflows)
 * 
 *     def yVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_41yVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_40yVariance[] = "Histo2D.yVariance(self, includeoverflows=True)\n([bool]) -> float\n        Variance in y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_41yVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yVariance") < 0)) __PYX_ERR(0, 143, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 143, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.yVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_40yVariance(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_40yVariance(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yVariance", 0);

  /* "include/Histo2D.pyx":146
 *         """([bool]) -> float
 *         Variance in y of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().yVariance(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyVariance(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 146, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 146, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yVariance(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":143
 *         return self.h2ptr().xVariance(includeoverflows)
 * 
 *     def yVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":148
 *         return self.h2ptr().yVariance(includeoverflows)
 * 
 *     def xyVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Variances in (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_43xyVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_42xyVariance[] = "Histo2D.xyVariance(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Variances in (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_43xyVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyVariance") < 0)) __PYX_ERR(0, 148, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 148, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xyVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_42xyVariance(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_42xyVariance(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyVariance", 0);

  /* "include/Histo2D.pyx":151
 *         """([bool]) -> (float,float)
 *         Variances in (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xVariance(includeoverflows), self.yVariance(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xVariance); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yVariance); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":148
 *         return self.h2ptr().yVariance(includeoverflows)
 * 
 *     def xyVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Variances in (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.xyVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":154
 * 
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_45xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_44xStdDev[] = "Histo2D.xStdDev(self, includeoverflows=True)\n([bool]) -> float\n        Standard deviation in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_45xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdDev") < 0)) __PYX_ERR(0, 154, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 154, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_44xStdDev(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_44xStdDev(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdDev", 0);

  /* "include/Histo2D.pyx":157
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().xStdDev(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yStdDev(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 157, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 157, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdDev(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":154
 * 
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":159
 *         return self.h2ptr().xStdDev(includeoverflows)
 * 
 *     def yStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_47yStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_46yStdDev[] = "Histo2D.yStdDev(self, includeoverflows=True)\n([bool]) -> float\n        Standard deviation in y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_47yStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yStdDev") < 0)) __PYX_ERR(0, 159, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 159, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.yStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_46yStdDev(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_46yStdDev(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yStdDev", 0);

  /* "include/Histo2D.pyx":162
 *         """([bool]) -> float
 *         Standard deviation in y of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().yStdDev(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyStdDev(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 162, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 162, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yStdDev(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":159
 *         return self.h2ptr().xStdDev(includeoverflows)
 * 
 *     def yStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":164
 *         return self.h2ptr().yStdDev(includeoverflows)
 * 
 *     def xyStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard deviations in (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_49xyStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_48xyStdDev[] = "Histo2D.xyStdDev(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Standard deviations in (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_49xyStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyStdDev") < 0)) __PYX_ERR(0, 164, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 164, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xyStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_48xyStdDev(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_48xyStdDev(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyStdDev", 0);

  /* "include/Histo2D.pyx":167
 *         """([bool]) -> (float,float)
 *         Standard deviations in (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xStdDev(includeoverflows), self.yStdDev(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdDev); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdDev); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":164
 *         return self.h2ptr().yStdDev(includeoverflows)
 * 
 *     def xyStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard deviations in (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.xyStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":170
 * 
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_51xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_50xStdErr[] = "Histo2D.xStdErr(self, includeoverflows=True)\n([bool]) -> float\n        Standard error on the mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_51xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdErr") < 0)) __PYX_ERR(0, 170, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 170, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_50xStdErr(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_50xStdErr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdErr", 0);

  /* "include/Histo2D.pyx":173
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().xStdErr(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yStdErr(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 173, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 173, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdErr(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":170
 * 
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":175
 *         return self.h2ptr().xStdErr(includeoverflows)
 * 
 *     def yStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_53yStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_52yStdErr[] = "Histo2D.yStdErr(self, includeoverflows=True)\n([bool]) -> float\n        Standard error on the mean y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_53yStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yStdErr") < 0)) __PYX_ERR(0, 175, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 175, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.yStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_52yStdErr(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_52yStdErr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yStdErr", 0);

  /* "include/Histo2D.pyx":178
 *         """([bool]) -> float
 *         Standard error on the mean y of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().yStdErr(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyStdErr(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 178, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yStdErr(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":175
 *         return self.h2ptr().xStdErr(includeoverflows)
 * 
 *     def yStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":180
 *         return self.h2ptr().yStdErr(includeoverflows)
 * 
 *     def xyStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_55xyStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_54xyStdErr[] = "Histo2D.xyStdErr(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_55xyStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyStdErr") < 0)) __PYX_ERR(0, 180, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 180, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xyStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_54xyStdErr(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_54xyStdErr(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyStdErr", 0);

  /* "include/Histo2D.pyx":183
 *         """([bool]) -> (float,float)
 *         Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xStdErr(includeoverflows), self.yStdErr(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdErr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdErr); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":180
 *         return self.h2ptr().yStdErr(includeoverflows)
 * 
 *     def xyStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.xyStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":186
 * 
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_57xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_56xRMS[] = "Histo2D.xRMS(self, includeoverflows=True)\n([bool]) -> float\n        RMS in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_57xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xRMS") < 0)) __PYX_ERR(0, 186, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 186, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_56xRMS(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_56xRMS(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xRMS", 0);

  /* "include/Histo2D.pyx":189
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().xRMS(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yRMS(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 189, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 189, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xRMS(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":186
 * 
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":191
 *         return self.h2ptr().xRMS(includeoverflows)
 * 
 *     def yRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_59yRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_58yRMS[] = "Histo2D.yRMS(self, includeoverflows=True)\n([bool]) -> float\n        RMS in y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_59yRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yRMS") < 0)) __PYX_ERR(0, 191, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 191, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.yRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_58yRMS(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_58yRMS(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yRMS", 0);

  /* "include/Histo2D.pyx":194
 *         """([bool]) -> float
 *         RMS in y of the histogram, optionally excluding the overflows."""
 *         return self.h2ptr().yRMS(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyRMS(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 194, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 194, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yRMS(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":191
 *         return self.h2ptr().xRMS(includeoverflows)
 * 
 *     def yRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":196
 *         return self.h2ptr().yRMS(includeoverflows)
 * 
 *     def xyRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         RMS in (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_61xyRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_60xyRMS[] = "Histo2D.xyRMS(self, includeoverflows=True)\n([bool]) -> (float,float)\n        RMS in (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_61xyRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyRMS") < 0)) __PYX_ERR(0, 196, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 196, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.xyRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_60xyRMS(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_60xyRMS(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyRMS", 0);

  /* "include/Histo2D.pyx":199
 *         """([bool]) -> (float,float)
 *         RMS in (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xRMS(includeoverflows), self.yRMS(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xRMS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yRMS); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":196
 *         return self.h2ptr().yRMS(includeoverflows)
 * 
 *     def xyRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         RMS in (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.xyRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":202
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_63scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_62scaleW[] = "Histo2D.scaleW(self, w)\n(float) -> None.\n        Rescale the weights in this histogram by the factor w.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_63scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_62scaleW(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_62scaleW(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Histo2D.pyx":205
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 *         self.h2ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def normalize(self, double normto, bint includeoverflows=True):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 205, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 205, __pyx_L1_error)
  try {
    __pyx_t_1->scaleW(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 205, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":202
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":207
 *         self.h2ptr().scaleW(w)
 * 
 *     def normalize(self, double normto, bint includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """(float, bool) -> None.
 *         Normalize the histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_65normalize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_64normalize[] = "Histo2D.normalize(self, double normto, bool includeoverflows=True)\n(float, bool) -> None.\n        Normalize the histogram.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_65normalize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_normto;
  int __pyx_v_includeoverflows;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("normalize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_normto,&__pyx_n_s_includeoverflows,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_normto)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "normalize") < 0)) __PYX_ERR(0, 207, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_normto = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_normto == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 207, __pyx_L3_error)
    if (values[1]) {
      __pyx_v_includeoverflows = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_includeoverflows == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 207, __pyx_L3_error)
    } else {
      __pyx_v_includeoverflows = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("normalize", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 207, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.normalize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_64normalize(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_normto, __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_64normalize(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, double __pyx_v_normto, int __pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  __Pyx_RefNannySetupContext("normalize", 0);

  /* "include/Histo2D.pyx":210
 *         """(float, bool) -> None.
 *         Normalize the histogram."""
 *         self.h2ptr().normalize(normto, includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 210, __pyx_L1_error)
  try {
    __pyx_t_1->normalize(__pyx_v_normto, __pyx_v_includeoverflows);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 210, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":207
 *         self.h2ptr().scaleW(w)
 * 
 *     def normalize(self, double normto, bint includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """(float, bool) -> None.
 *         Normalize the histogram."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.normalize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":214
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.h2ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":216
 *     def xMin(self):
 *         """Low x edge of the histo."""
 *         return self.h2ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 216, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 216, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":214
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.h2ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":219
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.h2ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":221
 *     def xMax(self):
 *         """High x edge of the histo."""
 *         return self.h2ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 221, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 221, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":219
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.h2ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":224
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low y edge of the histo."""
 *         return self.h2ptr().yMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4yMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4yMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_4yMin___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":226
 *     def yMin(self):
 *         """Low y edge of the histo."""
 *         return self.h2ptr().yMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 226, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 226, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":224
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low y edge of the histo."""
 *         return self.h2ptr().yMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":229
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High y edge of the histo."""
 *         return self.h2ptr().yMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4yMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4yMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_4yMax___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":231
 *     def yMax(self):
 *         """High y edge of the histo."""
 *         return self.h2ptr().yMax()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 231, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 231, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":229
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High y edge of the histo."""
 *         return self.h2ptr().yMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.yMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":235
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_7numBins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_7numBins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_7numBins___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_7numBins___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":238
 *         """() -> int
 *         Number of bins (not including overflows)."""
 *         return self.h2ptr().numBins()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 238, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 238, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":235
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.numBins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":241
 * 
 *     @property
 *     def numBinsX(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the x axis."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_8numBinsX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_8numBinsX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_8numBinsX___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_8numBinsX___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":244
 *         """() -> int
 *         Number of bins (edges) along the x axis."""
 *         return self.h2ptr().numBinsX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 244, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBinsX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 244, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":241
 * 
 *     @property
 *     def numBinsX(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the x axis."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.numBinsX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":247
 * 
 *     @property
 *     def numBinsY(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the y axis."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_8numBinsY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_8numBinsY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_8numBinsY___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_8numBinsY___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":250
 *         """() -> int
 *         Number of bins (edges) along the y axis."""
 *         return self.h2ptr().numBinsY()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 250, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBinsY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 250, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":247
 * 
 *     @property
 *     def numBinsY(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the y axis."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.numBinsY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":254
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return [self.bin(i) for i in xrange( self.h2ptr().numBins())]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4bins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_4bins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_4bins___get__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_4bins___get__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Histo2D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Histo2D.pyx":256
 *     def bins(self):
 *         """Access the ordered bins list."""
 *         return [self.bin(i) for i in xrange( self.h2ptr().numBins())]             # <<<<<<<<<<<<<<
 * 
 *     def bin(self, i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 256, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 256, __pyx_L1_error)
  }
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bin); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_FromSize_t(__pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 256, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 256, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 256, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 256, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":254
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return [self.bin(i) for i in xrange( self.h2ptr().numBins())]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Histo2D.bins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":258
 *         return [self.bin(i) for i in xrange( self.h2ptr().numBins())]
 * 
 *     def bin(self, i):             # <<<<<<<<<<<<<<
 *         """Get the i'th bin"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.h2ptr().numBins())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_67bin(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_66bin[] = "Histo2D.bin(self, i)\nGet the i'th bin";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_67bin(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bin (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_66bin(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_66bin(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("bin", 0);

  /* "include/Histo2D.pyx":261
 *         """Get the i'th bin"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.h2ptr().numBins())
 *         return cutil.new_borrowed_cls(HistoBin2D, & self.h2ptr().bin(i), self)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: it's more intuitive to have an index for each axis
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 261, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 261, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_HistoBin2D), (&__pyx_t_1->bin(__pyx_t_2)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":258
 *         return [self.bin(i) for i in xrange( self.h2ptr().numBins())]
 * 
 *     def bin(self, i):             # <<<<<<<<<<<<<<
 *         """Get the i'th bin"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.h2ptr().numBins())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Histo2D.bin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":270
 *     #     return cutil.new_borrowed_cls(HistoBin2D, & self.h2ptr().bin(i,j), self)
 * 
 *     def binIndexAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin index pair containing position (x,y)"""
 *         return self.h2ptr().binIndexAt(x, y)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_69binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_68binIndexAt[] = "Histo2D.binIndexAt(self, x, y)\nGet the bin index pair containing position (x,y)";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_69binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binIndexAt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("binIndexAt", 1, 2, 2, 1); __PYX_ERR(0, 270, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "binIndexAt") < 0)) __PYX_ERR(0, 270, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("binIndexAt", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 270, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.binIndexAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_68binIndexAt(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_68binIndexAt(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("binIndexAt", 0);

  /* "include/Histo2D.pyx":272
 *     def binIndexAt(self, x, y):
 *         """Get the bin index pair containing position (x,y)"""
 *         return self.h2ptr().binIndexAt(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def binAt(self, x, y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 272, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 272, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 272, __pyx_L1_error)
  try {
    __pyx_t_4 = __pyx_t_1->binIndexAt(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 272, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":270
 *     #     return cutil.new_borrowed_cls(HistoBin2D, & self.h2ptr().bin(i,j), self)
 * 
 *     def binIndexAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin index pair containing position (x,y)"""
 *         return self.h2ptr().binIndexAt(x, y)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo2D.binIndexAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":274
 *         return self.h2ptr().binIndexAt(x, y)
 * 
 *     def binAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position (x,y)"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_71binAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_70binAt[] = "Histo2D.binAt(self, x, y)\nGet the bin containing position (x,y)";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_71binAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binAt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("binAt", 1, 2, 2, 1); __PYX_ERR(0, 274, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "binAt") < 0)) __PYX_ERR(0, 274, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("binAt", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 274, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.binAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_70binAt(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_70binAt(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("binAt", 0);

  /* "include/Histo2D.pyx":279
 *         #return cutil.new_borrowed_cls(HistoBin2D, & self.h2ptr().binAt(x,y), self)
 *         # TODO: need out-of-range check to return None?
 *         return self.bin(self.binIndexAt(x,y))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bin); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_binIndexAt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v_y);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":274
 *         return self.h2ptr().binIndexAt(x, y)
 * 
 *     def binAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position (x,y)"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.binAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":282
 * 
 * 
 *     def addBin(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         """Add a bin."""
 *         self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_73addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_72addBin[] = "Histo2D.addBin(self, xlow, xhigh, ylow, yhigh)\nAdd a bin.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_73addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, 1); __PYX_ERR(0, 282, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, 2); __PYX_ERR(0, 282, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, 3); __PYX_ERR(0, 282, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addBin") < 0)) __PYX_ERR(0, 282, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_xlow = values[0];
    __pyx_v_xhigh = values[1];
    __pyx_v_ylow = values[2];
    __pyx_v_yhigh = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 282, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_72addBin(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_ylow, __pyx_v_yhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_72addBin(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  std::pair<double,double>  __pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  __Pyx_RefNannySetupContext("addBin", 0);

  /* "include/Histo2D.pyx":284
 *     def addBin(self, xlow, xhigh, ylow, yhigh):
 *         """Add a bin."""
 *         self.h2ptr().addBin(pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                pair[double, double](ylow, yhigh))
 *         return self
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 284, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 284, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 284, __pyx_L1_error)
  try {
    __pyx_t_4 = std::pair<double,double> (__pyx_t_2, __pyx_t_3);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 284, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":285
 *         """Add a bin."""
 *         self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                pair[double, double](ylow, yhigh))             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 285, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 285, __pyx_L1_error)
  try {
    __pyx_t_5 = std::pair<double,double> (__pyx_t_3, __pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 285, __pyx_L1_error)
  }

  /* "include/Histo2D.pyx":284
 *     def addBin(self, xlow, xhigh, ylow, yhigh):
 *         """Add a bin."""
 *         self.h2ptr().addBin(pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                pair[double, double](ylow, yhigh))
 *         return self
 */
  __pyx_t_1->addBin(__pyx_t_4, __pyx_t_5); 

  /* "include/Histo2D.pyx":286
 *         self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                pair[double, double](ylow, yhigh))
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def addBins(self, bounds):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Histo2D.pyx":282
 * 
 * 
 *     def addBin(self, xlow, xhigh, ylow, yhigh):             # <<<<<<<<<<<<<<
 *         """Add a bin."""
 *         self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":288
 *         return self
 * 
 *     def addBins(self, bounds):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_75addBins(PyObject *__pyx_v_self, PyObject *__pyx_v_bounds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_74addBins[] = "Histo2D.addBins(self, bounds)\nAdd several bins.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_75addBins(PyObject *__pyx_v_self, PyObject *__pyx_v_bounds) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBins (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_74addBins(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((PyObject *)__pyx_v_bounds));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_74addBins(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_bounds) {
  PyObject *__pyx_v_xlow = NULL;
  PyObject *__pyx_v_xhigh = NULL;
  PyObject *__pyx_v_ylow = NULL;
  PyObject *__pyx_v_yhigh = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  YODA::Histo2D *__pyx_t_11;
  double __pyx_t_12;
  double __pyx_t_13;
  std::pair<double,double>  __pyx_t_14;
  std::pair<double,double>  __pyx_t_15;
  __Pyx_RefNannySetupContext("addBins", 0);

  /* "include/Histo2D.pyx":291
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 *         for xlow, xhigh, ylow, yhigh in bounds:             # <<<<<<<<<<<<<<
 *             self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                 pair[double, double](ylow, yhigh))
 */
  if (likely(PyList_CheckExact(__pyx_v_bounds)) || PyTuple_CheckExact(__pyx_v_bounds)) {
    __pyx_t_1 = __pyx_v_bounds; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_bounds); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 291, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 291, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 291, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 291, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 4)) {
        if (size > 4) __Pyx_RaiseTooManyValuesError(4);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 291, __pyx_L1_error)
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 2); 
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 3); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_7 = PyList_GET_ITEM(sequence, 2); 
        __pyx_t_8 = PyList_GET_ITEM(sequence, 3); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      #else
      {
        Py_ssize_t i;
        PyObject** temps[4] = {&__pyx_t_5,&__pyx_t_6,&__pyx_t_7,&__pyx_t_8};
        for (i=0; i < 4; i++) {
          PyObject* item = PySequence_ITEM(sequence, i); if (unlikely(!item)) __PYX_ERR(0, 291, __pyx_L1_error)
          __Pyx_GOTREF(item);
          *(temps[i]) = item;
        }
      }
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      PyObject** temps[4] = {&__pyx_t_5,&__pyx_t_6,&__pyx_t_7,&__pyx_t_8};
      __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 291, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_10 = Py_TYPE(__pyx_t_9)->tp_iternext;
      for (index=0; index < 4; index++) {
        PyObject* item = __pyx_t_10(__pyx_t_9); if (unlikely(!item)) goto __pyx_L5_unpacking_failed;
        __Pyx_GOTREF(item);
        *(temps[index]) = item;
      }
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 4) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 291, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_xlow, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_xhigh, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_ylow, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_yhigh, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "include/Histo2D.pyx":292
 *         # TODO: simplify / make consistent
 *         for xlow, xhigh, ylow, yhigh in bounds:
 *             self.h2ptr().addBin(pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                 pair[double, double](ylow, yhigh))
 * 
 */
    __pyx_t_11 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_11 == NULL)) __PYX_ERR(0, 292, __pyx_L1_error)
    __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 292, __pyx_L1_error)
    __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 292, __pyx_L1_error)
    try {
      __pyx_t_14 = std::pair<double,double> (__pyx_t_12, __pyx_t_13);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 292, __pyx_L1_error)
    }

    /* "include/Histo2D.pyx":293
 *         for xlow, xhigh, ylow, yhigh in bounds:
 *             self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                 pair[double, double](ylow, yhigh))             # <<<<<<<<<<<<<<
 * 
 *     # def mergeBins(self, size_t a, size_t b):
 */
    __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 293, __pyx_L1_error)
    __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 293, __pyx_L1_error)
    try {
      __pyx_t_15 = std::pair<double,double> (__pyx_t_13, __pyx_t_12);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 293, __pyx_L1_error)
    }

    /* "include/Histo2D.pyx":292
 *         # TODO: simplify / make consistent
 *         for xlow, xhigh, ylow, yhigh in bounds:
 *             self.h2ptr().addBin(pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                 pair[double, double](ylow, yhigh))
 * 
 */
    __pyx_t_11->addBin(__pyx_t_14, __pyx_t_15); 

    /* "include/Histo2D.pyx":291
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 *         for xlow, xhigh, ylow, yhigh in bounds:             # <<<<<<<<<<<<<<
 *             self.h2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                 pair[double, double](ylow, yhigh))
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo2D.pyx":288
 *         return self
 * 
 *     def addBins(self, bounds):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Histo2D.addBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xlow);
  __Pyx_XDECREF(__pyx_v_xhigh);
  __Pyx_XDECREF(__pyx_v_ylow);
  __Pyx_XDECREF(__pyx_v_yhigh);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":302
 * 
 * 
 *     def mkScatter(self, usefocus=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter3D.
 *         Convert this Histo2D to a Scatter3D, with y representing bin heights
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_77mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_76mkScatter[] = "Histo2D.mkScatter(self, usefocus=False)\nNone -> Scatter3D.\n        Convert this Histo2D to a Scatter3D, with y representing bin heights\n        (not sumW) and height errors.";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_77mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_usefocus = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_usefocus,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usefocus);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mkScatter") < 0)) __PYX_ERR(0, 302, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_usefocus = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mkScatter", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 302, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_76mkScatter(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_usefocus);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_76mkScatter(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, PyObject *__pyx_v_usefocus) {
  YODA::Scatter3D __pyx_v_s3;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  bool __pyx_t_2;
  YODA::Scatter3D __pyx_t_3;
  YODA::Scatter3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Histo2D.pyx":306
 *         Convert this Histo2D to a Scatter3D, with y representing bin heights
 *         (not sumW) and height errors."""
 *         cdef c.Scatter3D s3 = c.mkScatter_Histo2D(deref(self.h2ptr()), usefocus)             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 306, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_usefocus); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(0, 306, __pyx_L1_error)
  try {
    __pyx_t_3 = YODA::mkScatter((*__pyx_t_1), __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 306, __pyx_L1_error)
  }
  __pyx_v_s3 = __pyx_t_3;

  /* "include/Histo2D.pyx":307
 *         (not sumW) and height errors."""
 *         cdef c.Scatter3D s3 = c.mkScatter_Histo2D(deref(self.h2ptr()), usefocus)
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())             # <<<<<<<<<<<<<<
 * 
 *     def divideBy(self, Histo2D h, efficiency=False):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_4 = __pyx_v_s3.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 307, __pyx_L1_error)
  }
  __pyx_t_5 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter3D), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":302
 * 
 * 
 *     def mkScatter(self, usefocus=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter3D.
 *         Convert this Histo2D to a Scatter3D, with y representing bin heights
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Histo2D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":309
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 *     def divideBy(self, Histo2D h, efficiency=False):             # <<<<<<<<<<<<<<
 *         """Histo2D -> Scatter3D
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_79divideBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Histo2D_78divideBy[] = "Histo2D.divideBy(self, Histo2D h, efficiency=False)\nHisto2D -> Scatter3D\n\n        Divide this histogram by Histo2D h, returning a Scatter3D. The optional 'efficiency'\n        argument, if set True, will use a binomial efficiency treatment of the errors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_79divideBy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_h = 0;
  PyObject *__pyx_v_efficiency = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("divideBy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_h,&__pyx_n_s_efficiency,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_h)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_efficiency);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "divideBy") < 0)) __PYX_ERR(0, 309, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Histo2D *)values[0]);
    __pyx_v_efficiency = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("divideBy", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 309, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_h), __pyx_ptype_4yoda_4core_Histo2D, 1, "h", 0))) __PYX_ERR(0, 309, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_78divideBy(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), __pyx_v_h, __pyx_v_efficiency);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_78divideBy(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_h, PyObject *__pyx_v_efficiency) {
  YODA::Scatter3D __pyx_v_s;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  YODA::Histo2D *__pyx_t_3;
  YODA::Histo2D *__pyx_t_4;
  YODA::Scatter3D __pyx_t_5;
  YODA::Scatter3D *__pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("divideBy", 0);

  /* "include/Histo2D.pyx":319
 *         # TODO: allow dividing profiles by histos, etc.? (But then what do the errors mean? Add in quad?)
 *         cdef c.Scatter3D s
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s = c.Histo2D_div_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_efficiency); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 319, __pyx_L1_error)
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "include/Histo2D.pyx":320
 *         cdef c.Scatter3D s
 *         if not efficiency:
 *             s = c.Histo2D_div_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))             # <<<<<<<<<<<<<<
 *         else:
 *             s = c.Histo2D_eff_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))
 */
    __pyx_t_3 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(0, 320, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_h); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(0, 320, __pyx_L1_error)
    try {
      __pyx_t_5 = divide((*__pyx_t_3), (*__pyx_t_4));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(0, 320, __pyx_L1_error)
    }
    __pyx_v_s = __pyx_t_5;

    /* "include/Histo2D.pyx":319
 *         # TODO: allow dividing profiles by histos, etc.? (But then what do the errors mean? Add in quad?)
 *         cdef c.Scatter3D s
 *         if not efficiency:             # <<<<<<<<<<<<<<
 *             s = c.Histo2D_div_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "include/Histo2D.pyx":322
 *             s = c.Histo2D_div_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))
 *         else:
 *             s = c.Histo2D_eff_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter3D, s.newclone())
 * 
 */
  /*else*/ {
    __pyx_t_4 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(0, 322, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_h); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(0, 322, __pyx_L1_error)
    try {
      __pyx_t_5 = efficiency((*__pyx_t_4), (*__pyx_t_3));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(0, 322, __pyx_L1_error)
    }
    __pyx_v_s = __pyx_t_5;
  }
  __pyx_L3:;

  /* "include/Histo2D.pyx":323
 *         else:
 *             s = c.Histo2D_eff_Histo2D(deref(self.h2ptr()), deref(h.h2ptr()))
 *         return cutil.new_owned_cls(Scatter3D, s.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_6 = __pyx_v_s.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(0, 323, __pyx_L1_error)
  }
  __pyx_t_7 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter3D), __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_r = __pyx_t_7;
  __pyx_t_7 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":309
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 *     def divideBy(self, Histo2D h, efficiency=False):             # <<<<<<<<<<<<<<
 *         """Histo2D -> Scatter3D
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Histo2D.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":327
 * 
 * 
 *     def __iadd__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         c.Histo2D_iadd_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_81__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_81__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo2D, 1, "other", 0))) __PYX_ERR(0, 327, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_80__iadd__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_80__iadd__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  YODA::Histo2D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/Histo2D.pyx":328
 * 
 *     def __iadd__(Histo2D self, Histo2D other):
 *         c.Histo2D_iadd_Histo2D(self.h2ptr(), other.h2ptr())             # <<<<<<<<<<<<<<
 *         return self
 *     def __isub__(Histo2D self, Histo2D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 328, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 328, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/Histo2D.pyx":329
 *     def __iadd__(Histo2D self, Histo2D other):
 *         c.Histo2D_iadd_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self             # <<<<<<<<<<<<<<
 *     def __isub__(Histo2D self, Histo2D other):
 *         c.Histo2D_isub_Histo2D(self.h2ptr(), other.h2ptr())
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Histo2D.pyx":327
 * 
 * 
 *     def __iadd__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         c.Histo2D_iadd_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":330
 *         c.Histo2D_iadd_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self
 *     def __isub__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         c.Histo2D_isub_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_83__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_83__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo2D, 1, "other", 0))) __PYX_ERR(0, 330, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_82__isub__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_82__isub__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Histo2D *__pyx_t_1;
  YODA::Histo2D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/Histo2D.pyx":331
 *         return self
 *     def __isub__(Histo2D self, Histo2D other):
 *         c.Histo2D_isub_Histo2D(self.h2ptr(), other.h2ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(0, 331, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 331, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/Histo2D.pyx":332
 *     def __isub__(Histo2D self, Histo2D other):
 *         c.Histo2D_isub_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __add__(Histo2D self, Histo2D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Histo2D.pyx":330
 *         c.Histo2D_iadd_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self
 *     def __isub__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         c.Histo2D_isub_Histo2D(self.h2ptr(), other.h2ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Histo2D.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":334
 *         return self
 * 
 *     def __add__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_85__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_85__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Histo2D, 1, "self", 0))) __PYX_ERR(0, 334, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo2D, 1, "other", 0))) __PYX_ERR(0, 334, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_84__add__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_84__add__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Histo2D *__pyx_t_2;
  YODA::Histo2D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Histo2D.pyx":335
 * 
 *     def __add__(Histo2D self, Histo2D other):
 *         h = Histo2D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Histo2D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Histo2D.pyx":336
 *     def __add__(Histo2D self, Histo2D other):
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))             # <<<<<<<<<<<<<<
 *         return h
 *     def __sub__(Histo2D self, Histo2D other):
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 336, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(0, 336, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_add(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo2D.pyx":337
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))
 *         return h             # <<<<<<<<<<<<<<
 *     def __sub__(Histo2D self, Histo2D other):
 *         h = Histo2D()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Histo2D.pyx":334
 *         return self
 * 
 *     def __add__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":338
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))
 *         return h
 *     def __sub__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_sub_Histo2D(self.h2ptr(), other.h2ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_87__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_87__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Histo2D, 1, "self", 0))) __PYX_ERR(0, 338, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo2D, 1, "other", 0))) __PYX_ERR(0, 338, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_86__sub__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Histo2D_86__sub__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Histo2D *__pyx_t_2;
  YODA::Histo2D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Histo2D.pyx":339
 *         return h
 *     def __sub__(Histo2D self, Histo2D other):
 *         h = Histo2D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Histo2D_sub_Histo2D(self.h2ptr(), other.h2ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Histo2D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Histo2D.pyx":340
 *     def __sub__(Histo2D self, Histo2D other):
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_sub_Histo2D(self.h2ptr(), other.h2ptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(0, 340, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_7Histo2D_h2ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(0, 340, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_sub(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Histo2D.pyx":341
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_sub_Histo2D(self.h2ptr(), other.h2ptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     def __div__(Histo2D self, Histo2D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Histo2D.pyx":338
 *         cutil.set_owned_ptr(h, c.Histo2D_add_Histo2D(self.h2ptr(), other.h2ptr()))
 *         return h
 *     def __sub__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         h = Histo2D()
 *         cutil.set_owned_ptr(h, c.Histo2D_sub_Histo2D(self.h2ptr(), other.h2ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Histo2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Histo2D.pyx":343
 *         return h
 * 
 *     def __div__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

/* Python wrapper */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_89__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Histo2D_89__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Histo2D, 1, "self", 0))) __PYX_ERR(0, 343, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Histo2D, 1, "other", 0))) __PYX_ERR(0, 343, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Histo2D_88__div__(((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Histo2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_7Histo2D_88__div__(struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Histo2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "include/Histo2D.pyx":344
 * 
 *     def __div__(Histo2D self, Histo2D other):
 *         return self.divideBy(other)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_divideBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_other)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_other));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_other));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_other));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Histo2D.pyx":343
 *         return h
 * 
 *     def __div__(Histo2D self, Histo2D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Histo2D.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

/* "include/Profile2D.pyx":30
 *     """
 * 
 *     cdef inline c.Profile2D* p2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Profile2D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Profile2D *__pyx_f_4yoda_4core_9Profile2D_p2ptr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  YODA::Profile2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("p2ptr", 0);

  /* "include/Profile2D.pyx":31
 * 
 *     cdef inline c.Profile2D* p2ptr(self) except NULL:
 *         return <c.Profile2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 31, __pyx_L1_error)
  __pyx_r = ((YODA::Profile2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":30
 *     """
 * 
 *     cdef inline c.Profile2D* p2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Profile2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.p2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":34
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_9Profile2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_9Profile2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D___init__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_9Profile2D___init__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Profile2D.pyx":35
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init2(Profile2D self, char *path="", char *title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init2); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init4); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init8); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_args); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, __pyx_v_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Profile2D.pyx":34
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":37
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 *     def __init2(Profile2D self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Profile2D(string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_2__init2[] = "Profile2D.__init2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_3__init2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init2") < 0)) __PYX_ERR(21, 37, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(21, 37, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(21, 37, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 37, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_2__init2(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_2__init2(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Profile2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init2", 0);

  /* "include/Profile2D.pyx":38
 * 
 *     def __init2(Profile2D self, char *path="", char *title=""):
 *         cutil.set_owned_ptr(self, new c.Profile2D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init4(Profile2D self, xedges,  yedges,  char* path="", char* title=""):
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 38, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 38, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Profile2D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 38, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Profile2D.pyx":37
 *         util.try_loop([self.__init2, self.__init4, self.__init8], *args, **kwargs)
 * 
 *     def __init2(Profile2D self, char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Profile2D(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile2D.__init2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":40
 *         cutil.set_owned_ptr(self, new c.Profile2D(string(path), string(title)))
 * 
 *     def __init4(Profile2D self, xedges,  yedges,  char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do some type-checking and allow iterables of ProfileBin2D as well?
 *         cutil.set_owned_ptr(self, new c.Profile2D(xedges, yedges, string(path), string(title)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_5__init4(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_4__init4[] = "Profile2D.__init4(self, xedges, yedges, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_5__init4(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xedges = 0;
  PyObject *__pyx_v_yedges = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init4 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xedges,&__pyx_n_s_yedges,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xedges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yedges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init4", 0, 2, 4, 1); __PYX_ERR(21, 40, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init4") < 0)) __PYX_ERR(21, 40, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_xedges = values[0];
    __pyx_v_yedges = values[1];
    if (values[2]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(21, 40, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[3]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[3]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(21, 40, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init4", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 40, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.__init4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_4__init4(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_xedges, __pyx_v_yedges, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4__init4(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_xedges, PyObject *__pyx_v_yedges, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<double>  __pyx_t_1;
  std::vector<double>  __pyx_t_2;
  std::string __pyx_t_3;
  std::string __pyx_t_4;
  YODA::Profile2D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__init4", 0);

  /* "include/Profile2D.pyx":42
 *     def __init4(Profile2D self, xedges,  yedges,  char* path="", char* title=""):
 *         # TODO: Do some type-checking and allow iterables of ProfileBin2D as well?
 *         cutil.set_owned_ptr(self, new c.Profile2D(xedges, yedges, string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init8(Profile2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char *path="", char *title=""):
 */
  __pyx_t_1 = __pyx_convert_vector_from_py_double(__pyx_v_xedges); if (unlikely(PyErr_Occurred())) __PYX_ERR(21, 42, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_double(__pyx_v_yedges); if (unlikely(PyErr_Occurred())) __PYX_ERR(21, 42, __pyx_L1_error)
  try {
    __pyx_t_3 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 42, __pyx_L1_error)
  }
  try {
    __pyx_t_4 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 42, __pyx_L1_error)
  }
  try {
    __pyx_t_5 = new YODA::Profile2D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 42, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "include/Profile2D.pyx":40
 *         cutil.set_owned_ptr(self, new c.Profile2D(string(path), string(title)))
 * 
 *     def __init4(Profile2D self, xedges,  yedges,  char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         # TODO: Do some type-checking and allow iterables of ProfileBin2D as well?
 *         cutil.set_owned_ptr(self, new c.Profile2D(xedges, yedges, string(path), string(title)))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Profile2D.__init4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":44
 *         cutil.set_owned_ptr(self, new c.Profile2D(xedges, yedges, string(path), string(title)))
 * 
 *     def __init8(Profile2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Profile2D(nxbins, xlow, xhigh,  nybins, ylow, yhigh,  string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_7__init8(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_6__init8[] = "Profile2D.__init8(self, nxbins, xlow, xhigh, nybins, ylow, yhigh, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_7__init8(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nxbins = 0;
  PyObject *__pyx_v_xlow = 0;
  PyObject *__pyx_v_xhigh = 0;
  PyObject *__pyx_v_nybins = 0;
  PyObject *__pyx_v_ylow = 0;
  PyObject *__pyx_v_yhigh = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init8 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nxbins,&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_nybins,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nxbins)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 1); __PYX_ERR(21, 44, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 2); __PYX_ERR(21, 44, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nybins)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 3); __PYX_ERR(21, 44, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 4); __PYX_ERR(21, 44, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, 5); __PYX_ERR(21, 44, __pyx_L3_error)
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init8") < 0)) __PYX_ERR(21, 44, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_nxbins = values[0];
    __pyx_v_xlow = values[1];
    __pyx_v_xhigh = values[2];
    __pyx_v_nybins = values[3];
    __pyx_v_ylow = values[4];
    __pyx_v_yhigh = values[5];
    if (values[6]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[6]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(21, 44, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[7]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[7]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(21, 44, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init8", 0, 6, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 44, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.__init8", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_6__init8(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_nxbins, __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_nybins, __pyx_v_ylow, __pyx_v_yhigh, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_6__init8(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_nxbins, PyObject *__pyx_v_xlow, PyObject *__pyx_v_xhigh, PyObject *__pyx_v_nybins, PyObject *__pyx_v_ylow, PyObject *__pyx_v_yhigh, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  size_t __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  std::string __pyx_t_7;
  std::string __pyx_t_8;
  YODA::Profile2D *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__init8", 0);

  /* "include/Profile2D.pyx":45
 * 
 *     def __init8(Profile2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char *path="", char *title=""):
 *         cutil.set_owned_ptr(self, new c.Profile2D(nxbins, xlow, xhigh,  nybins, ylow, yhigh,  string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_nxbins); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(21, 45, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_xlow); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 45, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_xhigh); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 45, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyInt_As_size_t(__pyx_v_nybins); if (unlikely((__pyx_t_4 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(21, 45, __pyx_L1_error)
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_ylow); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 45, __pyx_L1_error)
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_yhigh); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 45, __pyx_L1_error)
  try {
    __pyx_t_7 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 45, __pyx_L1_error)
  }
  try {
    __pyx_t_8 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 45, __pyx_L1_error)
  }
  try {
    __pyx_t_9 = new YODA::Profile2D(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 45, __pyx_L1_error)
  }
  __pyx_t_10 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(21, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "include/Profile2D.pyx":44
 *         cutil.set_owned_ptr(self, new c.Profile2D(xedges, yedges, string(path), string(title)))
 * 
 *     def __init8(Profile2D self, nxbins, xlow, xhigh,  nybins, ylow, yhigh,  char *path="", char *title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Profile2D(nxbins, xlow, xhigh,  nybins, ylow, yhigh,  string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yoda.core.Profile2D.__init8", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":48
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.p2ptr().numBins()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_9Profile2D_9__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4yoda_4core_9Profile2D_9__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_8__len__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_9Profile2D_8__len__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  size_t __pyx_t_2;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Profile2D.pyx":49
 * 
 *     def __len__(self):
 *         return self.p2ptr().numBins()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, py_ix):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 49, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 49, __pyx_L1_error)
  }
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":48
 * 
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.p2ptr().numBins()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":51
 *         return self.p2ptr().numBins()
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.p2ptr().numBins())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_10__getitem__[] = "Direct access to bins";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yoda_4core_9Profile2D_10__getitem__;
#endif
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_10__getitem__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((PyObject *)__pyx_v_py_ix));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_10__getitem__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Profile2D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  __Pyx_FakeReference<YODA::ProfileBin2D> __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Profile2D.pyx":53
 *     def __getitem__(self, py_ix):
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.p2ptr().numBins())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(ProfileBin2D, & self.p2ptr().bins().at(i), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_py_ix); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(21, 53, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 53, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 53, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_4 == 0 && PyErr_Occurred())) __PYX_ERR(21, 53, __pyx_L1_error)
  __pyx_v_i = __pyx_t_4;

  /* "include/Profile2D.pyx":54
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.p2ptr().numBins())
 *         return cutil.new_borrowed_cls(ProfileBin2D, & self.p2ptr().bins().at(i), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 54, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_2->bins().at(__pyx_v_i);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 54, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin2D), (&__pyx_t_5), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":51
 *         return self.p2ptr().numBins()
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         "Direct access to bins"
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.p2ptr().numBins())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Profile2D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":57
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % (self.__class__.__name__, self.path, len(self.bins), self.sumW())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_12__repr__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_12__repr__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Profile2D.pyx":58
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % (self.__class__.__name__, self.path, len(self.bins), self.sumW())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bins); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sumW); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 58, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 58, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_bins_sumw_0_2g, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":57
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d bins, sumw=%0.2g>" % (self.__class__.__name__, self.path, len(self.bins), self.sumW())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":61
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_14reset[] = "Profile2D.reset(self)\nNone -> None.\n        Reset the histogram but leave the bin structure.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_15reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_14reset(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_14reset(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "include/Profile2D.pyx":64
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 *         self.p2ptr().reset()             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 64, __pyx_L1_error)
  try {
    __pyx_t_1->reset();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 64, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":61
 * 
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """None -> None.
 *         Reset the histogram but leave the bin structure."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":66
 *         self.p2ptr().reset()
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Profile2D.
 *         Clone this Profile2D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_16clone[] = "Profile2D.clone(self)\nNone -> Profile2D.\n        Clone this Profile2D.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_17clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_16clone(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_16clone(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  YODA::Profile2D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Profile2D.pyx":69
 *         """None -> Profile2D.
 *         Clone this Profile2D."""
 *         return cutil.new_owned_cls(Profile2D, self.p2ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 69, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 69, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Profile2D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":66
 *         self.p2ptr().reset()
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """None -> Profile2D.
 *         Clone this Profile2D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":72
 * 
 * 
 *     def fill(self, double x, double y, double z, double weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,y,z,[w]) -> None.
 *         Fill with given x,y & z values and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_18fill[] = "Profile2D.fill(self, double x, double y, double z, double weight=1.0)\n(x,y,z,[w]) -> None.\n        Fill with given x,y & z values and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_19fill(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x;
  double __pyx_v_y;
  double __pyx_v_z;
  double __pyx_v_weight;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fill (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_weight,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 3, 4, 1); __PYX_ERR(21, 72, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fill", 0, 3, 4, 2); __PYX_ERR(21, 72, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fill") < 0)) __PYX_ERR(21, 72, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 72, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 72, __pyx_L3_error)
    __pyx_v_z = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_z == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 72, __pyx_L3_error)
    if (values[3]) {
      __pyx_v_weight = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 72, __pyx_L3_error)
    } else {
      __pyx_v_weight = ((double)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 72, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_18fill(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_18fill(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, double __pyx_v_x, double __pyx_v_y, double __pyx_v_z, double __pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  __Pyx_RefNannySetupContext("fill", 0);

  /* "include/Profile2D.pyx":75
 *         """(x,y,z,[w]) -> None.
 *         Fill with given x,y & z values and optional weight."""
 *         self.p2ptr().fill(x, y, z, weight)             # <<<<<<<<<<<<<<
 * 
 *     def fillBin(self, size_t i, double z, weight=1.0):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 75, __pyx_L1_error)
  try {
    __pyx_t_1->fill(__pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_weight);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 75, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":72
 * 
 * 
 *     def fill(self, double x, double y, double z, double weight=1.0):             # <<<<<<<<<<<<<<
 *         """(x,y,z,[w]) -> None.
 *         Fill with given x,y & z values and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.fill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":77
 *         self.p2ptr().fill(x, y, z, weight)
 * 
 *     def fillBin(self, size_t i, double z, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(i,z,[w]) -> None.
 *         Fill bin i with value z and optional weight."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_20fillBin[] = "Profile2D.fillBin(self, size_t i, double z, weight=1.0)\n(i,z,[w]) -> None.\n        Fill bin i with value z and optional weight.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_21fillBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_i;
  double __pyx_v_z;
  PyObject *__pyx_v_weight = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fillBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_z,&__pyx_n_s_weight,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fillBin", 0, 2, 3, 1); __PYX_ERR(21, 77, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_weight);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fillBin") < 0)) __PYX_ERR(21, 77, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_i = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_i == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(21, 77, __pyx_L3_error)
    __pyx_v_z = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_z == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 77, __pyx_L3_error)
    __pyx_v_weight = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fillBin", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 77, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_20fillBin(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_i, __pyx_v_z, __pyx_v_weight);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_20fillBin(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, size_t __pyx_v_i, double __pyx_v_z, PyObject *__pyx_v_weight) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("fillBin", 0);

  /* "include/Profile2D.pyx":80
 *         """(i,z,[w]) -> None.
 *         Fill bin i with value z and optional weight."""
 *         self.p2ptr().fillBin(i, z, weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 80, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_weight); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 80, __pyx_L1_error)
  try {
    __pyx_t_1->fillBin(__pyx_v_i, __pyx_v_z, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 80, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":77
 *         self.p2ptr().fill(x, y, z, weight)
 * 
 *     def fillBin(self, size_t i, double z, weight=1.0):             # <<<<<<<<<<<<<<
 *         """(i,z,[w]) -> None.
 *         Fill bin i with value z and optional weight."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.fillBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":84
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn3D
 *         The Dbn3D representing the total distribution."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_8totalDbn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_8totalDbn_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_8totalDbn___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_8totalDbn___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":87
 *         """() -> Dbn3D
 *         The Dbn3D representing the total distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn3D, new c.Dbn3D(self.p2ptr().totalDbn()), self)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "include/Profile2D.pyx":88
 *         The Dbn3D representing the total distribution."""
 *         return cutil.new_borrowed_cls(
 *             Dbn3D, new c.Dbn3D(self.p2ptr().totalDbn()), self)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: reinstate
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 88, __pyx_L1_error)

  /* "include/Profile2D.pyx":87
 *         """() -> Dbn3D
 *         The Dbn3D representing the total distribution."""
 *         return cutil.new_borrowed_cls(             # <<<<<<<<<<<<<<
 *             Dbn3D, new c.Dbn3D(self.p2ptr().totalDbn()), self)
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Dbn3D), new YODA::Dbn3D(__pyx_t_1->totalDbn()), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":84
 * 
 *     @property
 *     def totalDbn(self):             # <<<<<<<<<<<<<<
 *         """() -> Dbn3D
 *         The Dbn3D representing the total distribution."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Profile2D.totalDbn.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":98
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_23numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_22numEntries[] = "Profile2D.numEntries(self, includeoverflows=True)\n([bool]) -> int\n        Number of times this histogram was filled, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_23numEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "numEntries") < 0)) __PYX_ERR(21, 98, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("numEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 98, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_22numEntries(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_22numEntries(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("numEntries", 0);

  /* "include/Profile2D.pyx":101
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 *         return self.p2ptr().numEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def effNumEntries(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 101, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 101, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_long(__pyx_t_1->numEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":98
 * 
 * 
 *     def numEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> int
 *         Number of times this histogram was filled, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.numEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":103
 *         return self.p2ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_25effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_24effNumEntries[] = "Profile2D.effNumEntries(self, includeoverflows=True)\n([bool]) -> float\n        Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_25effNumEntries(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("effNumEntries (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "effNumEntries") < 0)) __PYX_ERR(21, 103, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("effNumEntries", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 103, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_24effNumEntries(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_24effNumEntries(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("effNumEntries", 0);

  /* "include/Profile2D.pyx":106
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows."""
 *         return self.p2ptr().effNumEntries(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 106, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 106, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->effNumEntries(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":103
 *         return self.p2ptr().numEntries(includeoverflows)
 * 
 *     def effNumEntries(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Effective number of times this histogram was filled, computed from weights and optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.effNumEntries", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":108
 *         return self.p2ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_27sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_26sumW[] = "Profile2D.sumW(self, includeoverflows=True)\n([bool]) -> float\n        Sum of weights filled into this histogram.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_27sumW(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW") < 0)) __PYX_ERR(21, 108, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 108, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_26sumW(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_26sumW(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW", 0);

  /* "include/Profile2D.pyx":111
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 *         return self.p2ptr().sumW(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def sumW2(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 111, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 111, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":108
 *         return self.p2ptr().effNumEntries(includeoverflows)
 * 
 *     def sumW(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of weights filled into this histogram."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.sumW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":113
 *         return self.p2ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of squared weights filled into this histogram."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_29sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_28sumW2[] = "Profile2D.sumW2(self, includeoverflows=True)\n([bool]) -> float\n        Sum of squared weights filled into this histogram.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_29sumW2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sumW2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sumW2") < 0)) __PYX_ERR(21, 113, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sumW2", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 113, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_28sumW2(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_28sumW2(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("sumW2", 0);

  /* "include/Profile2D.pyx":116
 *         """([bool]) -> float
 *         Sum of squared weights filled into this histogram."""
 *         return self.p2ptr().sumW2(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 116, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 116, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->sumW2(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":113
 *         return self.p2ptr().sumW(includeoverflows)
 * 
 *     def sumW2(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Sum of squared weights filled into this histogram."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.sumW2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":119
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_31xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_30xMean[] = "Profile2D.xMean(self, includeoverflows=True)\n([bool]) -> float\n        Mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_31xMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xMean") < 0)) __PYX_ERR(21, 119, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 119, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_30xMean(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_30xMean(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xMean", 0);

  /* "include/Profile2D.pyx":122
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().xMean(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yMean(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 122, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 122, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xMean(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":119
 * 
 * 
 *     def xMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":124
 *         return self.p2ptr().xMean(includeoverflows)
 * 
 *     def yMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_33yMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_32yMean[] = "Profile2D.yMean(self, includeoverflows=True)\n([bool]) -> float\n        Mean y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_33yMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yMean") < 0)) __PYX_ERR(21, 124, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 124, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.yMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_32yMean(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_32yMean(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yMean", 0);

  /* "include/Profile2D.pyx":127
 *         """([bool]) -> float
 *         Mean y of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().yMean(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyMean(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 127, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 127, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yMean(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":124
 *         return self.p2ptr().xMean(includeoverflows)
 * 
 *     def yMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Mean y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":129
 *         return self.p2ptr().yMean(includeoverflows)
 * 
 *     def xyMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Mean (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_35xyMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_34xyMean[] = "Profile2D.xyMean(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Mean (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_35xyMean(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyMean (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyMean") < 0)) __PYX_ERR(21, 129, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyMean", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 129, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xyMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_34xyMean(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_34xyMean(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyMean", 0);

  /* "include/Profile2D.pyx":132
 *         """([bool]) -> (float,float)
 *         Mean (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xMean(includeoverflows), self.yMean(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xMean); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yMean); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":129
 *         return self.p2ptr().yMean(includeoverflows)
 * 
 *     def xyMean(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Mean (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.xyMean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":135
 * 
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_37xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_36xVariance[] = "Profile2D.xVariance(self, includeoverflows=True)\n([bool]) -> float\n        Variance in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_37xVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xVariance") < 0)) __PYX_ERR(21, 135, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 135, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_36xVariance(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_36xVariance(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xVariance", 0);

  /* "include/Profile2D.pyx":138
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().xVariance(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yVariance(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 138, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 138, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xVariance(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":135
 * 
 * 
 *     def xVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":140
 *         return self.p2ptr().xVariance(includeoverflows)
 * 
 *     def yVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_39yVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_38yVariance[] = "Profile2D.yVariance(self, includeoverflows=True)\n([bool]) -> float\n        Variance in y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_39yVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yVariance") < 0)) __PYX_ERR(21, 140, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 140, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.yVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_38yVariance(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_38yVariance(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yVariance", 0);

  /* "include/Profile2D.pyx":143
 *         """([bool]) -> float
 *         Variance in y of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().yVariance(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyVariance(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 143, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 143, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yVariance(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":140
 *         return self.p2ptr().xVariance(includeoverflows)
 * 
 *     def yVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Variance in y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":145
 *         return self.p2ptr().yVariance(includeoverflows)
 * 
 *     def xyVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Variances in (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_41xyVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_40xyVariance[] = "Profile2D.xyVariance(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Variances in (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_41xyVariance(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyVariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyVariance") < 0)) __PYX_ERR(21, 145, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyVariance", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 145, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xyVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_40xyVariance(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_40xyVariance(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyVariance", 0);

  /* "include/Profile2D.pyx":148
 *         """([bool]) -> (float,float)
 *         Variances in (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xVariance(includeoverflows), self.yVariance(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xVariance); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yVariance); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":145
 *         return self.p2ptr().yVariance(includeoverflows)
 * 
 *     def xyVariance(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Variances in (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.xyVariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":151
 * 
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_43xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_42xStdDev[] = "Profile2D.xStdDev(self, includeoverflows=True)\n([bool]) -> float\n        Standard deviation in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_43xStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdDev") < 0)) __PYX_ERR(21, 151, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 151, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_42xStdDev(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_42xStdDev(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdDev", 0);

  /* "include/Profile2D.pyx":154
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().xStdDev(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yStdDev(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 154, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 154, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdDev(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":151
 * 
 * 
 *     def xStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":156
 *         return self.p2ptr().xStdDev(includeoverflows)
 * 
 *     def yStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_45yStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_44yStdDev[] = "Profile2D.yStdDev(self, includeoverflows=True)\n([bool]) -> float\n        Standard deviation in y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_45yStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yStdDev") < 0)) __PYX_ERR(21, 156, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 156, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.yStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_44yStdDev(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_44yStdDev(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yStdDev", 0);

  /* "include/Profile2D.pyx":159
 *         """([bool]) -> float
 *         Standard deviation in y of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().yStdDev(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyStdDev(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 159, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 159, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yStdDev(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":156
 *         return self.p2ptr().xStdDev(includeoverflows)
 * 
 *     def yStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard deviation in y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":161
 *         return self.p2ptr().yStdDev(includeoverflows)
 * 
 *     def xyStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard deviations in (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_47xyStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_46xyStdDev[] = "Profile2D.xyStdDev(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Standard deviations in (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_47xyStdDev(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyStdDev (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyStdDev") < 0)) __PYX_ERR(21, 161, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyStdDev", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 161, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xyStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_46xyStdDev(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_46xyStdDev(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyStdDev", 0);

  /* "include/Profile2D.pyx":164
 *         """([bool]) -> (float,float)
 *         Standard deviations in (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xStdDev(includeoverflows), self.yStdDev(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdDev); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdDev); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":161
 *         return self.p2ptr().yStdDev(includeoverflows)
 * 
 *     def xyStdDev(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard deviations in (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.xyStdDev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":167
 * 
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_49xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_48xStdErr[] = "Profile2D.xStdErr(self, includeoverflows=True)\n([bool]) -> float\n        Standard error on the mean x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_49xStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xStdErr") < 0)) __PYX_ERR(21, 167, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 167, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_48xStdErr(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_48xStdErr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xStdErr", 0);

  /* "include/Profile2D.pyx":170
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().xStdErr(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yStdErr(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 170, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 170, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xStdErr(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":167
 * 
 * 
 *     def xStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":172
 *         return self.p2ptr().xStdErr(includeoverflows)
 * 
 *     def yStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_51yStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_50yStdErr[] = "Profile2D.yStdErr(self, includeoverflows=True)\n([bool]) -> float\n        Standard error on the mean y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_51yStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yStdErr") < 0)) __PYX_ERR(21, 172, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 172, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.yStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_50yStdErr(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_50yStdErr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yStdErr", 0);

  /* "include/Profile2D.pyx":175
 *         """([bool]) -> float
 *         Standard error on the mean y of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().yStdErr(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyStdErr(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 175, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 175, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yStdErr(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":172
 *         return self.p2ptr().xStdErr(includeoverflows)
 * 
 *     def yStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         Standard error on the mean y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":177
 *         return self.p2ptr().yStdErr(includeoverflows)
 * 
 *     def xyStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_53xyStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_52xyStdErr[] = "Profile2D.xyStdErr(self, includeoverflows=True)\n([bool]) -> (float,float)\n        Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_53xyStdErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyStdErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyStdErr") < 0)) __PYX_ERR(21, 177, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyStdErr", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 177, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xyStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_52xyStdErr(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_52xyStdErr(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyStdErr", 0);

  /* "include/Profile2D.pyx":180
 *         """([bool]) -> (float,float)
 *         Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xStdErr(includeoverflows), self.yStdErr(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xStdErr); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yStdErr); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":177
 *         return self.p2ptr().yStdErr(includeoverflows)
 * 
 *     def xyStdErr(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         Standard errors on the mean (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.xyStdErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":183
 * 
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_55xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_54xRMS[] = "Profile2D.xRMS(self, includeoverflows=True)\n([bool]) -> float\n        RMS in x of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_55xRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xRMS") < 0)) __PYX_ERR(21, 183, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 183, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_54xRMS(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_54xRMS(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("xRMS", 0);

  /* "include/Profile2D.pyx":186
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().xRMS(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def yRMS(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 186, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 186, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->xRMS(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":183
 * 
 * 
 *     def xRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in x of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":188
 *         return self.p2ptr().xRMS(includeoverflows)
 * 
 *     def yRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in y of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_57yRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_56yRMS[] = "Profile2D.yRMS(self, includeoverflows=True)\n([bool]) -> float\n        RMS in y of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_57yRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("yRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "yRMS") < 0)) __PYX_ERR(21, 188, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("yRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 188, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.yRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_56yRMS(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_56yRMS(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("yRMS", 0);

  /* "include/Profile2D.pyx":191
 *         """([bool]) -> float
 *         RMS in y of the histogram, optionally excluding the overflows."""
 *         return self.p2ptr().yRMS(includeoverflows)             # <<<<<<<<<<<<<<
 * 
 *     def xyRMS(self, includeoverflows=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 191, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_includeoverflows); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 191, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->yRMS(__pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":188
 *         return self.p2ptr().xRMS(includeoverflows)
 * 
 *     def yRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> float
 *         RMS in y of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":193
 *         return self.p2ptr().yRMS(includeoverflows)
 * 
 *     def xyRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         RMS in (x,y) of the histogram, optionally excluding the overflows."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_59xyRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_58xyRMS[] = "Profile2D.xyRMS(self, includeoverflows=True)\n([bool]) -> (float,float)\n        RMS in (x,y) of the histogram, optionally excluding the overflows.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_59xyRMS(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_includeoverflows = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xyRMS (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_includeoverflows,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_includeoverflows);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xyRMS") < 0)) __PYX_ERR(21, 193, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_includeoverflows = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xyRMS", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 193, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.xyRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_58xyRMS(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_includeoverflows);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_58xyRMS(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_includeoverflows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  __Pyx_RefNannySetupContext("xyRMS", 0);

  /* "include/Profile2D.pyx":196
 *         """([bool]) -> (float,float)
 *         RMS in (x,y) of the histogram, optionally excluding the overflows."""
 *         return util.XY(self.xRMS(includeoverflows), self.yRMS(includeoverflows))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xRMS); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_includeoverflows);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yRMS); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_includeoverflows); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_includeoverflows);
    __Pyx_GIVEREF(__pyx_v_includeoverflows);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_v_includeoverflows);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":193
 *         return self.p2ptr().yRMS(includeoverflows)
 * 
 *     def xyRMS(self, includeoverflows=True):             # <<<<<<<<<<<<<<
 *         """([bool]) -> (float,float)
 *         RMS in (x,y) of the histogram, optionally excluding the overflows."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.xyRMS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":200
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_61scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_60scaleW[] = "Profile2D.scaleW(self, w)\n(float) -> None.\n        Rescale the weights in this histogram by the factor w.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_61scaleW(PyObject *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleW (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_60scaleW(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((PyObject *)__pyx_v_w));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_60scaleW(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleW", 0);

  /* "include/Profile2D.pyx":203
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 *         self.p2ptr().scaleW(w)             # <<<<<<<<<<<<<<
 * 
 *     def scaleZ(self, double f):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 203, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 203, __pyx_L1_error)
  try {
    __pyx_t_1->scaleW(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 203, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":200
 * 
 * 
 *     def scaleW(self, w):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Rescale the weights in this histogram by the factor w."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.scaleW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":205
 *         self.p2ptr().scaleW(w)
 * 
 *     def scaleZ(self, double f):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Scale the z-direction (profiled value) in this histogram by the factor f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_63scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_arg_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_62scaleZ[] = "Profile2D.scaleZ(self, double f)\n(float) -> None.\n        Scale the z-direction (profiled value) in this histogram by the factor f.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_63scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_arg_f) {
  double __pyx_v_f;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleZ (wrapper)", 0);
  assert(__pyx_arg_f); {
    __pyx_v_f = __pyx_PyFloat_AsDouble(__pyx_arg_f); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 205, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.scaleZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_62scaleZ(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((double)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_62scaleZ(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, double __pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("scaleZ", 0);

  /* "include/Profile2D.pyx":208
 *         """(float) -> None.
 *         Scale the z-direction (profiled value) in this histogram by the factor f."""
 *         self.p1ptr().scaleZ(f)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_p1ptr); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 208, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 208, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scaleZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_f); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 208, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 208, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":205
 *         self.p2ptr().scaleW(w)
 * 
 *     def scaleZ(self, double f):             # <<<<<<<<<<<<<<
 *         """(float) -> None.
 *         Scale the z-direction (profiled value) in this histogram by the factor f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile2D.scaleZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":212
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.p2ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":214
 *     def xMin(self):
 *         """Low x edge of the histo."""
 *         return self.p2ptr().xMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 214, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 214, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":212
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """Low x edge of the histo."""
 *         return self.p2ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":217
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.p2ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":219
 *     def xMax(self):
 *         """High x edge of the histo."""
 *         return self.p2ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 219, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 219, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":217
 * 
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """High x edge of the histo."""
 *         return self.p2ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":222
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low y edge of the histo."""
 *         return self.p2ptr().yMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4yMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4yMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_4yMin___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":224
 *     def yMin(self):
 *         """Low y edge of the histo."""
 *         return self.p2ptr().yMin()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 224, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 224, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":222
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """Low y edge of the histo."""
 *         return self.p2ptr().yMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":227
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High y edge of the histo."""
 *         return self.p2ptr().yMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4yMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4yMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_4yMax___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":229
 *     def yMax(self):
 *         """High y edge of the histo."""
 *         return self.p2ptr().yMax()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 229, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 229, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":227
 * 
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """High y edge of the histo."""
 *         return self.p2ptr().yMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.yMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":233
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_7numBins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_7numBins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_7numBins___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_7numBins___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":236
 *         """() -> int
 *         Number of bins (not including overflows)."""
 *         return self.p2ptr().numBins()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 236, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBins();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 236, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":233
 * 
 *     @property
 *     def numBins(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (not including overflows)."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.numBins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":239
 * 
 *     @property
 *     def numBinsX(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the x axis."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_8numBinsX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_8numBinsX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_8numBinsX___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_8numBinsX___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":242
 *         """() -> int
 *         Number of bins (edges) along the x axis."""
 *         return self.p2ptr().numBinsX()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 242, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBinsX();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 242, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":239
 * 
 *     @property
 *     def numBinsX(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the x axis."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.numBinsX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":245
 * 
 *     @property
 *     def numBinsY(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the y axis."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_8numBinsY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_8numBinsY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_8numBinsY___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_8numBinsY___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":248
 *         """() -> int
 *         Number of bins (edges) along the y axis."""
 *         return self.p2ptr().numBinsY()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 248, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numBinsY();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 248, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":245
 * 
 *     @property
 *     def numBinsY(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of bins (edges) along the y axis."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.numBinsY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":252
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return list(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4bins_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_4bins_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_4bins___get__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_4bins___get__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Profile2D.pyx":254
 *     def bins(self):
 *         """Access the ordered bins list."""
 *         return list(self)             # <<<<<<<<<<<<<<
 * 
 *     def bin(self, i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PySequence_List(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":252
 * 
 *     @property
 *     def bins(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered bins list."""
 *         return list(self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Profile2D.bins.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":256
 *         return list(self)
 * 
 *     def bin(self, i):             # <<<<<<<<<<<<<<
 *         """Get the i'th bin"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.p2ptr().numBins())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_65bin(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_64bin[] = "Profile2D.bin(self, i)\nGet the i'th bin";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_65bin(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bin (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_64bin(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_64bin(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("bin", 0);

  /* "include/Profile2D.pyx":259
 *         """Get the i'th bin"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.p2ptr().numBins())
 *         return cutil.new_borrowed_cls(ProfileBin2D, & self.p2ptr().bin(i), self)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: it's more intuitive to have an index for each axis
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 259, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(21, 259, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_ProfileBin2D), (&__pyx_t_1->bin(__pyx_t_2)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":256
 *         return list(self)
 * 
 *     def bin(self, i):             # <<<<<<<<<<<<<<
 *         """Get the i'th bin"""
 *         # cdef size_t ii = cutil.pythonic_index(i, self.p2ptr().numBins())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Profile2D.bin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":268
 *     #     return cutil.new_borrowed_cls(ProfileBin2D, & self.p2ptr().bin(i,j), self)
 * 
 *     def binIndexAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin index pair containing position (x,y)"""
 *         return self.p2ptr().binIndexAt(x, y)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_67binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_66binIndexAt[] = "Profile2D.binIndexAt(self, x, y)\nGet the bin index pair containing position (x,y)";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_67binIndexAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binIndexAt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("binIndexAt", 1, 2, 2, 1); __PYX_ERR(21, 268, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "binIndexAt") < 0)) __PYX_ERR(21, 268, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("binIndexAt", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 268, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.binIndexAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_66binIndexAt(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_66binIndexAt(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("binIndexAt", 0);

  /* "include/Profile2D.pyx":270
 *     def binIndexAt(self, x, y):
 *         """Get the bin index pair containing position (x,y)"""
 *         return self.p2ptr().binIndexAt(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def binAt(self, x, y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 270, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 270, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 270, __pyx_L1_error)
  try {
    __pyx_t_4 = __pyx_t_1->binIndexAt(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 270, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":268
 *     #     return cutil.new_borrowed_cls(ProfileBin2D, & self.p2ptr().bin(i,j), self)
 * 
 *     def binIndexAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin index pair containing position (x,y)"""
 *         return self.p2ptr().binIndexAt(x, y)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile2D.binIndexAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":272
 *         return self.p2ptr().binIndexAt(x, y)
 * 
 *     def binAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position (x,y)"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_69binAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_68binAt[] = "Profile2D.binAt(self, x, y)\nGet the bin containing position (x,y)";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_69binAt(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binAt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("binAt", 1, 2, 2, 1); __PYX_ERR(21, 272, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "binAt") < 0)) __PYX_ERR(21, 272, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("binAt", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 272, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.binAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_68binAt(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_68binAt(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("binAt", 0);

  /* "include/Profile2D.pyx":277
 *         #return cutil.new_borrowed_cls(ProfileBin2D, & self.p2ptr().binAt(x,y), self)
 *         # TODO: need out-of-range check to return None?
 *         return self.bin(self.binIndexAt(x,y))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bin); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_binIndexAt); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v_y);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 277, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(21, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":272
 *         return self.p2ptr().binIndexAt(x, y)
 * 
 *     def binAt(self, x, y):             # <<<<<<<<<<<<<<
 *         """Get the bin containing position (x,y)"""
 *         # TODO: what's the problem with this direct mapping? Produces compile error re. no default constructor...
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Profile2D.binAt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":280
 * 
 * 
 *     def addBin(self, double xlow, double xhigh, double ylow, double yhigh):             # <<<<<<<<<<<<<<
 *         """Add a bin."""
 *         self.p2ptr().addBin(pair[double, double](xlow, xhigh),
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_71addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_70addBin[] = "Profile2D.addBin(self, double xlow, double xhigh, double ylow, double yhigh)\nAdd a bin.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_71addBin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_xlow;
  double __pyx_v_xhigh;
  double __pyx_v_ylow;
  double __pyx_v_yhigh;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xlow,&__pyx_n_s_xhigh,&__pyx_n_s_ylow,&__pyx_n_s_yhigh,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xlow)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, 1); __PYX_ERR(21, 280, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ylow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, 2); __PYX_ERR(21, 280, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yhigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, 3); __PYX_ERR(21, 280, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addBin") < 0)) __PYX_ERR(21, 280, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_xlow = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_xlow == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 280, __pyx_L3_error)
    __pyx_v_xhigh = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_xhigh == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 280, __pyx_L3_error)
    __pyx_v_ylow = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_ylow == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 280, __pyx_L3_error)
    __pyx_v_yhigh = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_yhigh == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 280, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBin", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 280, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_70addBin(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_xlow, __pyx_v_xhigh, __pyx_v_ylow, __pyx_v_yhigh);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_70addBin(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, double __pyx_v_xlow, double __pyx_v_xhigh, double __pyx_v_ylow, double __pyx_v_yhigh) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  std::pair<double,double>  __pyx_t_2;
  std::pair<double,double>  __pyx_t_3;
  __Pyx_RefNannySetupContext("addBin", 0);

  /* "include/Profile2D.pyx":282
 *     def addBin(self, double xlow, double xhigh, double ylow, double yhigh):
 *         """Add a bin."""
 *         self.p2ptr().addBin(pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                  pair[double, double](ylow, yhigh))
 *         return self
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 282, __pyx_L1_error)
  try {
    __pyx_t_2 = std::pair<double,double> (__pyx_v_xlow, __pyx_v_xhigh);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 282, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":283
 *         """Add a bin."""
 *         self.p2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                  pair[double, double](ylow, yhigh))             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  try {
    __pyx_t_3 = std::pair<double,double> (__pyx_v_ylow, __pyx_v_yhigh);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(21, 283, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":282
 *     def addBin(self, double xlow, double xhigh, double ylow, double yhigh):
 *         """Add a bin."""
 *         self.p2ptr().addBin(pair[double, double](xlow, xhigh),             # <<<<<<<<<<<<<<
 *                                  pair[double, double](ylow, yhigh))
 *         return self
 */
  try {
    __pyx_t_1->addBin(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 282, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":284
 *         self.p2ptr().addBin(pair[double, double](xlow, xhigh),
 *                                  pair[double, double](ylow, yhigh))
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def addBins(self, xcuts, ycuts):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":280
 * 
 * 
 *     def addBin(self, double xlow, double xhigh, double ylow, double yhigh):             # <<<<<<<<<<<<<<
 *         """Add a bin."""
 *         self.p2ptr().addBin(pair[double, double](xlow, xhigh),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.addBin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":286
 *         return self
 * 
 *     def addBins(self, xcuts, ycuts):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_73addBins(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_72addBins[] = "Profile2D.addBins(self, xcuts, ycuts)\nAdd several bins.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_73addBins(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_xcuts = 0;
  PyObject *__pyx_v_ycuts = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBins (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xcuts,&__pyx_n_s_ycuts,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xcuts)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ycuts)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBins", 1, 2, 2, 1); __PYX_ERR(21, 286, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addBins") < 0)) __PYX_ERR(21, 286, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_xcuts = values[0];
    __pyx_v_ycuts = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBins", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 286, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.addBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_72addBins(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_xcuts, __pyx_v_ycuts);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_72addBins(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_xcuts, PyObject *__pyx_v_ycuts) {
  std::vector<double>  __pyx_v__xcuts;
  std::vector<double>  __pyx_v__ycuts;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  YODA::Profile2D *__pyx_t_6;
  __Pyx_RefNannySetupContext("addBins", 0);

  /* "include/Profile2D.pyx":291
 *         cdef vector[double] _xcuts
 *         cdef vector[double] _ycuts
 *         for x in xcuts:             # <<<<<<<<<<<<<<
 *             _xcuts.push_back(x)
 *         for y in ycuts:
 */
  if (likely(PyList_CheckExact(__pyx_v_xcuts)) || PyTuple_CheckExact(__pyx_v_xcuts)) {
    __pyx_t_1 = __pyx_v_xcuts; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_xcuts); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 291, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 291, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(21, 291, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 291, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(21, 291, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 291, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(21, 291, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Profile2D.pyx":292
 *         cdef vector[double] _ycuts
 *         for x in xcuts:
 *             _xcuts.push_back(x)             # <<<<<<<<<<<<<<
 *         for y in ycuts:
 *             _ycuts.push_back(y)
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 292, __pyx_L1_error)
    try {
      __pyx_v__xcuts.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(21, 292, __pyx_L1_error)
    }

    /* "include/Profile2D.pyx":291
 *         cdef vector[double] _xcuts
 *         cdef vector[double] _ycuts
 *         for x in xcuts:             # <<<<<<<<<<<<<<
 *             _xcuts.push_back(x)
 *         for y in ycuts:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":293
 *         for x in xcuts:
 *             _xcuts.push_back(x)
 *         for y in ycuts:             # <<<<<<<<<<<<<<
 *             _ycuts.push_back(y)
 *         self.p2ptr().addBins(_xcuts, _ycuts)
 */
  if (likely(PyList_CheckExact(__pyx_v_ycuts)) || PyTuple_CheckExact(__pyx_v_ycuts)) {
    __pyx_t_1 = __pyx_v_ycuts; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_ycuts); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(21, 293, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(21, 293, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 293, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(21, 293, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 293, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(21, 293, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Profile2D.pyx":294
 *             _xcuts.push_back(x)
 *         for y in ycuts:
 *             _ycuts.push_back(y)             # <<<<<<<<<<<<<<
 *         self.p2ptr().addBins(_xcuts, _ycuts)
 *         return self
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(21, 294, __pyx_L1_error)
    try {
      __pyx_v__ycuts.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(21, 294, __pyx_L1_error)
    }

    /* "include/Profile2D.pyx":293
 *         for x in xcuts:
 *             _xcuts.push_back(x)
 *         for y in ycuts:             # <<<<<<<<<<<<<<
 *             _ycuts.push_back(y)
 *         self.p2ptr().addBins(_xcuts, _ycuts)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":295
 *         for y in ycuts:
 *             _ycuts.push_back(y)
 *         self.p2ptr().addBins(_xcuts, _ycuts)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_6 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(21, 295, __pyx_L1_error)
  try {
    __pyx_t_6->addBins(__pyx_v__xcuts, __pyx_v__ycuts);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 295, __pyx_L1_error)
  }

  /* "include/Profile2D.pyx":296
 *             _ycuts.push_back(y)
 *         self.p2ptr().addBins(_xcuts, _ycuts)
 *         return self             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":286
 *         return self
 * 
 *     def addBins(self, xcuts, ycuts):             # <<<<<<<<<<<<<<
 *         """Add several bins."""
 *         # TODO: simplify / make consistent
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile2D.addBins", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":306
 * 
 * 
 *     def mkScatter(self, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter3D.
 *         Convert this Profile2D to a Scatter3D, with z representing
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_75mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_74mkScatter[] = "Profile2D.mkScatter(self, usefocus=False, usestddev=False)\nNone -> Scatter3D.\n        Convert this Profile2D to a Scatter3D, with z representing\n        mean bin y values and their standard errors.";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_75mkScatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_usefocus = 0;
  PyObject *__pyx_v_usestddev = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_usefocus,&__pyx_n_s_usestddev,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usefocus);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usestddev);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mkScatter") < 0)) __PYX_ERR(21, 306, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_usefocus = values[0];
    __pyx_v_usestddev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mkScatter", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(21, 306, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_74mkScatter(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), __pyx_v_usefocus, __pyx_v_usestddev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_74mkScatter(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, PyObject *__pyx_v_usefocus, PyObject *__pyx_v_usestddev) {
  YODA::Scatter3D __pyx_v_s3;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  bool __pyx_t_2;
  bool __pyx_t_3;
  YODA::Scatter3D __pyx_t_4;
  YODA::Scatter3D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Profile2D.pyx":310
 *         Convert this Profile2D to a Scatter3D, with z representing
 *         mean bin y values and their standard errors."""
 *         cdef c.Scatter3D s3 = c.mkScatter_Profile2D(deref(self.p2ptr()), usefocus, usestddev)             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 310, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_usefocus); if (unlikely((__pyx_t_2 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 310, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_usestddev); if (unlikely((__pyx_t_3 == (bool)-1) && PyErr_Occurred())) __PYX_ERR(21, 310, __pyx_L1_error)
  try {
    __pyx_t_4 = YODA::mkScatter((*__pyx_t_1), __pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 310, __pyx_L1_error)
  }
  __pyx_v_s3 = __pyx_t_4;

  /* "include/Profile2D.pyx":311
 *         mean bin y values and their standard errors."""
 *         cdef c.Scatter3D s3 = c.mkScatter_Profile2D(deref(self.p2ptr()), usefocus, usestddev)
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())             # <<<<<<<<<<<<<<
 * 
 *     def divideBy(self, Profile2D h):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_s3.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 311, __pyx_L1_error)
  }
  __pyx_t_6 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter3D), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(21, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":306
 * 
 * 
 *     def mkScatter(self, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *         """None -> Scatter3D.
 *         Convert this Profile2D to a Scatter3D, with z representing
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Profile2D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":313
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 *     def divideBy(self, Profile2D h):             # <<<<<<<<<<<<<<
 *         cdef c.Scatter3D s = c.Profile2D_div_Profile2D(deref(self.p2ptr()), deref(h.p2ptr()))
 *         return cutil.new_owned_cls(Scatter3D, s.newclone())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_77divideBy(PyObject *__pyx_v_self, PyObject *__pyx_v_h); /*proto*/
static char __pyx_doc_4yoda_4core_9Profile2D_76divideBy[] = "Profile2D.divideBy(self, Profile2D h)";
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_77divideBy(PyObject *__pyx_v_self, PyObject *__pyx_v_h) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("divideBy (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_h), __pyx_ptype_4yoda_4core_Profile2D, 1, "h", 0))) __PYX_ERR(21, 313, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_76divideBy(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_h));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_76divideBy(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_h) {
  YODA::Scatter3D __pyx_v_s;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  YODA::Profile2D *__pyx_t_2;
  YODA::Scatter3D __pyx_t_3;
  YODA::Scatter3D *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("divideBy", 0);

  /* "include/Profile2D.pyx":314
 * 
 *     def divideBy(self, Profile2D h):
 *         cdef c.Scatter3D s = c.Profile2D_div_Profile2D(deref(self.p2ptr()), deref(h.p2ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter3D, s.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 314, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_h); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 314, __pyx_L1_error)
  try {
    __pyx_t_3 = divide((*__pyx_t_1), (*__pyx_t_2));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 314, __pyx_L1_error)
  }
  __pyx_v_s = __pyx_t_3;

  /* "include/Profile2D.pyx":315
 *     def divideBy(self, Profile2D h):
 *         cdef c.Scatter3D s = c.Profile2D_div_Profile2D(deref(self.p2ptr()), deref(h.p2ptr()))
 *         return cutil.new_owned_cls(Scatter3D, s.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_4 = __pyx_v_s.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(21, 315, __pyx_L1_error)
  }
  __pyx_t_5 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter3D), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(21, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":313
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 *     def divideBy(self, Profile2D h):             # <<<<<<<<<<<<<<
 *         cdef c.Scatter3D s = c.Profile2D_div_Profile2D(deref(self.p2ptr()), deref(h.p2ptr()))
 *         return cutil.new_owned_cls(Scatter3D, s.newclone())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Profile2D.divideBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":318
 * 
 * 
 *     def __iadd__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         c.Profile2D_iadd_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_79__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_79__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile2D, 1, "other", 0))) __PYX_ERR(21, 318, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_78__iadd__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_78__iadd__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  YODA::Profile2D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "include/Profile2D.pyx":319
 * 
 *     def __iadd__(Profile2D self, Profile2D other):
 *         c.Profile2D_iadd_Profile2D(self.p2ptr(), other.p2ptr())             # <<<<<<<<<<<<<<
 *         return self
 *     def __isub__(Profile2D self, Profile2D other):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 319, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 319, __pyx_L1_error)
  cython_iadd(__pyx_t_1, __pyx_t_2);

  /* "include/Profile2D.pyx":320
 *     def __iadd__(Profile2D self, Profile2D other):
 *         c.Profile2D_iadd_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self             # <<<<<<<<<<<<<<
 *     def __isub__(Profile2D self, Profile2D other):
 *         c.Profile2D_isub_Profile2D(self.p2ptr(), other.p2ptr())
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":318
 * 
 * 
 *     def __iadd__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         c.Profile2D_iadd_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.__iadd__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":321
 *         c.Profile2D_iadd_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self
 *     def __isub__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         c.Profile2D_isub_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_81__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_81__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile2D, 1, "other", 0))) __PYX_ERR(21, 321, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_80__isub__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_80__isub__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Profile2D *__pyx_t_1;
  YODA::Profile2D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "include/Profile2D.pyx":322
 *         return self
 *     def __isub__(Profile2D self, Profile2D other):
 *         c.Profile2D_isub_Profile2D(self.p2ptr(), other.p2ptr())             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(21, 322, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 322, __pyx_L1_error)
  cython_isub(__pyx_t_1, __pyx_t_2);

  /* "include/Profile2D.pyx":323
 *     def __isub__(Profile2D self, Profile2D other):
 *         c.Profile2D_isub_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __add__(Profile2D self, Profile2D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":321
 *         c.Profile2D_iadd_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self
 *     def __isub__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         c.Profile2D_isub_Profile2D(self.p2ptr(), other.p2ptr())
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Profile2D.__isub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":325
 *         return self
 * 
 *     def __add__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_83__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_83__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Profile2D, 1, "self", 0))) __PYX_ERR(21, 325, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile2D, 1, "other", 0))) __PYX_ERR(21, 325, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_82__add__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_82__add__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Profile2D *__pyx_t_2;
  YODA::Profile2D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "include/Profile2D.pyx":326
 * 
 *     def __add__(Profile2D self, Profile2D other):
 *         h = Profile2D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Profile2D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":327
 *     def __add__(Profile2D self, Profile2D other):
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))             # <<<<<<<<<<<<<<
 *         return h
 *     def __sub__(Profile2D self, Profile2D other):
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 327, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(21, 327, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_add(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":328
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))
 *         return h             # <<<<<<<<<<<<<<
 *     def __sub__(Profile2D self, Profile2D other):
 *         h = Profile2D()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":325
 *         return self
 * 
 *     def __add__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Profile2D.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":329
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))
 *         return h
 *     def __sub__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_sub_Profile2D(self.p2ptr(), other.p2ptr()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_85__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_85__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Profile2D, 1, "self", 0))) __PYX_ERR(21, 329, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile2D, 1, "other", 0))) __PYX_ERR(21, 329, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_84__sub__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Profile2D_84__sub__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other) {
  struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  YODA::Profile2D *__pyx_t_2;
  YODA::Profile2D *__pyx_t_3;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "include/Profile2D.pyx":330
 *         return h
 *     def __sub__(Profile2D self, Profile2D other):
 *         h = Profile2D()             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(h, c.Profile2D_sub_Profile2D(self.p2ptr(), other.p2ptr()))
 *         return h
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Profile2D), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_h = ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":331
 *     def __sub__(Profile2D self, Profile2D other):
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_sub_Profile2D(self.p2ptr(), other.p2ptr()))             # <<<<<<<<<<<<<<
 *         return h
 * 
 */
  __pyx_t_2 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(21, 331, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_4yoda_4core_9Profile2D_p2ptr(__pyx_v_other); if (unlikely(__pyx_t_3 == NULL)) __PYX_ERR(21, 331, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_h), cython_sub(__pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Profile2D.pyx":332
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_sub_Profile2D(self.p2ptr(), other.p2ptr()))
 *         return h             # <<<<<<<<<<<<<<
 * 
 *     def __div__(Profile2D self, Profile2D other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_h));
  __pyx_r = ((PyObject *)__pyx_v_h);
  goto __pyx_L0;

  /* "include/Profile2D.pyx":329
 *         cutil.set_owned_ptr(h, c.Profile2D_add_Profile2D(self.p2ptr(), other.p2ptr()))
 *         return h
 *     def __sub__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         h = Profile2D()
 *         cutil.set_owned_ptr(h, c.Profile2D_sub_Profile2D(self.p2ptr(), other.p2ptr()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Profile2D.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Profile2D.pyx":334
 *         return h
 * 
 *     def __div__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

/* Python wrapper */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_87__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Profile2D_87__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Profile2D, 1, "self", 0))) __PYX_ERR(21, 334, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Profile2D, 1, "other", 0))) __PYX_ERR(21, 334, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Profile2D_86__div__(((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Profile2D *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_4yoda_4core_9Profile2D_86__div__(struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Profile2D *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "include/Profile2D.pyx":335
 * 
 *     def __div__(Profile2D self, Profile2D other):
 *         return self.divideBy(other)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_divideBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(21, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_other)); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(21, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_other));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_other));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_other));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(21, 335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Profile2D.pyx":334
 *         return h
 * 
 *     def __div__(Profile2D self, Profile2D other):             # <<<<<<<<<<<<<<
 *         return self.divideBy(other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Profile2D.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

/* "include/Point.pyx":6
 *     """
 * 
 *     cdef c.Point* pptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point*> self.ptr()
 * 
 */

static YODA::Point *__pyx_f_4yoda_4core_5Point_pptr(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self) {
  YODA::Point *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("pptr", 0);

  /* "include/Point.pyx":7
 * 
 *     cdef c.Point* pptr(self) except NULL:
 *         return <c.Point*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 7, __pyx_L1_error)
  __pyx_r = ((YODA::Point *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Point.pyx":6
 *     """
 * 
 *     cdef c.Point* pptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point.pptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":9
 *         return <c.Point*> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Point *p = self.pptr()
 *         if self._deallocate:
 */

/* Python wrapper */
static void __pyx_pw_4yoda_4core_5Point_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yoda_4core_5Point_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yoda_4core_5Point___dealloc__(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yoda_4core_5Point___dealloc__(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self) {
  YODA::Point *__pyx_v_p;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "include/Point.pyx":10
 * 
 *     def __dealloc__(self):
 *         cdef c.Point *p = self.pptr()             # <<<<<<<<<<<<<<
 *         if self._deallocate:
 *             del p
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 10, __pyx_L1_error)
  __pyx_v_p = __pyx_t_1;

  /* "include/Point.pyx":11
 *     def __dealloc__(self):
 *         cdef c.Point *p = self.pptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  __pyx_t_2 = (__pyx_v_self->__pyx_base._deallocate != 0);
  if (__pyx_t_2) {

    /* "include/Point.pyx":12
 *         cdef c.Point *p = self.pptr()
 *         if self._deallocate:
 *             del p             # <<<<<<<<<<<<<<
 * 
 *     # def __init__(self):
 */
    delete __pyx_v_p;

    /* "include/Point.pyx":11
 *     def __dealloc__(self):
 *         cdef c.Point *p = self.pptr()
 *         if self._deallocate:             # <<<<<<<<<<<<<<
 *             del p
 * 
 */
  }

  /* "include/Point.pyx":9
 *         return <c.Point*> self.ptr()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef c.Point *p = self.pptr()
 *         if self._deallocate:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core.Point.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/Point.pyx":24
 * 
 *     @property
 *     def dim(self):             # <<<<<<<<<<<<<<
 *         """None -> int
 *         Space dimension of the point (should match containing Scatter)"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_3dim_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_5Point_3dim_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Point_3dim___get__(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_3dim___get__(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point.pyx":27
 *         """None -> int
 *         Space dimension of the point (should match containing Scatter)"""
 *         return self.pptr().dim()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 27, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->dim();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 27, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point.pyx":24
 * 
 *     @property
 *     def dim(self):             # <<<<<<<<<<<<<<
 *         """None -> int
 *         Space dimension of the point (should match containing Scatter)"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point.dim.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":30
 * 
 * 
 *     def val(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Value on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_3val(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_2val[] = "Point.val(self, i)\nint -> float\n        Value on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_3val(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("val (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Point_2val(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_2val(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("val", 0);

  /* "include/Point.pyx":33
 *         """int -> float
 *         Value on axis i"""
 *         return self.pptr().val(i)             # <<<<<<<<<<<<<<
 * 
 *     def setVal(self, i, val):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 33, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 33, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->val(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 33, __pyx_L1_error)
  }
  __pyx_t_4 = PyFloat_FromDouble(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(22, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Point.pyx":30
 * 
 * 
 *     def val(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Value on axis i"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point.val", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":35
 *         return self.pptr().val(i)
 * 
 *     def setVal(self, i, val):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Value on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_5setVal(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_4setVal[] = "Point.setVal(self, i, val)\n(int, float) -> None\n        Value on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_5setVal(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_i = 0;
  PyObject *__pyx_v_val = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setVal (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_val,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setVal", 1, 2, 2, 1); __PYX_ERR(22, 35, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setVal") < 0)) __PYX_ERR(22, 35, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = values[0];
    __pyx_v_val = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setVal", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(22, 35, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point.setVal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Point_4setVal(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), __pyx_v_i, __pyx_v_val);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_4setVal(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("setVal", 0);

  /* "include/Point.pyx":38
 *         """(int, float) -> None
 *         Value on axis i"""
 *         self.pptr().setVal(i, val)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 38, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 38, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(22, 38, __pyx_L1_error)
  try {
    __pyx_t_1->setVal(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 38, __pyx_L1_error)
  }

  /* "include/Point.pyx":35
 *         return self.pptr().val(i)
 * 
 *     def setVal(self, i, val):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Value on axis i"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point.setVal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":41
 * 
 * 
 *     def errs(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Errors on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_7errs(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_6errs[] = "Point.errs(self, i)\nint -> float\n        Errors on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_7errs(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("errs (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Point_6errs(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_6errs(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point *__pyx_t_4;
  size_t __pyx_t_5;
  std::pair<double,double>  __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("errs", 0);

  /* "include/Point.pyx":44
 *         """int -> float
 *         Errors on axis i"""
 *         return util.read_error_pair(self.pptr().errs(i))             # <<<<<<<<<<<<<<
 * 
 *     def setErr(self, i, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(22, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(22, 44, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 44, __pyx_L1_error)
  try {
    __pyx_t_6 = __pyx_t_4->errs(__pyx_t_5);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 44, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(22, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(22, 44, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(22, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(22, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point.pyx":41
 * 
 * 
 *     def errs(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Errors on axis i"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Point.errs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":46
 *         return util.read_error_pair(self.pptr().errs(i))
 * 
 *     def setErr(self, i, e):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Set symmetric errors on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_9setErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_8setErr[] = "Point.setErr(self, i, e)\n(int, float) -> None\n        Set symmetric errors on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_9setErr(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_i = 0;
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setErr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_e,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setErr", 1, 2, 2, 1); __PYX_ERR(22, 46, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setErr") < 0)) __PYX_ERR(22, 46, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = values[0];
    __pyx_v_e = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setErr", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(22, 46, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point.setErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Point_8setErr(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), __pyx_v_i, __pyx_v_e);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_8setErr(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("setErr", 0);

  /* "include/Point.pyx":49
 *         """(int, float) -> None
 *         Set symmetric errors on axis i"""
 *         self.pptr().setErr(i, e)             # <<<<<<<<<<<<<<
 * 
 *     def setErrs(self, i, *es):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 49, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 49, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_e); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(22, 49, __pyx_L1_error)
  try {
    __pyx_t_1->setErr(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 49, __pyx_L1_error)
  }

  /* "include/Point.pyx":46
 *         return util.read_error_pair(self.pptr().errs(i))
 * 
 *     def setErr(self, i, e):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Set symmetric errors on axis i"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point.setErr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":51
 *         self.pptr().setErr(i, e)
 * 
 *     def setErrs(self, i, *es):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *            (int, [float, float]) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_11setErrs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_10setErrs[] = "Point.setErrs(self, i, *es)\n(int, float) -> None\n           (int, [float, float]) -> None\n           (int, float, float) -> None\n        Set asymmetric errors on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_11setErrs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_i = 0;
  PyObject *__pyx_v_es = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setErrs (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_es = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_es)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_es);
  } else {
    __pyx_v_es = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 1) ? pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "setErrs") < 0)) __PYX_ERR(22, 51, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_i = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setErrs", 0, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(22, 51, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_es); __pyx_v_es = 0;
  __Pyx_AddTraceback("yoda.core.Point.setErrs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Point_10setErrs(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), __pyx_v_i, __pyx_v_es);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_es);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_10setErrs(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_es) {
  PyObject *__pyx_v_errs = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  YODA::Point *__pyx_t_9;
  size_t __pyx_t_10;
  std::pair<double,double>  __pyx_t_11;
  __Pyx_RefNannySetupContext("setErrs", 0);

  /* "include/Point.pyx":56
 *            (int, float, float) -> None
 *         Set asymmetric errors on axis i"""
 *         errs = es             # <<<<<<<<<<<<<<
 *         if len(es) == 1:
 *             if not hasattr(es[0], "__iter__"):
 */
  __Pyx_INCREF(__pyx_v_es);
  __pyx_v_errs = __pyx_v_es;

  /* "include/Point.pyx":57
 *         Set asymmetric errors on axis i"""
 *         errs = es
 *         if len(es) == 1:             # <<<<<<<<<<<<<<
 *             if not hasattr(es[0], "__iter__"):
 *                 self.setErr(es[0])
 */
  __pyx_t_1 = PyTuple_GET_SIZE(__pyx_v_es); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(22, 57, __pyx_L1_error)
  __pyx_t_2 = ((__pyx_t_1 == 1) != 0);
  if (__pyx_t_2) {

    /* "include/Point.pyx":58
 *         errs = es
 *         if len(es) == 1:
 *             if not hasattr(es[0], "__iter__"):             # <<<<<<<<<<<<<<
 *                 self.setErr(es[0])
 *             errs = es[0]
 */
    __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 58, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyObject_HasAttr(__pyx_t_3, __pyx_n_s_iter); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(22, 58, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = ((!(__pyx_t_2 != 0)) != 0);
    if (__pyx_t_4) {

      /* "include/Point.pyx":59
 *         if len(es) == 1:
 *             if not hasattr(es[0], "__iter__"):
 *                 self.setErr(es[0])             # <<<<<<<<<<<<<<
 *             errs = es[0]
 *         # assert len(errs) == 2:
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setErr); if (unlikely(!__pyx_t_5)) __PYX_ERR(22, 59, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(22, 59, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_7) {
        __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 59, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_3);
      } else {
        __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(22, 59, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 59, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "include/Point.pyx":58
 *         errs = es
 *         if len(es) == 1:
 *             if not hasattr(es[0], "__iter__"):             # <<<<<<<<<<<<<<
 *                 self.setErr(es[0])
 *             errs = es[0]
 */
    }

    /* "include/Point.pyx":60
 *             if not hasattr(es[0], "__iter__"):
 *                 self.setErr(es[0])
 *             errs = es[0]             # <<<<<<<<<<<<<<
 *         # assert len(errs) == 2:
 *         self.pptr().setErrs(i, errs)
 */
    __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 60, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_errs, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "include/Point.pyx":57
 *         Set asymmetric errors on axis i"""
 *         errs = es
 *         if len(es) == 1:             # <<<<<<<<<<<<<<
 *             if not hasattr(es[0], "__iter__"):
 *                 self.setErr(es[0])
 */
  }

  /* "include/Point.pyx":62
 *             errs = es[0]
 *         # assert len(errs) == 2:
 *         self.pptr().setErrs(i, errs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_9 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(22, 62, __pyx_L1_error)
  __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 62, __pyx_L1_error)
  __pyx_t_11 = __pyx_convert_pair_from_py_double__and_double(__pyx_v_errs); if (unlikely(PyErr_Occurred())) __PYX_ERR(22, 62, __pyx_L1_error)
  try {
    __pyx_t_9->setErrs(__pyx_t_10, __pyx_t_11);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 62, __pyx_L1_error)
  }

  /* "include/Point.pyx":51
 *         self.pptr().setErr(i, e)
 * 
 *     def setErrs(self, i, *es):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *            (int, [float, float]) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Point.setErrs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_errs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":65
 * 
 * 
 *     def errMinus(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Minus error on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_13errMinus(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_12errMinus[] = "Point.errMinus(self, i)\nint -> float\n        Minus error on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_13errMinus(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("errMinus (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Point_12errMinus(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_12errMinus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("errMinus", 0);

  /* "include/Point.pyx":68
 *         """int -> float
 *         Minus error on axis i"""
 *         return self.pptr().errMinus(i)             # <<<<<<<<<<<<<<
 * 
 *     def setErrMinus(self, i, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 68, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 68, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->errMinus(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 68, __pyx_L1_error)
  }
  __pyx_t_4 = PyFloat_FromDouble(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(22, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Point.pyx":65
 * 
 * 
 *     def errMinus(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Minus error on axis i"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point.errMinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":70
 *         return self.pptr().errMinus(i)
 * 
 *     def setErrMinus(self, i, e):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Set minus error on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_15setErrMinus(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_14setErrMinus[] = "Point.setErrMinus(self, i, e)\n(int, float) -> None\n        Set minus error on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_15setErrMinus(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_i = 0;
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setErrMinus (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_e,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setErrMinus", 1, 2, 2, 1); __PYX_ERR(22, 70, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setErrMinus") < 0)) __PYX_ERR(22, 70, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = values[0];
    __pyx_v_e = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setErrMinus", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(22, 70, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point.setErrMinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Point_14setErrMinus(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), __pyx_v_i, __pyx_v_e);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_14setErrMinus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("setErrMinus", 0);

  /* "include/Point.pyx":73
 *         """(int, float) -> None
 *         Set minus error on axis i"""
 *         self.pptr().setErrMinus(i, e)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 73, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 73, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_e); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(22, 73, __pyx_L1_error)
  try {
    __pyx_t_1->setErrMinus(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 73, __pyx_L1_error)
  }

  /* "include/Point.pyx":70
 *         return self.pptr().errMinus(i)
 * 
 *     def setErrMinus(self, i, e):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Set minus error on axis i"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point.setErrMinus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":76
 * 
 * 
 *     def errPlus(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Plus error on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_17errPlus(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_16errPlus[] = "Point.errPlus(self, i)\nint -> float\n        Plus error on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_17errPlus(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("errPlus (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Point_16errPlus(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_16errPlus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("errPlus", 0);

  /* "include/Point.pyx":79
 *         """int -> float
 *         Plus error on axis i"""
 *         return self.pptr().errPlus(i)             # <<<<<<<<<<<<<<
 * 
 *     def setErrPlus(self, i, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 79, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 79, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->errPlus(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 79, __pyx_L1_error)
  }
  __pyx_t_4 = PyFloat_FromDouble(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(22, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Point.pyx":76
 * 
 * 
 *     def errPlus(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Plus error on axis i"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point.errPlus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":81
 *         return self.pptr().errPlus(i)
 * 
 *     def setErrPlus(self, i, e):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Set plus error on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_19setErrPlus(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_18setErrPlus[] = "Point.setErrPlus(self, i, e)\n(int, float) -> None\n        Set plus error on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_19setErrPlus(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_i = 0;
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setErrPlus (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_e,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setErrPlus", 1, 2, 2, 1); __PYX_ERR(22, 81, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setErrPlus") < 0)) __PYX_ERR(22, 81, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = values[0];
    __pyx_v_e = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setErrPlus", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(22, 81, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point.setErrPlus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Point_18setErrPlus(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), __pyx_v_i, __pyx_v_e);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_18setErrPlus(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("setErrPlus", 0);

  /* "include/Point.pyx":84
 *         """(int, float) -> None
 *         Set plus error on axis i"""
 *         self.pptr().setErrPlus(i, e)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 84, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 84, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_e); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(22, 84, __pyx_L1_error)
  try {
    __pyx_t_1->setErrPlus(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 84, __pyx_L1_error)
  }

  /* "include/Point.pyx":81
 *         return self.pptr().errPlus(i)
 * 
 *     def setErrPlus(self, i, e):             # <<<<<<<<<<<<<<
 *         """(int, float) -> None
 *         Set plus error on axis i"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point.setErrPlus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":87
 * 
 * 
 *     def errAvg(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Average error on axis i"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_21errAvg(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_20errAvg[] = "Point.errAvg(self, i)\nint -> float\n        Average error on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_21errAvg(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("errAvg (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_5Point_20errAvg(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_20errAvg(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point *__pyx_t_1;
  size_t __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("errAvg", 0);

  /* "include/Point.pyx":90
 *         """int -> float
 *         Average error on axis i"""
 *         return self.pptr().errAvg(i)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(22, 90, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_2 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 90, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_1->errAvg(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 90, __pyx_L1_error)
  }
  __pyx_t_4 = PyFloat_FromDouble(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(22, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Point.pyx":87
 * 
 * 
 *     def errAvg(self, i):             # <<<<<<<<<<<<<<
 *         """int -> float
 *         Average error on axis i"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point.errAvg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point.pyx":93
 * 
 * 
 *     def set(self, i, val, *es):             # <<<<<<<<<<<<<<
 *         """(int, float, float) -> None
 *            (int, float, [float, float]) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5Point_23set(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_5Point_22set[] = "Point.set(self, i, val, *es)\n(int, float, float) -> None\n           (int, float, [float, float]) -> None\n           (int, float, float, float) -> None\n        Set value and errors on axis i";
static PyObject *__pyx_pw_4yoda_4core_5Point_23set(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_i = 0;
  PyObject *__pyx_v_val = 0;
  PyObject *__pyx_v_es = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 2) {
    __pyx_v_es = PyTuple_GetSlice(__pyx_args, 2, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_es)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_es);
  } else {
    __pyx_v_es = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_val,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set", 0, 2, 2, 1); __PYX_ERR(22, 93, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 2) ? pos_args : 2;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "set") < 0)) __PYX_ERR(22, 93, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = values[0];
    __pyx_v_val = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set", 0, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(22, 93, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_es); __pyx_v_es = 0;
  __Pyx_AddTraceback("yoda.core.Point.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_5Point_22set(((struct __pyx_obj_4yoda_4core_Point *)__pyx_v_self), __pyx_v_i, __pyx_v_val, __pyx_v_es);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_es);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_5Point_22set(struct __pyx_obj_4yoda_4core_Point *__pyx_v_self, PyObject *__pyx_v_i, PyObject *__pyx_v_val, PyObject *__pyx_v_es) {
  PyObject *__pyx_v_errs = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  YODA::Point *__pyx_t_7;
  size_t __pyx_t_8;
  double __pyx_t_9;
  std::pair<double,double>  __pyx_t_10;
  __Pyx_RefNannySetupContext("set", 0);

  /* "include/Point.pyx":98
 *            (int, float, float, float) -> None
 *         Set value and errors on axis i"""
 *         errs = es             # <<<<<<<<<<<<<<
 *         if len(es) == 1:
 *             if hasattr(es[0], "__iter__"):
 */
  __Pyx_INCREF(__pyx_v_es);
  __pyx_v_errs = __pyx_v_es;

  /* "include/Point.pyx":99
 *         Set value and errors on axis i"""
 *         errs = es
 *         if len(es) == 1:             # <<<<<<<<<<<<<<
 *             if hasattr(es[0], "__iter__"):
 *                 errs = [es[0], es[0]]
 */
  __pyx_t_1 = PyTuple_GET_SIZE(__pyx_v_es); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(22, 99, __pyx_L1_error)
  __pyx_t_2 = ((__pyx_t_1 == 1) != 0);
  if (__pyx_t_2) {

    /* "include/Point.pyx":100
 *         errs = es
 *         if len(es) == 1:
 *             if hasattr(es[0], "__iter__"):             # <<<<<<<<<<<<<<
 *                 errs = [es[0], es[0]]
 *             else:
 */
    __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyObject_HasAttr(__pyx_t_3, __pyx_n_s_iter); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(22, 100, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = (__pyx_t_2 != 0);
    if (__pyx_t_4) {

      /* "include/Point.pyx":101
 *         if len(es) == 1:
 *             if hasattr(es[0], "__iter__"):
 *                 errs = [es[0], es[0]]             # <<<<<<<<<<<<<<
 *             else:
 *                 errs = es[0]
 */
      __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(22, 101, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(22, 101, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(22, 101, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_3);
      PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_errs, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "include/Point.pyx":100
 *         errs = es
 *         if len(es) == 1:
 *             if hasattr(es[0], "__iter__"):             # <<<<<<<<<<<<<<
 *                 errs = [es[0], es[0]]
 *             else:
 */
      goto __pyx_L4;
    }

    /* "include/Point.pyx":103
 *                 errs = [es[0], es[0]]
 *             else:
 *                 errs = es[0]             # <<<<<<<<<<<<<<
 *         # assert len(errs) == 2:
 *         self.pptr().set(i, val, errs)
 */
    /*else*/ {
      __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v_es, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(22, 103, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_errs, __pyx_t_6);
      __pyx_t_6 = 0;
    }
    __pyx_L4:;

    /* "include/Point.pyx":99
 *         Set value and errors on axis i"""
 *         errs = es
 *         if len(es) == 1:             # <<<<<<<<<<<<<<
 *             if hasattr(es[0], "__iter__"):
 *                 errs = [es[0], es[0]]
 */
  }

  /* "include/Point.pyx":105
 *                 errs = es[0]
 *         # assert len(errs) == 2:
 *         self.pptr().set(i, val, errs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_4yoda_4core_Point *)__pyx_v_self->__pyx_base.__pyx_vtab)->pptr(__pyx_v_self); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(22, 105, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyInt_As_size_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(22, 105, __pyx_L1_error)
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(22, 105, __pyx_L1_error)
  __pyx_t_10 = __pyx_convert_pair_from_py_double__and_double(__pyx_v_errs); if (unlikely(PyErr_Occurred())) __PYX_ERR(22, 105, __pyx_L1_error)
  try {
    __pyx_t_7->set(__pyx_t_8, __pyx_t_9, __pyx_t_10);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(22, 105, __pyx_L1_error)
  }

  /* "include/Point.pyx":93
 * 
 * 
 *     def set(self, i, val, *es):             # <<<<<<<<<<<<<<
 *         """(int, float, float) -> None
 *            (int, float, [float, float]) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Point.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_errs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":6
 *     """
 * 
 *     cdef c.Point1D* p1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point1D*> self.ptr()
 * 
 */

static YODA::Point1D *__pyx_f_4yoda_4core_7Point1D_p1ptr(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  YODA::Point1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("p1ptr", 0);

  /* "include/Point1D.pyx":7
 * 
 *     cdef c.Point1D* p1ptr(self) except NULL:
 *         return <c.Point1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 7, __pyx_L1_error)
  __pyx_r = ((YODA::Point1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Point1D.pyx":6
 *     """
 * 
 *     cdef c.Point1D* p1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point1D.p1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":10
 * 
 * 
 *     def __init__(self, x=0, xerrs=0):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Point1D())
 *         self.x = x
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_7Point1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_xerrs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_xerrs,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_int_0);
    values[1] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xerrs);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(23, 10, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_xerrs = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(23, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D___init__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self), __pyx_v_x, __pyx_v_xerrs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point1D___init__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_xerrs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Point1D.pyx":11
 * 
 *     def __init__(self, x=0, xerrs=0):
 *         cutil.set_owned_ptr(self, new c.Point1D())             # <<<<<<<<<<<<<<
 *         self.x = x
 *         self.xErrs = xerrs
 */
  try {
    __pyx_t_1 = new YODA::Point1D();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 11, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(23, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Point1D.pyx":12
 *     def __init__(self, x=0, xerrs=0):
 *         cutil.set_owned_ptr(self, new c.Point1D())
 *         self.x = x             # <<<<<<<<<<<<<<
 *         self.xErrs = xerrs
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x, __pyx_v_x) < 0) __PYX_ERR(23, 12, __pyx_L1_error)

  /* "include/Point1D.pyx":13
 *         cutil.set_owned_ptr(self, new c.Point1D())
 *         self.x = x
 *         self.xErrs = xerrs             # <<<<<<<<<<<<<<
 * 
 *     def copy(self):
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xErrs, __pyx_v_xerrs) < 0) __PYX_ERR(23, 13, __pyx_L1_error)

  /* "include/Point1D.pyx":10
 * 
 * 
 *     def __init__(self, x=0, xerrs=0):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Point1D())
 *         self.x = x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":15
 *         self.xErrs = xerrs
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Point1D, new c.Point1D(deref(self.p1ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_3copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Point1D_2copy[] = "Point1D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_7Point1D_3copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_2copy(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_2copy(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  YODA::Point1D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Point1D.pyx":16
 * 
 *     def copy(self):
 *         return cutil.new_owned_cls(Point1D, new c.Point1D(deref(self.p1ptr())))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: add clone() as mapping to (not yet existing) C++ newclone()?
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 16, __pyx_L1_error)
  try {
    __pyx_t_2 = new YODA::Point1D((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 16, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point1D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":15
 *         self.xErrs = xerrs
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Point1D, new c.Point1D(deref(self.p1ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point1D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":23
 *     property x:
 *         """x coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p1ptr().x()
 *         def __set__(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_1x_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_1x___get__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_1x___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point1D.pyx":24
 *         """x coordinate"""
 *         def __get__(self):
 *             return self.p1ptr().x()             # <<<<<<<<<<<<<<
 *         def __set__(self, x):
 *             self.p1ptr().setX(x)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 24, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->x();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 24, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":23
 *     property x:
 *         """x coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p1ptr().x()
 *         def __set__(self, x):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point1D.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":25
 *         def __get__(self):
 *             return self.p1ptr().x()
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.p1ptr().setX(x)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point1D_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4yoda_4core_7Point1D_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_1x_2__set__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point1D_1x_2__set__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point1D.pyx":26
 *             return self.p1ptr().x()
 *         def __set__(self, x):
 *             self.p1ptr().setX(x)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 26, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(23, 26, __pyx_L1_error)
  try {
    __pyx_t_1->setX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 26, __pyx_L1_error)
  }

  /* "include/Point1D.pyx":25
 *         def __get__(self):
 *             return self.p1ptr().x()
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.p1ptr().setX(x)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point1D.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":31
 *     property xErrs:
 *         """The x errors"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p1ptr().xErrs())
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_5xErrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_5xErrs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_5xErrs___get__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_5xErrs___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point1D *__pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point1D.pyx":32
 *         """The x errors"""
 *         def __get__(self):
 *             return util.read_error_pair(self.p1ptr().xErrs())             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.p1ptr().setXErrs(util.read_symmetric(val))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(23, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(23, 32, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xErrs();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 32, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(23, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(23, 32, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(23, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(23, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":31
 *     property xErrs:
 *         """The x errors"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p1ptr().xErrs())
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point1D.xErrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":33
 *         def __get__(self):
 *             return util.read_error_pair(self.p1ptr().xErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p1ptr().setXErrs(util.read_symmetric(val))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point1D_5xErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point1D_5xErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_5xErrs_2__set__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point1D_5xErrs_2__set__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::pair<double,double>  __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point1D.pyx":34
 *             return util.read_error_pair(self.p1ptr().xErrs())
 *         def __set__(self, val):
 *             self.p1ptr().setXErrs(util.read_symmetric(val))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 34, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read_symmetric); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(23, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(23, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(23, 34, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_pair_from_py_double__and_double(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(23, 34, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setXErrs(__pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 34, __pyx_L1_error)
  }

  /* "include/Point1D.pyx":33
 *         def __get__(self):
 *             return util.read_error_pair(self.p1ptr().xErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p1ptr().setXErrs(util.read_symmetric(val))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point1D.xErrs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":38
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p1ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_4xMin___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point1D.pyx":40
 *     def xMin(self):
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p1ptr().xMin()             # <<<<<<<<<<<<<<
 *     @property
 *     def xMax(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 40, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 40, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":38
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p1ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point1D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":42
 *         return self.p1ptr().xMin()
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum x position, i.e. highest error"""
 *         return self.p1ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_4xMax___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point1D.pyx":44
 *     def xMax(self):
 *         """The maximum x position, i.e. highest error"""
 *         return self.p1ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 44, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 44, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":42
 *         return self.p1ptr().xMin()
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum x position, i.e. highest error"""
 *         return self.p1ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point1D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":48
 * 
 *     property xErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p1ptr().xErrAvg()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_7xErrAvg_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_7xErrAvg_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_7xErrAvg___get__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_7xErrAvg___get__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point1D.pyx":49
 *     property xErrAvg:
 *         def __get__(self):
 *             return self.p1ptr().xErrAvg()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 49, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xErrAvg();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 49, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(23, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":48
 * 
 *     property xErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p1ptr().xErrAvg()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point1D.xErrAvg.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":52
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_5scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_7Point1D_4scaleX[] = "Point1D.scaleX(self, a)\n(float) -> None\n        Scale the x values and errors by factor a.";
static PyObject *__pyx_pw_4yoda_4core_7Point1D_5scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_4scaleX(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_4scaleX(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Point1D.pyx":55
 *         """(float) -> None
 *         Scale the x values and errors by factor a."""
 *         self.p1ptr().scaleX(a)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 55, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(23, 55, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(23, 55, __pyx_L1_error)
  }

  /* "include/Point1D.pyx":52
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point1D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":58
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Point1D(x=%g)>' % self.x
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_7__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_7__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_6__repr__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_6__repr__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Point1D.pyx":59
 * 
 *     def __repr__(self):
 *         return '<Point1D(x=%g)>' % self.x             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Point1D self, Point1D other, int op):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(23, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_Point1D_x_g, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(23, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Point1D.pyx":58
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Point1D(x=%g)>' % self.x
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point1D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point1D.pyx":61
 *         return '<Point1D(x=%g)>' % self.x
 * 
 *     def __richcmp__(Point1D self, Point1D other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0:
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point1D_9__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point1D_9__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Point1D, 1, "self", 0))) __PYX_ERR(23, 61, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Point1D, 1, "other", 0))) __PYX_ERR(23, 61, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Point1D_8__richcmp__(((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_other), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point1D_8__richcmp__(struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point1D *__pyx_t_1;
  YODA::Point1D *__pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "include/Point1D.pyx":62
 * 
 *     def __richcmp__(Point1D self, Point1D other, int op):
 *         if op == 0:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 *         elif op == 1:
 */
  switch (__pyx_v_op) {
    case 0:

    /* "include/Point1D.pyx":63
 *     def __richcmp__(Point1D self, Point1D other, int op):
 *         if op == 0:
 *             return deref(self.p1ptr()) < deref(other.p1ptr())             # <<<<<<<<<<<<<<
 *         elif op == 1:
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 63, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(23, 63, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_1) < (*__pyx_t_2));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(23, 63, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_1) < (*__pyx_t_2));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point1D.pyx":62
 * 
 *     def __richcmp__(Point1D self, Point1D other, int op):
 *         if op == 0:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 *         elif op == 1:
 */
    break;

    /* "include/Point1D.pyx":64
 *         if op == 0:
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())
 *         elif op == 2:
 */
    case 1:

    /* "include/Point1D.pyx":65
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 *         elif op == 1:
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())             # <<<<<<<<<<<<<<
 *         elif op == 2:
 *             return deref(self.p1ptr()) == deref(other.p1ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(23, 65, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 65, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_2) <= (*__pyx_t_1));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(23, 65, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_2) <= (*__pyx_t_1));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point1D.pyx":64
 *         if op == 0:
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())
 *         elif op == 2:
 */
    break;

    /* "include/Point1D.pyx":66
 *         elif op == 1:
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) == deref(other.p1ptr())
 *         elif op == 3:
 */
    case 2:

    /* "include/Point1D.pyx":67
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())
 *         elif op == 2:
 *             return deref(self.p1ptr()) == deref(other.p1ptr())             # <<<<<<<<<<<<<<
 *         elif op == 3:
 *             return deref(self.p1ptr()) != deref(other.p1ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 67, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(23, 67, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_1) == (*__pyx_t_2));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(23, 67, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_1) == (*__pyx_t_2));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 67, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point1D.pyx":66
 *         elif op == 1:
 *             return deref(self.p1ptr()) <= deref(other.p1ptr())
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) == deref(other.p1ptr())
 *         elif op == 3:
 */
    break;

    /* "include/Point1D.pyx":68
 *         elif op == 2:
 *             return deref(self.p1ptr()) == deref(other.p1ptr())
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) != deref(other.p1ptr())
 *         elif op == 4:
 */
    case 3:

    /* "include/Point1D.pyx":69
 *             return deref(self.p1ptr()) == deref(other.p1ptr())
 *         elif op == 3:
 *             return deref(self.p1ptr()) != deref(other.p1ptr())             # <<<<<<<<<<<<<<
 *         elif op == 4:
 *             return deref(self.p1ptr()) > deref(other.p1ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(23, 69, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 69, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_2) != (*__pyx_t_1));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(23, 69, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_2) != (*__pyx_t_1));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 69, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point1D.pyx":68
 *         elif op == 2:
 *             return deref(self.p1ptr()) == deref(other.p1ptr())
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) != deref(other.p1ptr())
 *         elif op == 4:
 */
    break;

    /* "include/Point1D.pyx":70
 *         elif op == 3:
 *             return deref(self.p1ptr()) != deref(other.p1ptr())
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) > deref(other.p1ptr())
 *         elif op == 5:
 */
    case 4:

    /* "include/Point1D.pyx":71
 *             return deref(self.p1ptr()) != deref(other.p1ptr())
 *         elif op == 4:
 *             return deref(self.p1ptr()) > deref(other.p1ptr())             # <<<<<<<<<<<<<<
 *         elif op == 5:
 *             return deref(self.p1ptr()) >= deref(other.p1ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 71, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(23, 71, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_1) > (*__pyx_t_2));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(23, 71, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_1) > (*__pyx_t_2));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point1D.pyx":70
 *         elif op == 3:
 *             return deref(self.p1ptr()) != deref(other.p1ptr())
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) > deref(other.p1ptr())
 *         elif op == 5:
 */
    break;

    /* "include/Point1D.pyx":72
 *         elif op == 4:
 *             return deref(self.p1ptr()) > deref(other.p1ptr())
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) >= deref(other.p1ptr())
 */
    case 5:

    /* "include/Point1D.pyx":73
 *             return deref(self.p1ptr()) > deref(other.p1ptr())
 *         elif op == 5:
 *             return deref(self.p1ptr()) >= deref(other.p1ptr())             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(23, 73, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(23, 73, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_2) >= (*__pyx_t_1));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(23, 73, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_2) >= (*__pyx_t_1));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(23, 73, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point1D.pyx":72
 *         elif op == 4:
 *             return deref(self.p1ptr()) > deref(other.p1ptr())
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return deref(self.p1ptr()) >= deref(other.p1ptr())
 */
    break;
    default: break;
  }

  /* "include/Point1D.pyx":61
 *         return '<Point1D(x=%g)>' % self.x
 * 
 *     def __richcmp__(Point1D self, Point1D other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0:
 *             return deref(self.p1ptr()) < deref(other.p1ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point1D.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":6
 *     """
 * 
 *     cdef c.Point2D* p2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point2D*> self.ptr()
 * 
 */

static YODA::Point2D *__pyx_f_4yoda_4core_7Point2D_p2ptr(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  YODA::Point2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("p2ptr", 0);

  /* "include/Point2D.pyx":7
 * 
 *     cdef c.Point2D* p2ptr(self) except NULL:
 *         return <c.Point2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 7, __pyx_L1_error)
  __pyx_r = ((YODA::Point2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Point2D.pyx":6
 *     """
 * 
 *     cdef c.Point2D* p2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.p2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":10
 * 
 * 
 *     def __init__(self, x=0, y=0, xerrs=0, yerrs=0):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Point2D())
 *         self.x = x
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_7Point2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_xerrs = 0;
  PyObject *__pyx_v_yerrs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_xerrs,&__pyx_n_s_yerrs,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)__pyx_int_0);
    values[1] = ((PyObject *)__pyx_int_0);
    values[2] = ((PyObject *)__pyx_int_0);
    values[3] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xerrs);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yerrs);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(24, 10, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_xerrs = values[2];
    __pyx_v_yerrs = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(24, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D___init__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_xerrs, __pyx_v_yerrs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point2D___init__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Point2D.pyx":11
 * 
 *     def __init__(self, x=0, y=0, xerrs=0, yerrs=0):
 *         cutil.set_owned_ptr(self, new c.Point2D())             # <<<<<<<<<<<<<<
 *         self.x = x
 *         self.y = y
 */
  try {
    __pyx_t_1 = new YODA::Point2D();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 11, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Point2D.pyx":12
 *     def __init__(self, x=0, y=0, xerrs=0, yerrs=0):
 *         cutil.set_owned_ptr(self, new c.Point2D())
 *         self.x = x             # <<<<<<<<<<<<<<
 *         self.y = y
 *         self.xErrs = xerrs
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x, __pyx_v_x) < 0) __PYX_ERR(24, 12, __pyx_L1_error)

  /* "include/Point2D.pyx":13
 *         cutil.set_owned_ptr(self, new c.Point2D())
 *         self.x = x
 *         self.y = y             # <<<<<<<<<<<<<<
 *         self.xErrs = xerrs
 *         self.yErrs = yerrs
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y, __pyx_v_y) < 0) __PYX_ERR(24, 13, __pyx_L1_error)

  /* "include/Point2D.pyx":14
 *         self.x = x
 *         self.y = y
 *         self.xErrs = xerrs             # <<<<<<<<<<<<<<
 *         self.yErrs = yerrs
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xErrs, __pyx_v_xerrs) < 0) __PYX_ERR(24, 14, __pyx_L1_error)

  /* "include/Point2D.pyx":15
 *         self.y = y
 *         self.xErrs = xerrs
 *         self.yErrs = yerrs             # <<<<<<<<<<<<<<
 * 
 *     def copy(self):
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yErrs, __pyx_v_yerrs) < 0) __PYX_ERR(24, 15, __pyx_L1_error)

  /* "include/Point2D.pyx":10
 * 
 * 
 *     def __init__(self, x=0, y=0, xerrs=0, yerrs=0):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Point2D())
 *         self.x = x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":17
 *         self.yErrs = yerrs
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Point2D, new c.Point2D(deref(self.p2ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_3copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Point2D_2copy[] = "Point2D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_7Point2D_3copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_2copy(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_2copy(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  YODA::Point2D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Point2D.pyx":18
 * 
 *     def copy(self):
 *         return cutil.new_owned_cls(Point2D, new c.Point2D(deref(self.p2ptr())))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: add clone() as mapping to (not yet existing) C++ newclone()?
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 18, __pyx_L1_error)
  try {
    __pyx_t_2 = new YODA::Point2D((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 18, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point2D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":17
 *         self.yErrs = yerrs
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Point2D, new c.Point2D(deref(self.p2ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":25
 *     property x:
 *         """x coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().x()
 *         def __set__(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_1x_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_1x___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_1x___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":26
 *         """x coordinate"""
 *         def __get__(self):
 *             return self.p2ptr().x()             # <<<<<<<<<<<<<<
 *         def __set__(self, x):
 *             self.p2ptr().setX(x)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 26, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->x();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 26, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":25
 *     property x:
 *         """x coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().x()
 *         def __set__(self, x):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":27
 *         def __get__(self):
 *             return self.p2ptr().x()
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setX(x)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point2D_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4yoda_4core_7Point2D_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_1x_2__set__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point2D_1x_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point2D.pyx":28
 *             return self.p2ptr().x()
 *         def __set__(self, x):
 *             self.p2ptr().setX(x)             # <<<<<<<<<<<<<<
 * 
 *     property y:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 28, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 28, __pyx_L1_error)
  try {
    __pyx_t_1->setX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 28, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":27
 *         def __get__(self):
 *             return self.p2ptr().x()
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setX(x)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":32
 *     property y:
 *         """y coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().y()
 *         def __set__(self, y):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_1y_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_1y___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_1y___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":33
 *         """y coordinate"""
 *         def __get__(self):
 *             return self.p2ptr().y()             # <<<<<<<<<<<<<<
 *         def __set__(self, y):
 *             self.p2ptr().setY(y)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 33, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->y();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 33, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":32
 *     property y:
 *         """y coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().y()
 *         def __set__(self, y):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":34
 *         def __get__(self):
 *             return self.p2ptr().y()
 *         def __set__(self, y):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setY(y)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point2D_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static int __pyx_pw_4yoda_4core_7Point2D_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_1y_2__set__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point2D_1y_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point2D.pyx":35
 *             return self.p2ptr().y()
 *         def __set__(self, y):
 *             self.p2ptr().setY(y)             # <<<<<<<<<<<<<<
 * 
 *     property xy:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 35, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 35, __pyx_L1_error)
  try {
    __pyx_t_1->setY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 35, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":34
 *         def __get__(self):
 *             return self.p2ptr().y()
 *         def __set__(self, y):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setY(y)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":39
 *     property xy:
 *         """x and y coordinates as a tuple"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.XY(self.x, self.y)
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_2xy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_2xy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_2xy___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_2xy___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":40
 *         """x and y coordinates as a tuple"""
 *         def __get__(self):
 *             return util.XY(self.x, self.y)             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.x, self.y = val
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XY); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(24, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":39
 *     property xy:
 *         """x and y coordinates as a tuple"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.XY(self.x, self.y)
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point2D.xy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":41
 *         def __get__(self):
 *             return util.XY(self.x, self.y)
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.x, self.y = val
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point2D_2xy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point2D_2xy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_2xy_2__set__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point2D_2xy_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point2D.pyx":42
 *             return util.XY(self.x, self.y)
 *         def __set__(self, val):
 *             self.x, self.y = val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_val))) || (PyList_CheckExact(__pyx_v_val))) {
    PyObject* sequence = __pyx_v_val;
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(24, 42, __pyx_L1_error)
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_3 = PyObject_GetIter(__pyx_v_val); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = Py_TYPE(__pyx_t_3)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_4(__pyx_t_3), 2) < 0) __PYX_ERR(24, 42, __pyx_L1_error)
    __pyx_t_4 = NULL;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(24, 42, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x, __pyx_t_1) < 0) __PYX_ERR(24, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y, __pyx_t_2) < 0) __PYX_ERR(24, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Point2D.pyx":41
 *         def __get__(self):
 *             return util.XY(self.x, self.y)
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.x, self.y = val
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.xy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":48
 *     property xErrs:
 *         """The x errors"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p2ptr().xErrs())
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_5xErrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_5xErrs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_5xErrs___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_5xErrs___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point2D *__pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":49
 *         """The x errors"""
 *         def __get__(self):
 *             return util.read_error_pair(self.p2ptr().xErrs())             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.p2ptr().setXErrs(util.read_symmetric(val))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(24, 49, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xErrs();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 49, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 49, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(24, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":48
 *     property xErrs:
 *         """The x errors"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p2ptr().xErrs())
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point2D.xErrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":50
 *         def __get__(self):
 *             return util.read_error_pair(self.p2ptr().xErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setXErrs(util.read_symmetric(val))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point2D_5xErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point2D_5xErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_5xErrs_2__set__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point2D_5xErrs_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::pair<double,double>  __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point2D.pyx":51
 *             return util.read_error_pair(self.p2ptr().xErrs())
 *         def __set__(self, val):
 *             self.p2ptr().setXErrs(util.read_symmetric(val))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 51, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read_symmetric); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(24, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_pair_from_py_double__and_double(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(24, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setXErrs(__pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 51, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":50
 *         def __get__(self):
 *             return util.read_error_pair(self.p2ptr().xErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setXErrs(util.read_symmetric(val))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point2D.xErrs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":56
 *     property yErrs:
 *         """The y errors"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p2ptr().yErrs())
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_5yErrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_5yErrs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_5yErrs___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_5yErrs___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point2D *__pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":57
 *         """The y errors"""
 *         def __get__(self):
 *             return util.read_error_pair(self.p2ptr().yErrs())             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.p2ptr().setYErrs(util.read_symmetric(val))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(24, 57, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yErrs();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 57, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 57, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(24, 57, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 57, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":56
 *     property yErrs:
 *         """The y errors"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p2ptr().yErrs())
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point2D.yErrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":58
 *         def __get__(self):
 *             return util.read_error_pair(self.p2ptr().yErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setYErrs(util.read_symmetric(val))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point2D_5yErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point2D_5yErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_5yErrs_2__set__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point2D_5yErrs_2__set__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::pair<double,double>  __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point2D.pyx":59
 *             return util.read_error_pair(self.p2ptr().yErrs())
 *         def __set__(self, val):
 *             self.p2ptr().setYErrs(util.read_symmetric(val))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 59, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read_symmetric); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(24, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_pair_from_py_double__and_double(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(24, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setYErrs(__pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 59, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":58
 *         def __get__(self):
 *             return util.read_error_pair(self.p2ptr().yErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p2ptr().setYErrs(util.read_symmetric(val))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point2D.yErrs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":63
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p2ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_4xMin___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":65
 *     def xMin(self):
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p2ptr().xMin()             # <<<<<<<<<<<<<<
 *     @property
 *     def xMax(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 65, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 65, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":63
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p2ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":67
 *         return self.p2ptr().xMin()
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum x position, i.e. highest error"""
 *         return self.p2ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_4xMax___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":69
 *     def xMax(self):
 *         """The maximum x position, i.e. highest error"""
 *         return self.p2ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 69, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 69, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":67
 *         return self.p2ptr().xMin()
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum x position, i.e. highest error"""
 *         return self.p2ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":73
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum y position, i.e. lowest error"""
 *         return self.p2ptr().yMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4yMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4yMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_4yMin___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_4yMin___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":75
 *     def yMin(self):
 *         """The minimum y position, i.e. lowest error"""
 *         return self.p2ptr().yMin()             # <<<<<<<<<<<<<<
 *     @property
 *     def yMax(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 75, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 75, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":73
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum y position, i.e. lowest error"""
 *         return self.p2ptr().yMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.yMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":77
 *         return self.p2ptr().yMin()
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum y position, i.e. highest error"""
 *         return self.p2ptr().yMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4yMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_4yMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_4yMax___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_4yMax___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":79
 *     def yMax(self):
 *         """The maximum y position, i.e. highest error"""
 *         return self.p2ptr().yMax()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 79, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 79, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":77
 *         return self.p2ptr().yMin()
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum y position, i.e. highest error"""
 *         return self.p2ptr().yMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.yMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":83
 * 
 *     property xErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().xErrAvg()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_7xErrAvg_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_7xErrAvg_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_7xErrAvg___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_7xErrAvg___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":84
 *     property xErrAvg:
 *         def __get__(self):
 *             return self.p2ptr().xErrAvg()             # <<<<<<<<<<<<<<
 * 
 *     property yErrAvg:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 84, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xErrAvg();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 84, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":83
 * 
 *     property xErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().xErrAvg()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.xErrAvg.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":87
 * 
 *     property yErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().yErrAvg()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_7yErrAvg_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_7yErrAvg_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_7yErrAvg___get__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_7yErrAvg___get__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point2D.pyx":88
 *     property yErrAvg:
 *         def __get__(self):
 *             return self.p2ptr().yErrAvg()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 88, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yErrAvg();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 88, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":87
 * 
 *     property yErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p2ptr().yErrAvg()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.yErrAvg.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":91
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_5scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_7Point2D_4scaleX[] = "Point2D.scaleX(self, a)\n(float) -> None\n        Scale the x values and errors by factor a.";
static PyObject *__pyx_pw_4yoda_4core_7Point2D_5scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_4scaleX(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_4scaleX(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Point2D.pyx":94
 *         """(float) -> None
 *         Scale the x values and errors by factor a."""
 *         self.p2ptr().scaleX(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, a):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 94, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 94, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 94, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":91
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":96
 *         self.p2ptr().scaleX(a)
 * 
 *     def scaleY(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the y values and errors by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_7scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_7Point2D_6scaleY[] = "Point2D.scaleY(self, a)\n(float) -> None\n        Scale the y values and errors by factor a.";
static PyObject *__pyx_pw_4yoda_4core_7Point2D_7scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_6scaleY(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_6scaleY(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Point2D.pyx":99
 *         """(float) -> None
 *         Scale the y values and errors by factor a."""
 *         self.p2ptr().scaleY(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleXY(self, x=1.0, y=1.0):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 99, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 99, __pyx_L1_error)
  try {
    __pyx_t_1->scaleY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 99, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":96
 *         self.p2ptr().scaleX(a)
 * 
 *     def scaleY(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the y values and errors by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":101
 *         self.p2ptr().scaleY(a)
 * 
 *     def scaleXY(self, x=1.0, y=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float=1, float=1) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_9scaleXY(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Point2D_8scaleXY[] = "Point2D.scaleXY(self, x=1.0, y=1.0)\n\n        (float=1, float=1) -> None\n        Scale the point coordinates by the given factors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point2D_9scaleXY(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXY (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXY") < 0)) __PYX_ERR(24, 101, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXY", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(24, 101, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.scaleXY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_8scaleXY(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_8scaleXY(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("scaleXY", 0);

  /* "include/Point2D.pyx":106
 *         Scale the point coordinates by the given factors.
 *         """
 *         self.p2ptr().scaleXY(x, y)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: remove
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 106, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 106, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 106, __pyx_L1_error)
  try {
    __pyx_t_1->scaleXY(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 106, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":101
 *         self.p2ptr().scaleY(a)
 * 
 *     def scaleXY(self, x=1.0, y=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float=1, float=1) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.scaleXY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":109
 * 
 *     # TODO: remove
 *     def scale(self, x=1.0, y=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float=1, float=1) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_11scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Point2D_10scale[] = "Point2D.scale(self, x=1.0, y=1.0)\n\n        (float=1, float=1) -> None\n        DEPRECATED! Use scaleXY\n        Scale the point coordinates by the given factors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point2D_11scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scale (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scale") < 0)) __PYX_ERR(24, 109, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scale", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(24, 109, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_10scale(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_10scale(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("scale", 0);

  /* "include/Point2D.pyx":115
 *         Scale the point coordinates by the given factors.
 *         """
 *         self.p2ptr().scaleXY(x, y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 115, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 115, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(24, 115, __pyx_L1_error)
  try {
    __pyx_t_1->scaleXY(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(24, 115, __pyx_L1_error)
  }

  /* "include/Point2D.pyx":109
 * 
 *     # TODO: remove
 *     def scale(self, x=1.0, y=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float=1, float=1) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point2D.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":118
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Point2D(x=%g, y=%g)>' % (self.x, self.y)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_12__repr__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_12__repr__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Point2D.pyx":119
 * 
 *     def __repr__(self):
 *         return '<Point2D(x=%g, y=%g)>' % (self.x, self.y)             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Point2D self, Point2D other, int op):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(24, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(24, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_Point2D_x_g_y_g, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(24, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Point2D.pyx":118
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Point2D(x=%g, y=%g)>' % (self.x, self.y)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point2D.pyx":121
 *         return '<Point2D(x=%g, y=%g)>' % (self.x, self.y)
 * 
 *     def __richcmp__(Point2D self, Point2D other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0:
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point2D_15__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point2D_15__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Point2D, 1, "self", 0))) __PYX_ERR(24, 121, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Point2D, 1, "other", 0))) __PYX_ERR(24, 121, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Point2D_14__richcmp__(((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_other), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point2D_14__richcmp__(struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point2D *__pyx_t_1;
  YODA::Point2D *__pyx_t_2;
  bool __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "include/Point2D.pyx":122
 * 
 *     def __richcmp__(Point2D self, Point2D other, int op):
 *         if op == 0:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 *         elif op == 1:
 */
  switch (__pyx_v_op) {
    case 0:

    /* "include/Point2D.pyx":123
 *     def __richcmp__(Point2D self, Point2D other, int op):
 *         if op == 0:
 *             return deref(self.p2ptr()) < deref(other.p2ptr())             # <<<<<<<<<<<<<<
 *         elif op == 1:
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 123, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(24, 123, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_1) < (*__pyx_t_2));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(24, 123, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_1) < (*__pyx_t_2));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point2D.pyx":122
 * 
 *     def __richcmp__(Point2D self, Point2D other, int op):
 *         if op == 0:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 *         elif op == 1:
 */
    break;

    /* "include/Point2D.pyx":124
 *         if op == 0:
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())
 *         elif op == 2:
 */
    case 1:

    /* "include/Point2D.pyx":125
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 *         elif op == 1:
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())             # <<<<<<<<<<<<<<
 *         elif op == 2:
 *             return deref(self.p2ptr()) == deref(other.p2ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(24, 125, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 125, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_2) <= (*__pyx_t_1));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(24, 125, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_2) <= (*__pyx_t_1));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point2D.pyx":124
 *         if op == 0:
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())
 *         elif op == 2:
 */
    break;

    /* "include/Point2D.pyx":126
 *         elif op == 1:
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) == deref(other.p2ptr())
 *         elif op == 3:
 */
    case 2:

    /* "include/Point2D.pyx":127
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())
 *         elif op == 2:
 *             return deref(self.p2ptr()) == deref(other.p2ptr())             # <<<<<<<<<<<<<<
 *         elif op == 3:
 *             return deref(self.p2ptr()) != deref(other.p2ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 127, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(24, 127, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_1) == (*__pyx_t_2));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(24, 127, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_1) == (*__pyx_t_2));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point2D.pyx":126
 *         elif op == 1:
 *             return deref(self.p2ptr()) <= deref(other.p2ptr())
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) == deref(other.p2ptr())
 *         elif op == 3:
 */
    break;

    /* "include/Point2D.pyx":128
 *         elif op == 2:
 *             return deref(self.p2ptr()) == deref(other.p2ptr())
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) != deref(other.p2ptr())
 *         elif op == 4:
 */
    case 3:

    /* "include/Point2D.pyx":129
 *             return deref(self.p2ptr()) == deref(other.p2ptr())
 *         elif op == 3:
 *             return deref(self.p2ptr()) != deref(other.p2ptr())             # <<<<<<<<<<<<<<
 *         elif op == 4:
 *             return deref(self.p2ptr()) > deref(other.p2ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(24, 129, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 129, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_2) != (*__pyx_t_1));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(24, 129, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_2) != (*__pyx_t_1));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point2D.pyx":128
 *         elif op == 2:
 *             return deref(self.p2ptr()) == deref(other.p2ptr())
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) != deref(other.p2ptr())
 *         elif op == 4:
 */
    break;

    /* "include/Point2D.pyx":130
 *         elif op == 3:
 *             return deref(self.p2ptr()) != deref(other.p2ptr())
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) > deref(other.p2ptr())
 *         elif op == 5:
 */
    case 4:

    /* "include/Point2D.pyx":131
 *             return deref(self.p2ptr()) != deref(other.p2ptr())
 *         elif op == 4:
 *             return deref(self.p2ptr()) > deref(other.p2ptr())             # <<<<<<<<<<<<<<
 *         elif op == 5:
 *             return deref(self.p2ptr()) >= deref(other.p2ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 131, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(24, 131, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_1) > (*__pyx_t_2));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(24, 131, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_1) > (*__pyx_t_2));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point2D.pyx":130
 *         elif op == 3:
 *             return deref(self.p2ptr()) != deref(other.p2ptr())
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) > deref(other.p2ptr())
 *         elif op == 5:
 */
    break;

    /* "include/Point2D.pyx":132
 *         elif op == 4:
 *             return deref(self.p2ptr()) > deref(other.p2ptr())
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) >= deref(other.p2ptr())
 */
    case 5:

    /* "include/Point2D.pyx":133
 *             return deref(self.p2ptr()) > deref(other.p2ptr())
 *         elif op == 5:
 *             return deref(self.p2ptr()) >= deref(other.p2ptr())             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(24, 133, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(24, 133, __pyx_L1_error)
    try {
      __pyx_t_3 = ((*__pyx_t_2) >= (*__pyx_t_1));
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(24, 133, __pyx_L1_error)
    }
    __pyx_t_3 = ((*__pyx_t_2) >= (*__pyx_t_1));
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(24, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "include/Point2D.pyx":132
 *         elif op == 4:
 *             return deref(self.p2ptr()) > deref(other.p2ptr())
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return deref(self.p2ptr()) >= deref(other.p2ptr())
 */
    break;
    default: break;
  }

  /* "include/Point2D.pyx":121
 *         return '<Point2D(x=%g, y=%g)>' % (self.x, self.y)
 * 
 *     def __richcmp__(Point2D self, Point2D other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0:
 *             return deref(self.p2ptr()) < deref(other.p2ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point2D.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":6
 *     """
 * 
 *     cdef c.Point3D* p3ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point3D*> self.ptr()
 * 
 */

static YODA::Point3D *__pyx_f_4yoda_4core_7Point3D_p3ptr(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  YODA::Point3D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("p3ptr", 0);

  /* "include/Point3D.pyx":7
 * 
 *     cdef c.Point3D* p3ptr(self) except NULL:
 *         return <c.Point3D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 7, __pyx_L1_error)
  __pyx_r = ((YODA::Point3D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Point3D.pyx":6
 *     """
 * 
 *     cdef c.Point3D* p3ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Point3D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.p3ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":10
 * 
 * 
 *     def __init__(self, x=0, y=0, z=0, xerrs=0, yerrs=0, zerrs=0):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Point3D())
 *         self.xyz = x, y, z
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_xerrs = 0;
  PyObject *__pyx_v_yerrs = 0;
  PyObject *__pyx_v_zerrs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_xerrs,&__pyx_n_s_yerrs,&__pyx_n_s_zerrs,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[0] = ((PyObject *)__pyx_int_0);
    values[1] = ((PyObject *)__pyx_int_0);
    values[2] = ((PyObject *)__pyx_int_0);
    values[3] = ((PyObject *)__pyx_int_0);
    values[4] = ((PyObject *)__pyx_int_0);
    values[5] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xerrs);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yerrs);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_zerrs);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(25, 10, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
    __pyx_v_xerrs = values[3];
    __pyx_v_yerrs = values[4];
    __pyx_v_zerrs = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(25, 10, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D___init__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_xerrs, __pyx_v_yerrs, __pyx_v_zerrs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D___init__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs, PyObject *__pyx_v_zerrs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Point3D.pyx":11
 * 
 *     def __init__(self, x=0, y=0, z=0, xerrs=0, yerrs=0, zerrs=0):
 *         cutil.set_owned_ptr(self, new c.Point3D())             # <<<<<<<<<<<<<<
 *         self.xyz = x, y, z
 *         self.xErrs = xerrs
 */
  try {
    __pyx_t_1 = new YODA::Point3D();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 11, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Point3D.pyx":12
 *     def __init__(self, x=0, y=0, z=0, xerrs=0, yerrs=0, zerrs=0):
 *         cutil.set_owned_ptr(self, new c.Point3D())
 *         self.xyz = x, y, z             # <<<<<<<<<<<<<<
 *         self.xErrs = xerrs
 *         self.yErrs = yerrs
 */
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_y);
  __Pyx_INCREF(__pyx_v_z);
  __Pyx_GIVEREF(__pyx_v_z);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_z);
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xyz, __pyx_t_2) < 0) __PYX_ERR(25, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Point3D.pyx":13
 *         cutil.set_owned_ptr(self, new c.Point3D())
 *         self.xyz = x, y, z
 *         self.xErrs = xerrs             # <<<<<<<<<<<<<<
 *         self.yErrs = yerrs
 *         self.zErrs = zerrs
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_xErrs, __pyx_v_xerrs) < 0) __PYX_ERR(25, 13, __pyx_L1_error)

  /* "include/Point3D.pyx":14
 *         self.xyz = x, y, z
 *         self.xErrs = xerrs
 *         self.yErrs = yerrs             # <<<<<<<<<<<<<<
 *         self.zErrs = zerrs
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_yErrs, __pyx_v_yerrs) < 0) __PYX_ERR(25, 14, __pyx_L1_error)

  /* "include/Point3D.pyx":15
 *         self.xErrs = xerrs
 *         self.yErrs = yerrs
 *         self.zErrs = zerrs             # <<<<<<<<<<<<<<
 * 
 *     def copy(self):
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_zErrs, __pyx_v_zerrs) < 0) __PYX_ERR(25, 15, __pyx_L1_error)

  /* "include/Point3D.pyx":10
 * 
 * 
 *     def __init__(self, x=0, y=0, z=0, xerrs=0, yerrs=0, zerrs=0):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Point3D())
 *         self.xyz = x, y, z
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point3D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":17
 *         self.zErrs = zerrs
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Point3D, new c.Point3D(deref(self.p3ptr())))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_3copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_7Point3D_2copy[] = "Point3D.copy(self)";
static PyObject *__pyx_pw_4yoda_4core_7Point3D_3copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_2copy(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_2copy(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  YODA::Point3D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "include/Point3D.pyx":18
 * 
 *     def copy(self):
 *         return cutil.new_owned_cls(Point3D, new c.Point3D(deref(self.p3ptr())))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 18, __pyx_L1_error)
  try {
    __pyx_t_2 = new YODA::Point3D((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 18, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point3D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":17
 *         self.zErrs = zerrs
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Point3D, new c.Point3D(deref(self.p3ptr())))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":23
 *     property x:
 *         """x coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().x()
 *         def __set__(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_1x_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_1x___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_1x___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":24
 *         """x coordinate"""
 *         def __get__(self):
 *             return self.p3ptr().x()             # <<<<<<<<<<<<<<
 *         def __set__(self, x):
 *             self.p3ptr().setX(x)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 24, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->x();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 24, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":23
 *     property x:
 *         """x coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().x()
 *         def __set__(self, x):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":25
 *         def __get__(self):
 *             return self.p3ptr().x()
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setX(x)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_1x_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_1x_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":26
 *             return self.p3ptr().x()
 *         def __set__(self, x):
 *             self.p3ptr().setX(x)             # <<<<<<<<<<<<<<
 * 
 *     property y:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 26, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 26, __pyx_L1_error)
  try {
    __pyx_t_1->setX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 26, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":25
 *         def __get__(self):
 *             return self.p3ptr().x()
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setX(x)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":30
 *     property y:
 *         """y coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().y()
 *         def __set__(self, y):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_1y_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_1y___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_1y___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":31
 *         """y coordinate"""
 *         def __get__(self):
 *             return self.p3ptr().y()             # <<<<<<<<<<<<<<
 *         def __set__(self, y):
 *             self.p3ptr().setY(y)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 31, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->y();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 31, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":30
 *     property y:
 *         """y coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().y()
 *         def __set__(self, y):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":32
 *         def __get__(self):
 *             return self.p3ptr().y()
 *         def __set__(self, y):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setY(y)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_1y_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_1y_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":33
 *             return self.p3ptr().y()
 *         def __set__(self, y):
 *             self.p3ptr().setY(y)             # <<<<<<<<<<<<<<
 * 
 *     property z:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 33, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 33, __pyx_L1_error)
  try {
    __pyx_t_1->setY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 33, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":32
 *         def __get__(self):
 *             return self.p3ptr().y()
 *         def __set__(self, y):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setY(y)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":37
 *     property z:
 *         """y coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().z()
 *         def __set__(self, z):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_1z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_1z_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_1z___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_1z___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":38
 *         """y coordinate"""
 *         def __get__(self):
 *             return self.p3ptr().z()             # <<<<<<<<<<<<<<
 *         def __set__(self, z):
 *             self.p3ptr().setZ(z)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 38, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->z();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 38, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":37
 *     property z:
 *         """y coordinate"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().z()
 *         def __set__(self, z):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":39
 *         def __get__(self):
 *             return self.p3ptr().z()
 *         def __set__(self, z):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setZ(z)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_1z_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_1z_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_z) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":40
 *             return self.p3ptr().z()
 *         def __set__(self, z):
 *             self.p3ptr().setZ(z)             # <<<<<<<<<<<<<<
 * 
 *     property xyz:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 40, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 40, __pyx_L1_error)
  try {
    __pyx_t_1->setZ(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 40, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":39
 *         def __get__(self):
 *             return self.p3ptr().z()
 *         def __set__(self, z):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setZ(z)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":43
 * 
 *     property xyz:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.XYZ(self.x, self.y, self.z)
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_3xyz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_3xyz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_3xyz___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_3xyz___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":44
 *     property xyz:
 *         def __get__(self):
 *             return util.XYZ(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.x, self.y, self.z = val
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_XYZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_z); if (unlikely(!__pyx_t_5)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":43
 * 
 *     property xyz:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.XYZ(self.x, self.y, self.z)
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Point3D.xyz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":45
 *         def __get__(self):
 *             return util.XYZ(self.x, self.y, self.z)
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.x, self.y, self.z = val
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_3xyz_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_3xyz_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_3xyz_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_3xyz_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":46
 *             return util.XYZ(self.x, self.y, self.z)
 *         def __set__(self, val):
 *             self.x, self.y, self.z = val             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_val))) || (PyList_CheckExact(__pyx_v_val))) {
    PyObject* sequence = __pyx_v_val;
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(25, 46, __pyx_L1_error)
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_4 = PyObject_GetIter(__pyx_v_val); if (unlikely(!__pyx_t_4)) __PYX_ERR(25, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 2; __pyx_t_3 = __pyx_t_5(__pyx_t_4); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_5(__pyx_t_4), 3) < 0) __PYX_ERR(25, 46, __pyx_L1_error)
    __pyx_t_5 = NULL;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(25, 46, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x, __pyx_t_1) < 0) __PYX_ERR(25, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y, __pyx_t_2) < 0) __PYX_ERR(25, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_z, __pyx_t_3) < 0) __PYX_ERR(25, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "include/Point3D.pyx":45
 *         def __get__(self):
 *             return util.XYZ(self.x, self.y, self.z)
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.x, self.y, self.z = val
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point3D.xyz.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":51
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 *     property xErrs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p3ptr().xErrs())
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5xErrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5xErrs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_5xErrs___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_5xErrs___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point3D *__pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":52
 *     property xErrs:
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().xErrs())             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.p3ptr().setXErrs(util.read_symmetric(val))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(25, 52, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->xErrs();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 52, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 52, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(25, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":51
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 *     property xErrs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p3ptr().xErrs())
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point3D.xErrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":53
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().xErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setXErrs(util.read_symmetric(val))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_5xErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_5xErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_5xErrs_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_5xErrs_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::pair<double,double>  __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":54
 *             return util.read_error_pair(self.p3ptr().xErrs())
 *         def __set__(self, val):
 *             self.p3ptr().setXErrs(util.read_symmetric(val))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 54, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read_symmetric); if (unlikely(!__pyx_t_4)) __PYX_ERR(25, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 54, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(25, 54, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 54, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_pair_from_py_double__and_double(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(25, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setXErrs(__pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 54, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":53
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().xErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setXErrs(util.read_symmetric(val))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point3D.xErrs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":58
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 *     property yErrs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p3ptr().yErrs())
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5yErrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5yErrs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_5yErrs___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_5yErrs___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point3D *__pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":59
 *     property yErrs:
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().yErrs())             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.p3ptr().setYErrs(util.read_symmetric(val))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(25, 59, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->yErrs();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 59, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 59, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(25, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":58
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 *     property yErrs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p3ptr().yErrs())
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point3D.yErrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":60
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().yErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setYErrs(util.read_symmetric(val))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_5yErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_5yErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_5yErrs_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_5yErrs_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::pair<double,double>  __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":61
 *             return util.read_error_pair(self.p3ptr().yErrs())
 *         def __set__(self, val):
 *             self.p3ptr().setYErrs(util.read_symmetric(val))             # <<<<<<<<<<<<<<
 * 
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 61, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read_symmetric); if (unlikely(!__pyx_t_4)) __PYX_ERR(25, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(25, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_pair_from_py_double__and_double(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(25, 61, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setYErrs(__pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 61, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":60
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().yErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setYErrs(util.read_symmetric(val))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point3D.yErrs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":65
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 *     property zErrs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p3ptr().zErrs())
 *         def __set__(self, val):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5zErrs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5zErrs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_5zErrs___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_5zErrs___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  YODA::Point3D *__pyx_t_4;
  std::pair<double,double>  __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":66
 *     property zErrs:
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().zErrs())             # <<<<<<<<<<<<<<
 *         def __set__(self, val):
 *             self.p3ptr().setZErrs(util.read_symmetric(val))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read_error_pair); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_4 == NULL)) __PYX_ERR(25, 66, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_t_4->zErrs();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 66, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_pair_to_py_double____double(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 66, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(25, 66, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 66, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":65
 *     # TODO: How does this fit into the multi-error API? Still useful, but just reports first errs... how to get _all_ +- err pairs?
 *     property zErrs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return util.read_error_pair(self.p3ptr().zErrs())
 *         def __set__(self, val):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Point3D.zErrs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":67
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().zErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setZErrs(util.read_symmetric(val))
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_7Point3D_5zErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pw_4yoda_4core_7Point3D_5zErrs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_5zErrs_2__set__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_7Point3D_5zErrs_2__set__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  std::pair<double,double>  __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "include/Point3D.pyx":68
 *             return util.read_error_pair(self.p3ptr().zErrs())
 *         def __set__(self, val):
 *             self.p3ptr().setZErrs(util.read_symmetric(val))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 68, __pyx_L1_error)
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read_symmetric); if (unlikely(!__pyx_t_4)) __PYX_ERR(25, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_val); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(25, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_val);
    __Pyx_GIVEREF(__pyx_v_val);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_val);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __pyx_convert_pair_from_py_double__and_double(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(25, 68, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  try {
    __pyx_t_1->setZErrs(__pyx_t_6);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 68, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":67
 *         def __get__(self):
 *             return util.read_error_pair(self.p3ptr().zErrs())
 *         def __set__(self, val):             # <<<<<<<<<<<<<<
 *             self.p3ptr().setZErrs(util.read_symmetric(val))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point3D.zErrs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":72
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p3ptr().xMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4xMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4xMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4xMin___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4xMin___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":74
 *     def xMin(self):
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p3ptr().xMin()             # <<<<<<<<<<<<<<
 *     @property
 *     def xMax(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 74, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 74, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":72
 * 
 *     @property
 *     def xMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum x position, i.e. lowest error"""
 *         return self.p3ptr().xMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.xMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":76
 *         return self.p3ptr().xMin()
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum x position, i.e. highest error"""
 *         return self.p3ptr().xMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4xMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4xMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4xMax___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4xMax___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":78
 *     def xMax(self):
 *         """The maximum x position, i.e. highest error"""
 *         return self.p3ptr().xMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 78, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->xMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 78, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":76
 *         return self.p3ptr().xMin()
 *     @property
 *     def xMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum x position, i.e. highest error"""
 *         return self.p3ptr().xMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.xMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":81
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum y position, i.e. lowest error"""
 *         return self.p3ptr().yMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4yMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4yMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4yMin___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4yMin___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":83
 *     def yMin(self):
 *         """The minimum y position, i.e. lowest error"""
 *         return self.p3ptr().yMin()             # <<<<<<<<<<<<<<
 *     @property
 *     def yMax(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 83, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 83, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":81
 * 
 *     @property
 *     def yMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum y position, i.e. lowest error"""
 *         return self.p3ptr().yMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.yMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":85
 *         return self.p3ptr().yMin()
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum y position, i.e. highest error"""
 *         return self.p3ptr().yMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4yMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4yMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4yMax___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4yMax___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":87
 *     def yMax(self):
 *         """The maximum y position, i.e. highest error"""
 *         return self.p3ptr().yMax()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 87, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->yMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 87, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":85
 *         return self.p3ptr().yMin()
 *     @property
 *     def yMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum y position, i.e. highest error"""
 *         return self.p3ptr().yMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.yMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":90
 * 
 *     @property
 *     def zMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum z position, i.e. lowest error"""
 *         return self.p3ptr().zMin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4zMin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4zMin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4zMin___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4zMin___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":92
 *     def zMin(self):
 *         """The minimum z position, i.e. lowest error"""
 *         return self.p3ptr().zMin()             # <<<<<<<<<<<<<<
 *     @property
 *     def zMax(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 92, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->zMin();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 92, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":90
 * 
 *     @property
 *     def zMin(self):             # <<<<<<<<<<<<<<
 *         """The minimum z position, i.e. lowest error"""
 *         return self.p3ptr().zMin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.zMin.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":94
 *         return self.p3ptr().zMin()
 *     @property
 *     def zMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum z position, i.e. highest error"""
 *         return self.p3ptr().zMax()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4zMax_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_4zMax_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4zMax___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4zMax___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":96
 *     def zMax(self):
 *         """The maximum z position, i.e. highest error"""
 *         return self.p3ptr().zMax()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 96, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->zMax();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 96, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":94
 *         return self.p3ptr().zMin()
 *     @property
 *     def zMax(self):             # <<<<<<<<<<<<<<
 *         """The maximum z position, i.e. highest error"""
 *         return self.p3ptr().zMax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.zMax.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":100
 * 
 *     property xErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().xErrAvg()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7xErrAvg_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7xErrAvg_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_7xErrAvg___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_7xErrAvg___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":101
 *     property xErrAvg:
 *         def __get__(self):
 *             return self.p3ptr().xErrAvg()             # <<<<<<<<<<<<<<
 * 
 *     property yErrAvg:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 101, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->xErrAvg()); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":100
 * 
 *     property xErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().xErrAvg()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point3D.xErrAvg.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":104
 * 
 *     property yErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().yErrAvg()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7yErrAvg_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7yErrAvg_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_7yErrAvg___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_7yErrAvg___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":105
 *     property yErrAvg:
 *         def __get__(self):
 *             return self.p3ptr().yErrAvg()             # <<<<<<<<<<<<<<
 * 
 *     property zErrAvg:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 105, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->yErrAvg()); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":104
 * 
 *     property yErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().yErrAvg()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point3D.yErrAvg.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":108
 * 
 *     property zErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().zErrAvg()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7zErrAvg_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7zErrAvg_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_7zErrAvg___get__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_7zErrAvg___get__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Point3D.pyx":109
 *     property zErrAvg:
 *         def __get__(self):
 *             return self.p3ptr().zErrAvg()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 109, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->zErrAvg()); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":108
 * 
 *     property zErrAvg:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p3ptr().zErrAvg()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Point3D.zErrAvg.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":112
 * 
 * 
 *     def scaleX(self, ax):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_ax); /*proto*/
static char __pyx_doc_4yoda_4core_7Point3D_4scaleX[] = "Point3D.scaleX(self, ax)\n\n        (float) -> None\n        Scale the x point coordinates by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point3D_5scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_ax) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_4scaleX(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_ax));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_4scaleX(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ax) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Point3D.pyx":117
 *         Scale the x point coordinates by the given factor.
 *         """
 *         self.p3ptr().scaleX(ax)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, ay):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 117, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ax); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 117, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 117, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":112
 * 
 * 
 *     def scaleX(self, ax):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":119
 *         self.p3ptr().scaleX(ax)
 * 
 *     def scaleY(self, ay):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_ay); /*proto*/
static char __pyx_doc_4yoda_4core_7Point3D_6scaleY[] = "Point3D.scaleY(self, ay)\n\n        (float) -> None\n        Scale the y point coordinates by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point3D_7scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_ay) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_6scaleY(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_ay));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_6scaleY(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ay) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Point3D.pyx":124
 *         Scale the y point coordinates by the given factor.
 *         """
 *         self.p3ptr().scaleY(ay)             # <<<<<<<<<<<<<<
 * 
 *     def scaleZ(self, az):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 124, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ay); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 124, __pyx_L1_error)
  try {
    __pyx_t_1->scaleY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 124, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":119
 *         self.p3ptr().scaleX(ax)
 * 
 *     def scaleY(self, ay):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":126
 *         self.p3ptr().scaleY(ay)
 * 
 *     def scaleZ(self, az):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_9scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_v_az); /*proto*/
static char __pyx_doc_4yoda_4core_7Point3D_8scaleZ[] = "Point3D.scaleZ(self, az)\n\n        (float) -> None\n        Scale the z point coordinates by the given factor.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point3D_9scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_v_az) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleZ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_8scaleZ(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((PyObject *)__pyx_v_az));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_8scaleZ(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_az) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleZ", 0);

  /* "include/Point3D.pyx":131
 *         Scale the z point coordinates by the given factor.
 *         """
 *         self.p3ptr().scaleZ(az)             # <<<<<<<<<<<<<<
 * 
 *     def scaleXYZ(self, ax=1.0, ay=1.0, az=1.0):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 131, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_az); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 131, __pyx_L1_error)
  try {
    __pyx_t_1->scaleZ(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 131, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":126
 *         self.p3ptr().scaleY(ay)
 * 
 *     def scaleZ(self, az):             # <<<<<<<<<<<<<<
 *         """
 *         (float) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.scaleZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":133
 *         self.p3ptr().scaleZ(az)
 * 
 *     def scaleXYZ(self, ax=1.0, ay=1.0, az=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float=1.0, float=1.0, float=1.0) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_11scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Point3D_10scaleXYZ[] = "Point3D.scaleXYZ(self, ax=1.0, ay=1.0, az=1.0)\n\n        (float=1.0, float=1.0, float=1.0) -> None\n        Scale the point coordinates by the given factors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point3D_11scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ax = 0;
  PyObject *__pyx_v_ay = 0;
  PyObject *__pyx_v_az = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXYZ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ax,&__pyx_n_s_ay,&__pyx_n_s_az,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)__pyx_float_1_0);
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ax);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ay);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_az);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXYZ") < 0)) __PYX_ERR(25, 133, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ax = values[0];
    __pyx_v_ay = values[1];
    __pyx_v_az = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXYZ", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(25, 133, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_10scaleXYZ(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), __pyx_v_ax, __pyx_v_ay, __pyx_v_az);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_10scaleXYZ(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  __Pyx_RefNannySetupContext("scaleXYZ", 0);

  /* "include/Point3D.pyx":138
 *         Scale the point coordinates by the given factors.
 *         """
 *         self.p3ptr().scaleXYZ(ax, ay, az)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: remove
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 138, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ax); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 138, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_ay); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 138, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_az); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(25, 138, __pyx_L1_error)
  try {
    __pyx_t_1->scaleXYZ(__pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(25, 138, __pyx_L1_error)
  }

  /* "include/Point3D.pyx":133
 *         self.p3ptr().scaleZ(az)
 * 
 *     def scaleXYZ(self, ax=1.0, ay=1.0, az=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (float=1.0, float=1.0, float=1.0) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":141
 * 
 *     # TODO: remove
 *     def scaleXYZ(self, ax=1.0, ay=1.0, az=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (double=1.0, double=1.0, double=1.0) -> None
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_13scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_7Point3D_12scaleXYZ[] = "Point3D.scaleXYZ(self, ax=1.0, ay=1.0, az=1.0)\n\n        (double=1.0, double=1.0, double=1.0) -> None\n        DEPRECATED: USE scaleXYZ\n        Scale the point coordinates by the given factors.\n        ";
static PyObject *__pyx_pw_4yoda_4core_7Point3D_13scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ax = 0;
  PyObject *__pyx_v_ay = 0;
  PyObject *__pyx_v_az = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXYZ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ax,&__pyx_n_s_ay,&__pyx_n_s_az,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)__pyx_float_1_0);
    values[2] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ax);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ay);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_az);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXYZ") < 0)) __PYX_ERR(25, 141, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ax = values[0];
    __pyx_v_ay = values[1];
    __pyx_v_az = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXYZ", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(25, 141, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Point3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_12scaleXYZ(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), __pyx_v_ax, __pyx_v_ay, __pyx_v_az);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_12scaleXYZ(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("scaleXYZ", 0);

  /* "include/Point3D.pyx":147
 *         Scale the point coordinates by the given factors.
 *         """
 *         self.scaleXYZ(ax, ay, az)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_scaleXYZ); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(25, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_ax);
  __Pyx_GIVEREF(__pyx_v_ax);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_ax);
  __Pyx_INCREF(__pyx_v_ay);
  __Pyx_GIVEREF(__pyx_v_ay);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_ay);
  __Pyx_INCREF(__pyx_v_az);
  __Pyx_GIVEREF(__pyx_v_az);
  PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, __pyx_v_az);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Point3D.pyx":141
 * 
 *     # TODO: remove
 *     def scaleXYZ(self, ax=1.0, ay=1.0, az=1.0):             # <<<<<<<<<<<<<<
 *         """
 *         (double=1.0, double=1.0, double=1.0) -> None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Point3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":153
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Point3D(x=%g, y=%g, z=%g)>' % (self.x, self.y, self.z)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_15__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_15__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_14__repr__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_14__repr__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Point3D.pyx":154
 * 
 *     def __repr__(self):
 *         return '<Point3D(x=%g, y=%g, z=%g)>' % (self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Point3D self, Point3D other, int op):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(25, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(25, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_z); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(25, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_Point3D_x_g_y_g_z_g, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Point3D.pyx":153
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Point3D(x=%g, y=%g, z=%g)>' % (self.x, self.y, self.z)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Point3D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Point3D.pyx":156
 *         return '<Point3D(x=%g, y=%g, z=%g)>' % (self.x, self.y, self.z)
 * 
 *     def __richcmp__(Point3D self, Point3D other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0:
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7Point3D_17__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_7Point3D_17__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_4yoda_4core_Point3D, 1, "self", 0))) __PYX_ERR(25, 156, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_4yoda_4core_Point3D, 1, "other", 0))) __PYX_ERR(25, 156, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_7Point3D_16__richcmp__(((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_other), ((int)__pyx_v_op));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_7Point3D_16__richcmp__(struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_other, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Point3D *__pyx_t_1;
  YODA::Point3D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__", 0);

  /* "include/Point3D.pyx":157
 * 
 *     def __richcmp__(Point3D self, Point3D other, int op):
 *         if op == 0:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 *         elif op == 1:
 */
  switch (__pyx_v_op) {
    case 0:

    /* "include/Point3D.pyx":158
 *     def __richcmp__(Point3D self, Point3D other, int op):
 *         if op == 0:
 *             return deref(self.p3ptr()) < deref(other.p3ptr())             # <<<<<<<<<<<<<<
 *         elif op == 1:
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 158, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(25, 158, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyBool_FromLong(((*__pyx_t_1) < (*__pyx_t_2))); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "include/Point3D.pyx":157
 * 
 *     def __richcmp__(Point3D self, Point3D other, int op):
 *         if op == 0:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 *         elif op == 1:
 */
    break;

    /* "include/Point3D.pyx":159
 *         if op == 0:
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())
 *         elif op == 2:
 */
    case 1:

    /* "include/Point3D.pyx":160
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 *         elif op == 1:
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())             # <<<<<<<<<<<<<<
 *         elif op == 2:
 *             return deref(self.p3ptr()) == deref(other.p3ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(25, 160, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 160, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyBool_FromLong(((*__pyx_t_2) <= (*__pyx_t_1))); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "include/Point3D.pyx":159
 *         if op == 0:
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())
 *         elif op == 2:
 */
    break;

    /* "include/Point3D.pyx":161
 *         elif op == 1:
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) == deref(other.p3ptr())
 *         elif op == 3:
 */
    case 2:

    /* "include/Point3D.pyx":162
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())
 *         elif op == 2:
 *             return deref(self.p3ptr()) == deref(other.p3ptr())             # <<<<<<<<<<<<<<
 *         elif op == 3:
 *             return deref(self.p3ptr()) != deref(other.p3ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 162, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(25, 162, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyBool_FromLong(((*__pyx_t_1) == (*__pyx_t_2))); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "include/Point3D.pyx":161
 *         elif op == 1:
 *             return deref(self.p3ptr()) <= deref(other.p3ptr())
 *         elif op == 2:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) == deref(other.p3ptr())
 *         elif op == 3:
 */
    break;

    /* "include/Point3D.pyx":163
 *         elif op == 2:
 *             return deref(self.p3ptr()) == deref(other.p3ptr())
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) != deref(other.p3ptr())
 *         elif op == 4:
 */
    case 3:

    /* "include/Point3D.pyx":164
 *             return deref(self.p3ptr()) == deref(other.p3ptr())
 *         elif op == 3:
 *             return deref(self.p3ptr()) != deref(other.p3ptr())             # <<<<<<<<<<<<<<
 *         elif op == 4:
 *             return deref(self.p3ptr()) > deref(other.p3ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(25, 164, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 164, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyBool_FromLong(((*__pyx_t_2) != (*__pyx_t_1))); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "include/Point3D.pyx":163
 *         elif op == 2:
 *             return deref(self.p3ptr()) == deref(other.p3ptr())
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) != deref(other.p3ptr())
 *         elif op == 4:
 */
    break;

    /* "include/Point3D.pyx":165
 *         elif op == 3:
 *             return deref(self.p3ptr()) != deref(other.p3ptr())
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) > deref(other.p3ptr())
 *         elif op == 5:
 */
    case 4:

    /* "include/Point3D.pyx":166
 *             return deref(self.p3ptr()) != deref(other.p3ptr())
 *         elif op == 4:
 *             return deref(self.p3ptr()) > deref(other.p3ptr())             # <<<<<<<<<<<<<<
 *         elif op == 5:
 *             return deref(self.p3ptr()) >= deref(other.p3ptr())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 166, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_other); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(25, 166, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyBool_FromLong(((*__pyx_t_1) > (*__pyx_t_2))); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "include/Point3D.pyx":165
 *         elif op == 3:
 *             return deref(self.p3ptr()) != deref(other.p3ptr())
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) > deref(other.p3ptr())
 *         elif op == 5:
 */
    break;

    /* "include/Point3D.pyx":167
 *         elif op == 4:
 *             return deref(self.p3ptr()) > deref(other.p3ptr())
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) >= deref(other.p3ptr())
 */
    case 5:

    /* "include/Point3D.pyx":168
 *             return deref(self.p3ptr()) > deref(other.p3ptr())
 *         elif op == 5:
 *             return deref(self.p3ptr()) >= deref(other.p3ptr())             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(25, 168, __pyx_L1_error)
    __pyx_t_1 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_other->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_other); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(25, 168, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyBool_FromLong(((*__pyx_t_2) >= (*__pyx_t_1))); if (unlikely(!__pyx_t_3)) __PYX_ERR(25, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "include/Point3D.pyx":167
 *         elif op == 4:
 *             return deref(self.p3ptr()) > deref(other.p3ptr())
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return deref(self.p3ptr()) >= deref(other.p3ptr())
 */
    break;
    default: break;
  }

  /* "include/Point3D.pyx":156
 *         return '<Point3D(x=%g, y=%g, z=%g)>' % (self.x, self.y, self.z)
 * 
 *     def __richcmp__(Point3D self, Point3D other, int op):             # <<<<<<<<<<<<<<
 *         if op == 0:
 *             return deref(self.p3ptr()) < deref(other.p3ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Point3D.__richcmp__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":17
 *     """
 * 
 *     cdef inline c.Scatter1D* s1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Scatter1D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Scatter1D *__pyx_f_4yoda_4core_9Scatter1D_s1ptr(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  YODA::Scatter1D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("s1ptr", 0);

  /* "include/Scatter1D.pyx":18
 * 
 *     cdef inline c.Scatter1D* s1ptr(self) except NULL:
 *         return <c.Scatter1D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 18, __pyx_L1_error)
  __pyx_r = ((YODA::Scatter1D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":17
 *     """
 * 
 *     cdef inline c.Scatter1D* s1ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Scatter1D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.s1ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":21
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_9Scatter1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_9Scatter1D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D___init__(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_9Scatter1D___init__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Scatter1D.pyx":22
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init_2(self, char* path="", char* title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_args); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "include/Scatter1D.pyx":21
 * 
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":24
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 *     def __init_2(self, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Scatter1D(string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_3__init_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_2__init_2[] = "Scatter1D.__init_2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_3__init_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init_2") < 0)) __PYX_ERR(1, 24, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(1, 24, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(1, 24, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 24, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.__init_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_2__init_2(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_2__init_2(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Scatter1D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init_2", 0);

  /* "include/Scatter1D.pyx":25
 * 
 *     def __init_2(self, char* path="", char* title=""):
 *         cutil.set_owned_ptr(self, new c.Scatter1D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init_3(self, points, char* path="", char* title=""):
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 25, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 25, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Scatter1D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 25, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Scatter1D.pyx":24
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 *     def __init_2(self, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Scatter1D(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__init_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":27
 *         cutil.set_owned_ptr(self, new c.Scatter1D(string(path), string(title)))
 * 
 *     def __init_3(self, points, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         self.__init_2(path, title)
 *         self.addPoints(points)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_5__init_3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_4__init_3[] = "Scatter1D.__init_3(self, points, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_5__init_3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_points = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_points,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_points)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init_3") < 0)) __PYX_ERR(1, 27, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_points = values[0];
    if (values[1]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(1, 27, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[2]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(1, 27, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_3", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 27, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.__init_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_4__init_3(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), __pyx_v_points, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_4__init_3(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_points, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__init_3", 0);

  /* "include/Scatter1D.pyx":28
 * 
 *     def __init_3(self, points, char* path="", char* title=""):
 *         self.__init_2(path, title)             # <<<<<<<<<<<<<<
 *         self.addPoints(points)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_title); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter1D.pyx":29
 *     def __init_3(self, points, char* path="", char* title=""):
 *         self.__init_2(path, title)
 *         self.addPoints(points)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoints); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_points); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 29, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 29, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_INCREF(__pyx_v_points);
    __Pyx_GIVEREF(__pyx_v_points);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_points);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 29, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter1D.pyx":27
 *         cutil.set_owned_ptr(self, new c.Scatter1D(string(path), string(title)))
 * 
 *     def __init_3(self, points, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         self.__init_2(path, title)
 *         self.addPoints(points)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__init_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":31
 *         self.addPoints(points)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """() -> Scatter1D.
 *         Clone this Scatter1D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_6clone[] = "Scatter1D.clone(self)\n() -> Scatter1D.\n        Clone this Scatter1D.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_6clone(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_6clone(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter1D *__pyx_t_1;
  YODA::Scatter1D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Scatter1D.pyx":34
 *         """() -> Scatter1D.
 *         Clone this Scatter1D."""
 *         return cutil.new_owned_cls(Scatter1D, self.s1ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 34, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 34, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter1D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":31
 *         self.addPoints(points)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """() -> Scatter1D.
 *         Clone this Scatter1D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter1D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":36
 *         return cutil.new_owned_cls(Scatter1D, self.s1ptr().newclone())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_9__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_9__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_8__repr__(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_8__repr__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Scatter1D.pyx":37
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_points); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_points, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":36
 *         return cutil.new_owned_cls(Scatter1D, self.s1ptr().newclone())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":41
 * 
 *     @property
 *     def numPoints(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of points in this scatter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_9numPoints_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_9numPoints_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_9numPoints___get__(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_9numPoints___get__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter1D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Scatter1D.pyx":44
 *         """() -> int
 *         Number of points in this scatter."""
 *         return self.s1ptr().numPoints()             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 44, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numPoints();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 44, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":41
 * 
 *     @property
 *     def numPoints(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of points in this scatter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter1D.numPoints.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":46
 *         return self.s1ptr().numPoints()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.numPoints
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_9Scatter1D_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4yoda_4core_9Scatter1D_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_10__len__(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_9Scatter1D_10__len__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Scatter1D.pyx":47
 * 
 *     def __len__(self):
 *         return self.numPoints             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numPoints); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(1, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":46
 *         return self.s1ptr().numPoints()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.numPoints
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":51
 * 
 *     @property
 *     def points(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_6points_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_6points_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_6points___get__(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_6points___get__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Scatter1D.pyx":53
 *     def points(self):
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]             # <<<<<<<<<<<<<<
 * 
 *     def point(self, size_t i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numPoints); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 53, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 53, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 53, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_5(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 53, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_point); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 53, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_v_i);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(1, 53, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":51
 * 
 *     @property
 *     def points(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Scatter1D.points.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":55
 *         return [self.point(i) for i in xrange(self.numPoints)]
 * 
 *     def point(self, size_t i):             # <<<<<<<<<<<<<<
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_13point(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_12point[] = "Scatter1D.point(self, size_t i)\nAccess the i'th point.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_13point(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("point (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_size_t(__pyx_arg_i); if (unlikely((__pyx_v_i == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(1, 55, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_12point(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((size_t)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_12point(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, size_t __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter1D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("point", 0);

  /* "include/Scatter1D.pyx":57
 *     def point(self, size_t i):
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, py_ix):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 57, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point1D), (&__pyx_t_1->point(__pyx_v_i)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":55
 *         return [self.point(i) for i in xrange(self.numPoints)]
 * 
 *     def point(self, size_t i):             # <<<<<<<<<<<<<<
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Scatter1D.point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":59
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s1ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_14__getitem__(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((PyObject *)__pyx_v_py_ix));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_14__getitem__(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Scatter1D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Scatter1D.pyx":60
 * 
 *     def __getitem__(self, py_ix):
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s1ptr().numPoints())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_py_ix); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 60, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(1, 60, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numPoints();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 60, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_4 == 0 && PyErr_Occurred())) __PYX_ERR(1, 60, __pyx_L1_error)
  __pyx_v_i = __pyx_t_4;

  /* "include/Scatter1D.pyx":61
 *     def __getitem__(self, py_ix):
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s1ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(1, 61, __pyx_L1_error)
  __pyx_t_5 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point1D), (&__pyx_t_2->point(__pyx_v_i)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":59
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s1ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point1D, &self.s1ptr().point(i), self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":64
 * 
 * 
 *     def addPoint(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Add a new point.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_17addPoint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_16addPoint[] = "Scatter1D.addPoint(self, *args, **kwargs)\nAdd a new point.\n\n        Provide either a single yoda.Point1D object, or the\n        two args: x, xerrs=0.\n        ";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_17addPoint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addPoint (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "addPoint", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_16addPoint(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_16addPoint(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("addPoint", 0);

  /* "include/Scatter1D.pyx":70
 *         two args: x, xerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Scatter1D.pyx":71
 *         """
 *         try:
 *             self.__addPoint_point(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         except TypeError:
 *             self.__addPoint_explicit(*args, **kwargs)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_point); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 71, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 71, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "include/Scatter1D.pyx":70
 *         two args: x, xerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Scatter1D.pyx":72
 *         try:
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:             # <<<<<<<<<<<<<<
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 */
    __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_6) {
      __Pyx_AddTraceback("yoda.core.Scatter1D.addPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(1, 72, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_7);

      /* "include/Scatter1D.pyx":73
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 *             self.__addPoint_explicit(*args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __addPoint_explicit(self, x, xerrs=0):
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_explicit); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 73, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 73, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "include/Scatter1D.pyx":70
 *         two args: x, xerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Scatter1D.pyx":64
 * 
 * 
 *     def addPoint(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Add a new point.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Scatter1D.addPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":75
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 *     def __addPoint_explicit(self, x, xerrs=0):             # <<<<<<<<<<<<<<
 *         self.__addPoint_point(Point1D(x, xerrs))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_19__addPoint_explicit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_18__addPoint_explicit[] = "Scatter1D.__addPoint_explicit(self, x, xerrs=0)";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_19__addPoint_explicit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_xerrs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addPoint_explicit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_xerrs,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xerrs);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__addPoint_explicit") < 0)) __PYX_ERR(1, 75, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_xerrs = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__addPoint_explicit", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 75, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.__addPoint_explicit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_18__addPoint_explicit(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), __pyx_v_x, __pyx_v_xerrs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_18__addPoint_explicit(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_xerrs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__addPoint_explicit", 0);

  /* "include/Scatter1D.pyx":76
 * 
 *     def __addPoint_explicit(self, x, xerrs=0):
 *         self.__addPoint_point(Point1D(x, xerrs))             # <<<<<<<<<<<<<<
 * 
 *     def __addPoint_point(self, Point1D p):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_xerrs);
  __Pyx_GIVEREF(__pyx_v_xerrs);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_xerrs);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Point1D), __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 76, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter1D.pyx":75
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 *     def __addPoint_explicit(self, x, xerrs=0):             # <<<<<<<<<<<<<<
 *         self.__addPoint_point(Point1D(x, xerrs))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter1D.__addPoint_explicit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":78
 *         self.__addPoint_point(Point1D(x, xerrs))
 * 
 *     def __addPoint_point(self, Point1D p):             # <<<<<<<<<<<<<<
 *         self.s1ptr().addPoint(p.p1ptr()[0])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_21__addPoint_point(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_20__addPoint_point[] = "Scatter1D.__addPoint_point(self, Point1D p)";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_21__addPoint_point(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addPoint_point (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_4yoda_4core_Point1D, 1, "p", 0))) __PYX_ERR(1, 78, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_20__addPoint_point(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Point1D *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_20__addPoint_point(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point1D *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter1D *__pyx_t_1;
  YODA::Point1D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__addPoint_point", 0);

  /* "include/Scatter1D.pyx":79
 * 
 *     def __addPoint_point(self, Point1D p):
 *         self.s1ptr().addPoint(p.p1ptr()[0])             # <<<<<<<<<<<<<<
 * 
 *     def addPoints(self, iterable):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 79, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point1D *)__pyx_v_p->__pyx_base.__pyx_base.__pyx_vtab)->p1ptr(__pyx_v_p); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(1, 79, __pyx_L1_error)
  __pyx_t_1->addPoint((__pyx_t_2[0]));

  /* "include/Scatter1D.pyx":78
 *         self.__addPoint_point(Point1D(x, xerrs))
 * 
 *     def __addPoint_point(self, Point1D p):             # <<<<<<<<<<<<<<
 *         self.s1ptr().addPoint(p.p1ptr()[0])
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.__addPoint_point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":81
 *         self.s1ptr().addPoint(p.p1ptr()[0])
 * 
 *     def addPoints(self, iterable):             # <<<<<<<<<<<<<<
 *         """Add several new points."""
 *         for row in iterable:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_23addPoints(PyObject *__pyx_v_self, PyObject *__pyx_v_iterable); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_22addPoints[] = "Scatter1D.addPoints(self, iterable)\nAdd several new points.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_23addPoints(PyObject *__pyx_v_self, PyObject *__pyx_v_iterable) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addPoints (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_22addPoints(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((PyObject *)__pyx_v_iterable));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_22addPoints(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_iterable) {
  PyObject *__pyx_v_row = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("addPoints", 0);

  /* "include/Scatter1D.pyx":83
 *     def addPoints(self, iterable):
 *         """Add several new points."""
 *         for row in iterable:             # <<<<<<<<<<<<<<
 *             self.addPoint(*row)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_iterable)) || PyTuple_CheckExact(__pyx_v_iterable)) {
    __pyx_t_1 = __pyx_v_iterable; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_iterable); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 83, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 83, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 83, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 83, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 83, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 83, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_row, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Scatter1D.pyx":84
 *         """Add several new points."""
 *         for row in iterable:
 *             self.addPoint(*row)             # <<<<<<<<<<<<<<
 * 
 *     def combineWith(self, others):
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PySequence_Tuple(__pyx_v_row); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "include/Scatter1D.pyx":83
 *     def addPoints(self, iterable):
 *         """Add several new points."""
 *         for row in iterable:             # <<<<<<<<<<<<<<
 *             self.addPoint(*row)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter1D.pyx":81
 *         self.s1ptr().addPoint(p.p1ptr()[0])
 * 
 *     def addPoints(self, iterable):             # <<<<<<<<<<<<<<
 *         """Add several new points."""
 *         for row in iterable:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Scatter1D.addPoints", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_row);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":86
 *             self.addPoint(*row)
 * 
 *     def combineWith(self, others):             # <<<<<<<<<<<<<<
 *         """Try to add points from other Scatter1Ds into this one."""
 *         cdef Scatter1D other
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_25combineWith(PyObject *__pyx_v_self, PyObject *__pyx_v_others); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_24combineWith[] = "Scatter1D.combineWith(self, others)\nTry to add points from other Scatter1Ds into this one.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_25combineWith(PyObject *__pyx_v_self, PyObject *__pyx_v_others) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("combineWith (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_24combineWith(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((PyObject *)__pyx_v_others));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_24combineWith(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_others) {
  struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_other = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  YODA::Scatter1D *__pyx_t_5;
  YODA::Scatter1D *__pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  __Pyx_RefNannySetupContext("combineWith", 0);

  /* "include/Scatter1D.pyx":89
 *         """Try to add points from other Scatter1Ds into this one."""
 *         cdef Scatter1D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter1D?
 *             other = others
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Scatter1D.pyx":91
 *         try:
 *             # Can we type it as a Scatter1D?
 *             other = others             # <<<<<<<<<<<<<<
 *         except TypeError:
 *             # Could be an iterable...
 */
      if (!(likely(((__pyx_v_others) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_others, __pyx_ptype_4yoda_4core_Scatter1D))))) __PYX_ERR(1, 91, __pyx_L3_error)
      __pyx_t_4 = __pyx_v_others;
      __Pyx_INCREF(__pyx_t_4);
      __pyx_v_other = ((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_t_4);
      __pyx_t_4 = 0;

      /* "include/Scatter1D.pyx":89
 *         """Try to add points from other Scatter1Ds into this one."""
 *         cdef Scatter1D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter1D?
 *             other = others
 */
    }

    /* "include/Scatter1D.pyx":97
 *                 self.s1ptr().combineWith(deref(other.s1ptr()))
 *         else:
 *             self.s1ptr().combineWith(deref(other.s1ptr()))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else:*/ {
      __pyx_t_5 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_5 == NULL)) __PYX_ERR(1, 97, __pyx_L5_except_error)
      __pyx_t_6 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_other); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(1, 97, __pyx_L5_except_error)
      __pyx_t_5->combineWith((*__pyx_t_6));
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "include/Scatter1D.pyx":92
 *             # Can we type it as a Scatter1D?
 *             other = others
 *         except TypeError:             # <<<<<<<<<<<<<<
 *             # Could be an iterable...
 *             for other in others:
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("yoda.core.Scatter1D.combineWith", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_9) < 0) __PYX_ERR(1, 92, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_9);

      /* "include/Scatter1D.pyx":94
 *         except TypeError:
 *             # Could be an iterable...
 *             for other in others:             # <<<<<<<<<<<<<<
 *                 self.s1ptr().combineWith(deref(other.s1ptr()))
 *         else:
 */
      if (likely(PyList_CheckExact(__pyx_v_others)) || PyTuple_CheckExact(__pyx_v_others)) {
        __pyx_t_10 = __pyx_v_others; __Pyx_INCREF(__pyx_t_10); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_v_others); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 94, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = Py_TYPE(__pyx_t_10)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(1, 94, __pyx_L5_except_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_10))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_13 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_11); __Pyx_INCREF(__pyx_t_13); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(1, 94, __pyx_L5_except_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_10, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 94, __pyx_L5_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_11); __Pyx_INCREF(__pyx_t_13); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(1, 94, __pyx_L5_except_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_10, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 94, __pyx_L5_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          }
        } else {
          __pyx_t_13 = __pyx_t_12(__pyx_t_10);
          if (unlikely(!__pyx_t_13)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(1, 94, __pyx_L5_except_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_13);
        }
        if (!(likely(((__pyx_t_13) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_13, __pyx_ptype_4yoda_4core_Scatter1D))))) __PYX_ERR(1, 94, __pyx_L5_except_error)
        __Pyx_XDECREF_SET(__pyx_v_other, ((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_t_13));
        __pyx_t_13 = 0;

        /* "include/Scatter1D.pyx":95
 *             # Could be an iterable...
 *             for other in others:
 *                 self.s1ptr().combineWith(deref(other.s1ptr()))             # <<<<<<<<<<<<<<
 *         else:
 *             self.s1ptr().combineWith(deref(other.s1ptr()))
 */
        __pyx_t_6 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(1, 95, __pyx_L5_except_error)
        __pyx_t_5 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_other); if (unlikely(__pyx_t_5 == NULL)) __PYX_ERR(1, 95, __pyx_L5_except_error)
        __pyx_t_6->combineWith((*__pyx_t_5));

        /* "include/Scatter1D.pyx":94
 *         except TypeError:
 *             # Could be an iterable...
 *             for other in others:             # <<<<<<<<<<<<<<
 *                 self.s1ptr().combineWith(deref(other.s1ptr()))
 *         else:
 */
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "include/Scatter1D.pyx":89
 *         """Try to add points from other Scatter1Ds into this one."""
 *         cdef Scatter1D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter1D?
 *             other = others
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Scatter1D.pyx":86
 *             self.addPoint(*row)
 * 
 *     def combineWith(self, others):             # <<<<<<<<<<<<<<
 *         """Try to add points from other Scatter1Ds into this one."""
 *         cdef Scatter1D other
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yoda.core.Scatter1D.combineWith", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":100
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter1D.
 *         Make a new Scatter1D. Exists to allow mkScatter calls on any AnalysisObject,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_27mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_26mkScatter[] = "Scatter1D.mkScatter(self)\nNone -> Scatter1D.\n        Make a new Scatter1D. Exists to allow mkScatter calls on any AnalysisObject,\n        even if it already is a scatter.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_27mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_26mkScatter(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_26mkScatter(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self) {
  YODA::Scatter1D __pyx_v_s2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter1D *__pyx_t_1;
  YODA::Scatter1D __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Scatter1D.pyx":104
 *         Make a new Scatter1D. Exists to allow mkScatter calls on any AnalysisObject,
 *         even if it already is a scatter."""
 *         cdef c.Scatter1D s2 = c.mkScatter_Scatter1D(deref(self.s1ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter1D, s2.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 104, __pyx_L1_error)
  try {
    __pyx_t_2 = YODA::mkScatter((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 104, __pyx_L1_error)
  }
  __pyx_v_s2 = __pyx_t_2;

  /* "include/Scatter1D.pyx":105
 *         even if it already is a scatter."""
 *         cdef c.Scatter1D s2 = c.mkScatter_Scatter1D(deref(self.s1ptr()))
 *         return cutil.new_owned_cls(Scatter1D, s2.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_s2.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 105, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter1D), __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter1D.pyx":100
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter1D.
 *         Make a new Scatter1D. Exists to allow mkScatter calls on any AnalysisObject,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter1D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":108
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_29scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_28scaleX[] = "Scatter1D.scaleX(self, a)\n(float) -> None\n        Scale the x values and errors of the points in this scatter by factor a.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_29scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_28scaleX(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_28scaleX(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter1D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Scatter1D.pyx":111
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 *         self.s1ptr().scaleX(a)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 111, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 111, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(1, 111, __pyx_L1_error)
  }

  /* "include/Scatter1D.pyx":108
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter1D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter1D.pyx":114
 * 
 * 
 *     def transformX(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_31transformX(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter1D_30transformX[] = "Scatter1D.transformX(self, f)\n(fn) -> None\n        Transform the x values and errors of the points in this scatter by function f.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter1D_31transformX(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transformX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter1D_30transformX(((struct __pyx_obj_4yoda_4core_Scatter1D *)__pyx_v_self), ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter1D_30transformX(struct __pyx_obj_4yoda_4core_Scatter1D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_ctypes = NULL;
  PyObject *__pyx_v_callback = NULL;
  __pyx_t_4yoda_12declarations_dbl_dbl_fptr __pyx_v_fptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  size_t __pyx_t_12;
  YODA::Scatter1D *__pyx_t_13;
  __Pyx_RefNannySetupContext("transformX", 0);

  /* "include/Scatter1D.pyx":117
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes             # <<<<<<<<<<<<<<
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ctypes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Scatter1D.pyx":118
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "include/Scatter1D.pyx":119
 *         import ctypes
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)             # <<<<<<<<<<<<<<
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 119, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 119, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 119, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 119, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
      __pyx_t_7 = 0;
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 119, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 119, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 119, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(__pyx_v_f);
        __Pyx_GIVEREF(__pyx_v_f);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_f);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 119, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_callback = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "include/Scatter1D.pyx":118
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "include/Scatter1D.pyx":120
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Scatter1D.transformX", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(1, 120, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/Scatter1D.pyx":121
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter1D_transformX(deref(self.s1ptr()), fptr)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 121, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(1, 121, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "include/Scatter1D.pyx":118
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "include/Scatter1D.pyx":122
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]             # <<<<<<<<<<<<<<
 *         c.Scatter1D_transformX(deref(self.s1ptr()), fptr)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_addressof); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_callback); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_callback);
    __Pyx_GIVEREF(__pyx_v_callback);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_callback);
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(1, 122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_fptr = (((__pyx_t_4yoda_12declarations_dbl_dbl_fptr *)((size_t)__pyx_t_12))[0]);

  /* "include/Scatter1D.pyx":123
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter1D_transformX(deref(self.s1ptr()), fptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_13 = __pyx_f_4yoda_4core_9Scatter1D_s1ptr(__pyx_v_self); if (unlikely(__pyx_t_13 == NULL)) __PYX_ERR(1, 123, __pyx_L1_error)
  YODA::transformX((*__pyx_t_13), __pyx_v_fptr);

  /* "include/Scatter1D.pyx":114
 * 
 * 
 *     def transformX(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.Scatter1D.transformX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctypes);
  __Pyx_XDECREF(__pyx_v_callback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":17
 *     """
 * 
 *     cdef inline c.Scatter2D* s2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Scatter2D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Scatter2D *__pyx_f_4yoda_4core_9Scatter2D_s2ptr(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  YODA::Scatter2D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("s2ptr", 0);

  /* "include/Scatter2D.pyx":18
 * 
 *     cdef inline c.Scatter2D* s2ptr(self) except NULL:
 *         return <c.Scatter2D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 18, __pyx_L1_error)
  __pyx_r = ((YODA::Scatter2D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":17
 *     """
 * 
 *     cdef inline c.Scatter2D* s2ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Scatter2D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.s2ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":20
 *         return <c.Scatter2D*> self.ptr()
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_9Scatter2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_9Scatter2D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D___init__(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_9Scatter2D___init__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Scatter2D.pyx":21
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init_2(self, char* path="", char* title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_args); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "include/Scatter2D.pyx":20
 *         return <c.Scatter2D*> self.ptr()
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":23
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 *     def __init_2(self, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Scatter2D(string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_3__init_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_2__init_2[] = "Scatter2D.__init_2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_3__init_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init_2") < 0)) __PYX_ERR(26, 23, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(26, 23, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(26, 23, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(26, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.__init_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_2__init_2(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_2__init_2(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Scatter2D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init_2", 0);

  /* "include/Scatter2D.pyx":24
 * 
 *     def __init_2(self, char* path="", char* title=""):
 *         cutil.set_owned_ptr(self, new c.Scatter2D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init_3(self, points, char* path="", char* title=""):
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(26, 24, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(26, 24, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Scatter2D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 24, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Scatter2D.pyx":23
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 *     def __init_2(self, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Scatter2D(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__init_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Scatter2D(string(path), string(title)))
 * 
 *     def __init_3(self, points, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         self.__init_2(path, title)
 *         self.addPoints(points)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_5__init_3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_4__init_3[] = "Scatter2D.__init_3(self, points, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_5__init_3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_points = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_points,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_points)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init_3") < 0)) __PYX_ERR(26, 26, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_points = values[0];
    if (values[1]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(26, 26, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[2]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(26, 26, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_3", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(26, 26, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.__init_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_4__init_3(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_points, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_4__init_3(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_points, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__init_3", 0);

  /* "include/Scatter2D.pyx":27
 * 
 *     def __init_3(self, points, char* path="", char* title=""):
 *         self.__init_2(path, title)             # <<<<<<<<<<<<<<
 *         self.addPoints(points)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_title); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(26, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":28
 *     def __init_3(self, points, char* path="", char* title=""):
 *         self.__init_2(path, title)
 *         self.addPoints(points)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoints); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_points); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_INCREF(__pyx_v_points);
    __Pyx_GIVEREF(__pyx_v_points);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_points);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Scatter2D(string(path), string(title)))
 * 
 *     def __init_3(self, points, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         self.__init_2(path, title)
 *         self.addPoints(points)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__init_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":30
 *         self.addPoints(points)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """() -> Scatter2D.
 *         Clone this Scatter2D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_6clone[] = "Scatter2D.clone(self)\n() -> Scatter2D.\n        Clone this Scatter2D.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_6clone(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_6clone(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  YODA::Scatter2D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Scatter2D.pyx":33
 *         """() -> Scatter2D.
 *         Clone this Scatter2D."""
 *         return cutil.new_owned_cls(Scatter2D, self.s2ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 33, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 33, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":30
 *         self.addPoints(points)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """() -> Scatter2D.
 *         Clone this Scatter2D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter2D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":35
 *         return cutil.new_owned_cls(Scatter2D, self.s2ptr().newclone())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_9__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_9__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_8__repr__(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_8__repr__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Scatter2D.pyx":36
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_points); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_points, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":35
 *         return cutil.new_owned_cls(Scatter2D, self.s2ptr().newclone())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":40
 * 
 *     @property
 *     def numPoints(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of points in this scatter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_9numPoints_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_9numPoints_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_9numPoints___get__(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_9numPoints___get__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Scatter2D.pyx":43
 *         """() -> int
 *         Number of points in this scatter."""
 *         return self.s2ptr().numPoints()             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 43, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numPoints();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 43, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":40
 * 
 *     @property
 *     def numPoints(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of points in this scatter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter2D.numPoints.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":45
 *         return self.s2ptr().numPoints()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.numPoints
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_9Scatter2D_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4yoda_4core_9Scatter2D_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_10__len__(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_9Scatter2D_10__len__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Scatter2D.pyx":46
 * 
 *     def __len__(self):
 *         return self.numPoints             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numPoints); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(26, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":45
 *         return self.s2ptr().numPoints()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.numPoints
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":50
 * 
 *     @property
 *     def points(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_6points_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_6points_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_6points___get__(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_6points___get__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Scatter2D.pyx":52
 *     def points(self):
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]             # <<<<<<<<<<<<<<
 * 
 *     def point(self, size_t i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numPoints); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 52, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(26, 52, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 52, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(26, 52, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 52, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_5(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(26, 52, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_point); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(26, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_v_i);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(26, 52, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":50
 * 
 *     @property
 *     def points(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Scatter2D.points.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":54
 *         return [self.point(i) for i in xrange(self.numPoints)]
 * 
 *     def point(self, size_t i):             # <<<<<<<<<<<<<<
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_13point(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_12point[] = "Scatter2D.point(self, size_t i)\nAccess the i'th point.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_13point(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("point (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_size_t(__pyx_arg_i); if (unlikely((__pyx_v_i == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(26, 54, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_12point(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((size_t)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_12point(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, size_t __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("point", 0);

  /* "include/Scatter2D.pyx":56
 *     def point(self, size_t i):
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, py_ix):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 56, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point2D), (&__pyx_t_1->point(__pyx_v_i)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":54
 *         return [self.point(i) for i in xrange(self.numPoints)]
 * 
 *     def point(self, size_t i):             # <<<<<<<<<<<<<<
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Scatter2D.point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":58
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s2ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_14__getitem__(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_py_ix));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_14__getitem__(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Scatter2D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Scatter2D.pyx":59
 * 
 *     def __getitem__(self, py_ix):
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s2ptr().numPoints())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_py_ix); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(26, 59, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(26, 59, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numPoints();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 59, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_4 == 0 && PyErr_Occurred())) __PYX_ERR(26, 59, __pyx_L1_error)
  __pyx_v_i = __pyx_t_4;

  /* "include/Scatter2D.pyx":60
 *     def __getitem__(self, py_ix):
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s2ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(26, 60, __pyx_L1_error)
  __pyx_t_5 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point2D), (&__pyx_t_2->point(__pyx_v_i)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":58
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s2ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point2D, &self.s2ptr().point(i), self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":63
 * 
 * 
 *     def addPoint(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Add a new point.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_17addPoint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_16addPoint[] = "Scatter2D.addPoint(self, *args, **kwargs)\nAdd a new point.\n\n        Provide either a single yoda.Point2D object, or the\n        four args: x, y, xerrs=0, yerrs=0.\n        ";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_17addPoint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addPoint (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "addPoint", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_16addPoint(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_16addPoint(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("addPoint", 0);

  /* "include/Scatter2D.pyx":69
 *         four args: x, y, xerrs=0, yerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Scatter2D.pyx":70
 *         """
 *         try:
 *             self.__addPoint_point(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         except TypeError:
 *             self.__addPoint_explicit(*args, **kwargs)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_point); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 70, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 70, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "include/Scatter2D.pyx":69
 *         four args: x, y, xerrs=0, yerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Scatter2D.pyx":71
 *         try:
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:             # <<<<<<<<<<<<<<
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 */
    __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_6) {
      __Pyx_AddTraceback("yoda.core.Scatter2D.addPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(26, 71, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_7);

      /* "include/Scatter2D.pyx":72
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 *             self.__addPoint_explicit(*args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __addPoint_explicit(self, x, y, xerrs=0, yerrs=0):
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_explicit); if (unlikely(!__pyx_t_8)) __PYX_ERR(26, 72, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_9)) __PYX_ERR(26, 72, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "include/Scatter2D.pyx":69
 *         four args: x, y, xerrs=0, yerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Scatter2D.pyx":63
 * 
 * 
 *     def addPoint(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Add a new point.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Scatter2D.addPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":74
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 *     def __addPoint_explicit(self, x, y, xerrs=0, yerrs=0):             # <<<<<<<<<<<<<<
 *         self.__addPoint_point(Point2D(x, y, xerrs, yerrs))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_19__addPoint_explicit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_18__addPoint_explicit[] = "Scatter2D.__addPoint_explicit(self, x, y, xerrs=0, yerrs=0)";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_19__addPoint_explicit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_xerrs = 0;
  PyObject *__pyx_v_yerrs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addPoint_explicit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_xerrs,&__pyx_n_s_yerrs,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = ((PyObject *)__pyx_int_0);
    values[3] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__addPoint_explicit", 0, 2, 4, 1); __PYX_ERR(26, 74, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xerrs);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yerrs);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__addPoint_explicit") < 0)) __PYX_ERR(26, 74, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_xerrs = values[2];
    __pyx_v_yerrs = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__addPoint_explicit", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(26, 74, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.__addPoint_explicit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_18__addPoint_explicit(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_xerrs, __pyx_v_yerrs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_18__addPoint_explicit(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__addPoint_explicit", 0);

  /* "include/Scatter2D.pyx":75
 * 
 *     def __addPoint_explicit(self, x, y, xerrs=0, yerrs=0):
 *         self.__addPoint_point(Point2D(x, y, xerrs, yerrs))             # <<<<<<<<<<<<<<
 * 
 *     def __addPoint_point(self, Point2D p):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_y);
  __Pyx_INCREF(__pyx_v_xerrs);
  __Pyx_GIVEREF(__pyx_v_xerrs);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_xerrs);
  __Pyx_INCREF(__pyx_v_yerrs);
  __Pyx_GIVEREF(__pyx_v_yerrs);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_yerrs);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Point2D), __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 75, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":74
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 *     def __addPoint_explicit(self, x, y, xerrs=0, yerrs=0):             # <<<<<<<<<<<<<<
 *         self.__addPoint_point(Point2D(x, y, xerrs, yerrs))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter2D.__addPoint_explicit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":77
 *         self.__addPoint_point(Point2D(x, y, xerrs, yerrs))
 * 
 *     def __addPoint_point(self, Point2D p):             # <<<<<<<<<<<<<<
 *         self.s2ptr().addPoint(p.p2ptr()[0])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_21__addPoint_point(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_20__addPoint_point[] = "Scatter2D.__addPoint_point(self, Point2D p)";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_21__addPoint_point(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addPoint_point (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_4yoda_4core_Point2D, 1, "p", 0))) __PYX_ERR(26, 77, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_20__addPoint_point(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Point2D *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_20__addPoint_point(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point2D *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  YODA::Point2D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__addPoint_point", 0);

  /* "include/Scatter2D.pyx":78
 * 
 *     def __addPoint_point(self, Point2D p):
 *         self.s2ptr().addPoint(p.p2ptr()[0])             # <<<<<<<<<<<<<<
 * 
 *     def addPoints(self, iterable):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 78, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point2D *)__pyx_v_p->__pyx_base.__pyx_base.__pyx_vtab)->p2ptr(__pyx_v_p); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(26, 78, __pyx_L1_error)
  __pyx_t_1->addPoint((__pyx_t_2[0]));

  /* "include/Scatter2D.pyx":77
 *         self.__addPoint_point(Point2D(x, y, xerrs, yerrs))
 * 
 *     def __addPoint_point(self, Point2D p):             # <<<<<<<<<<<<<<
 *         self.s2ptr().addPoint(p.p2ptr()[0])
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.__addPoint_point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":80
 *         self.s2ptr().addPoint(p.p2ptr()[0])
 * 
 *     def addPoints(self, iterable):             # <<<<<<<<<<<<<<
 *         """Add several new points."""
 *         for row in iterable:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_23addPoints(PyObject *__pyx_v_self, PyObject *__pyx_v_iterable); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_22addPoints[] = "Scatter2D.addPoints(self, iterable)\nAdd several new points.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_23addPoints(PyObject *__pyx_v_self, PyObject *__pyx_v_iterable) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addPoints (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_22addPoints(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_iterable));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_22addPoints(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_iterable) {
  PyObject *__pyx_v_row = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("addPoints", 0);

  /* "include/Scatter2D.pyx":82
 *     def addPoints(self, iterable):
 *         """Add several new points."""
 *         for row in iterable:             # <<<<<<<<<<<<<<
 *             self.addPoint(*row)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_iterable)) || PyTuple_CheckExact(__pyx_v_iterable)) {
    __pyx_t_1 = __pyx_v_iterable; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_iterable); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 82, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(26, 82, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(26, 82, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(26, 82, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_row, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Scatter2D.pyx":83
 *         """Add several new points."""
 *         for row in iterable:
 *             self.addPoint(*row)             # <<<<<<<<<<<<<<
 * 
 *     def combineWith(self, others):
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint); if (unlikely(!__pyx_t_4)) __PYX_ERR(26, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PySequence_Tuple(__pyx_v_row); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "include/Scatter2D.pyx":82
 *     def addPoints(self, iterable):
 *         """Add several new points."""
 *         for row in iterable:             # <<<<<<<<<<<<<<
 *             self.addPoint(*row)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":80
 *         self.s2ptr().addPoint(p.p2ptr()[0])
 * 
 *     def addPoints(self, iterable):             # <<<<<<<<<<<<<<
 *         """Add several new points."""
 *         for row in iterable:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Scatter2D.addPoints", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_row);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":85
 *             self.addPoint(*row)
 * 
 *     def combineWith(self, others):             # <<<<<<<<<<<<<<
 *         """Try to add points from other Scatter2Ds into this one."""
 *         cdef Scatter2D other
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_25combineWith(PyObject *__pyx_v_self, PyObject *__pyx_v_others); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_24combineWith[] = "Scatter2D.combineWith(self, others)\nTry to add points from other Scatter2Ds into this one.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_25combineWith(PyObject *__pyx_v_self, PyObject *__pyx_v_others) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("combineWith (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_24combineWith(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_others));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_24combineWith(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_others) {
  struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_other = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  YODA::Scatter2D *__pyx_t_5;
  YODA::Scatter2D *__pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  __Pyx_RefNannySetupContext("combineWith", 0);

  /* "include/Scatter2D.pyx":88
 *         """Try to add points from other Scatter2Ds into this one."""
 *         cdef Scatter2D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter2D?
 *             other = others
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Scatter2D.pyx":90
 *         try:
 *             # Can we type it as a Scatter2D?
 *             other = others             # <<<<<<<<<<<<<<
 *         except TypeError:
 *             # Could be an iterable...
 */
      if (!(likely(((__pyx_v_others) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_others, __pyx_ptype_4yoda_4core_Scatter2D))))) __PYX_ERR(26, 90, __pyx_L3_error)
      __pyx_t_4 = __pyx_v_others;
      __Pyx_INCREF(__pyx_t_4);
      __pyx_v_other = ((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_t_4);
      __pyx_t_4 = 0;

      /* "include/Scatter2D.pyx":88
 *         """Try to add points from other Scatter2Ds into this one."""
 *         cdef Scatter2D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter2D?
 *             other = others
 */
    }

    /* "include/Scatter2D.pyx":96
 *                 self.s2ptr().combineWith(deref(other.s2ptr()))
 *         else:
 *             self.s2ptr().combineWith(deref(other.s2ptr()))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else:*/ {
      __pyx_t_5 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_5 == NULL)) __PYX_ERR(26, 96, __pyx_L5_except_error)
      __pyx_t_6 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_other); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(26, 96, __pyx_L5_except_error)
      __pyx_t_5->combineWith((*__pyx_t_6));
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "include/Scatter2D.pyx":91
 *             # Can we type it as a Scatter2D?
 *             other = others
 *         except TypeError:             # <<<<<<<<<<<<<<
 *             # Could be an iterable...
 *             for other in others:
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("yoda.core.Scatter2D.combineWith", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_9) < 0) __PYX_ERR(26, 91, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_9);

      /* "include/Scatter2D.pyx":93
 *         except TypeError:
 *             # Could be an iterable...
 *             for other in others:             # <<<<<<<<<<<<<<
 *                 self.s2ptr().combineWith(deref(other.s2ptr()))
 *         else:
 */
      if (likely(PyList_CheckExact(__pyx_v_others)) || PyTuple_CheckExact(__pyx_v_others)) {
        __pyx_t_10 = __pyx_v_others; __Pyx_INCREF(__pyx_t_10); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_v_others); if (unlikely(!__pyx_t_10)) __PYX_ERR(26, 93, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = Py_TYPE(__pyx_t_10)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(26, 93, __pyx_L5_except_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_10))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_13 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_11); __Pyx_INCREF(__pyx_t_13); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(26, 93, __pyx_L5_except_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_10, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_13)) __PYX_ERR(26, 93, __pyx_L5_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_11); __Pyx_INCREF(__pyx_t_13); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(26, 93, __pyx_L5_except_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_10, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_13)) __PYX_ERR(26, 93, __pyx_L5_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          }
        } else {
          __pyx_t_13 = __pyx_t_12(__pyx_t_10);
          if (unlikely(!__pyx_t_13)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(26, 93, __pyx_L5_except_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_13);
        }
        if (!(likely(((__pyx_t_13) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_13, __pyx_ptype_4yoda_4core_Scatter2D))))) __PYX_ERR(26, 93, __pyx_L5_except_error)
        __Pyx_XDECREF_SET(__pyx_v_other, ((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_t_13));
        __pyx_t_13 = 0;

        /* "include/Scatter2D.pyx":94
 *             # Could be an iterable...
 *             for other in others:
 *                 self.s2ptr().combineWith(deref(other.s2ptr()))             # <<<<<<<<<<<<<<
 *         else:
 *             self.s2ptr().combineWith(deref(other.s2ptr()))
 */
        __pyx_t_6 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(26, 94, __pyx_L5_except_error)
        __pyx_t_5 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_other); if (unlikely(__pyx_t_5 == NULL)) __PYX_ERR(26, 94, __pyx_L5_except_error)
        __pyx_t_6->combineWith((*__pyx_t_5));

        /* "include/Scatter2D.pyx":93
 *         except TypeError:
 *             # Could be an iterable...
 *             for other in others:             # <<<<<<<<<<<<<<
 *                 self.s2ptr().combineWith(deref(other.s2ptr()))
 *         else:
 */
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "include/Scatter2D.pyx":88
 *         """Try to add points from other Scatter2Ds into this one."""
 *         cdef Scatter2D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter2D?
 *             other = others
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Scatter2D.pyx":85
 *             self.addPoint(*row)
 * 
 *     def combineWith(self, others):             # <<<<<<<<<<<<<<
 *         """Try to add points from other Scatter2Ds into this one."""
 *         cdef Scatter2D other
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yoda.core.Scatter2D.combineWith", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":99
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 *         Make a new Scatter2D. Exists to allow mkScatter calls on any AnalysisObject,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_27mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_26mkScatter[] = "Scatter2D.mkScatter(self)\nNone -> Scatter2D.\n        Make a new Scatter2D. Exists to allow mkScatter calls on any AnalysisObject,\n        even if it already is a scatter.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_27mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_26mkScatter(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_26mkScatter(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self) {
  YODA::Scatter2D __pyx_v_s2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  YODA::Scatter2D __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Scatter2D.pyx":103
 *         Make a new Scatter2D. Exists to allow mkScatter calls on any AnalysisObject,
 *         even if it already is a scatter."""
 *         cdef c.Scatter2D s2 = c.mkScatter_Scatter2D(deref(self.s2ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 103, __pyx_L1_error)
  try {
    __pyx_t_2 = YODA::mkScatter((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 103, __pyx_L1_error)
  }
  __pyx_v_s2 = __pyx_t_2;

  /* "include/Scatter2D.pyx":104
 *         even if it already is a scatter."""
 *         cdef c.Scatter2D s2 = c.mkScatter_Scatter2D(deref(self.s2ptr()))
 *         return cutil.new_owned_cls(Scatter2D, s2.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_s2.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 104, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter2D), __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(26, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter2D.pyx":99
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter2D.
 *         Make a new Scatter2D. Exists to allow mkScatter calls on any AnalysisObject,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter2D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":107
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_29scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_28scaleX[] = "Scatter2D.scaleX(self, a)\n(float) -> None\n        Scale the x values and errors of the points in this scatter by factor a.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_29scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_28scaleX(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_28scaleX(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Scatter2D.pyx":110
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 *         self.s2ptr().scaleX(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, a):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 110, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(26, 110, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 110, __pyx_L1_error)
  }

  /* "include/Scatter2D.pyx":107
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":112
 *         self.s2ptr().scaleX(a)
 * 
 *     def scaleY(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the y values and errors of the points in this scatter by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_31scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_30scaleY[] = "Scatter2D.scaleY(self, a)\n(float) -> None\n        Scale the y values and errors of the points in this scatter by factor a.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_31scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_30scaleY(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_30scaleY(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Scatter2D.pyx":115
 *         """(float) -> None
 *         Scale the y values and errors of the points in this scatter by factor a."""
 *         self.s2ptr().scaleY(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleXY(self, ax=1.0, ay=1.0):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 115, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(26, 115, __pyx_L1_error)
  try {
    __pyx_t_1->scaleY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 115, __pyx_L1_error)
  }

  /* "include/Scatter2D.pyx":112
 *         self.s2ptr().scaleX(a)
 * 
 *     def scaleY(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the y values and errors of the points in this scatter by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":117
 *         self.s2ptr().scaleY(a)
 * 
 *     def scaleXY(self, ax=1.0, ay=1.0):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1) -> None
 *         Scale the values and errors of the points in this scatter by factors ax, ay."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_33scaleXY(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_32scaleXY[] = "Scatter2D.scaleXY(self, ax=1.0, ay=1.0)\n(float=1, float=1) -> None\n        Scale the values and errors of the points in this scatter by factors ax, ay.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_33scaleXY(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ax = 0;
  PyObject *__pyx_v_ay = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXY (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ax,&__pyx_n_s_ay,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ax);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ay);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXY") < 0)) __PYX_ERR(26, 117, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ax = values[0];
    __pyx_v_ay = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXY", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(26, 117, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.scaleXY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_32scaleXY(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_ax, __pyx_v_ay);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_32scaleXY(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter2D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  __Pyx_RefNannySetupContext("scaleXY", 0);

  /* "include/Scatter2D.pyx":120
 *         """(float=1, float=1) -> None
 *         Scale the values and errors of the points in this scatter by factors ax, ay."""
 *         self.s2ptr().scaleXY(ax, ay)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: remove
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(26, 120, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ax); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(26, 120, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_ay); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(26, 120, __pyx_L1_error)
  try {
    __pyx_t_1->scaleXY(__pyx_t_2, __pyx_t_3);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(26, 120, __pyx_L1_error)
  }

  /* "include/Scatter2D.pyx":117
 *         self.s2ptr().scaleY(a)
 * 
 *     def scaleXY(self, ax=1.0, ay=1.0):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1) -> None
 *         Scale the values and errors of the points in this scatter by factors ax, ay."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.scaleXY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":123
 * 
 *     # TODO: remove
 *     def scale(self, ax=1.0, ay=1.0):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1) -> None
 *         DEPRECATED: USE scaleXY
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_35scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_34scale[] = "Scatter2D.scale(self, ax=1.0, ay=1.0)\n(float=1, float=1) -> None\n        DEPRECATED: USE scaleXY\n        Scale the values and errors of the points in this scatter by factors ax, ay.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_35scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ax = 0;
  PyObject *__pyx_v_ay = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scale (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ax,&__pyx_n_s_ay,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)__pyx_float_1_0);
    values[1] = ((PyObject *)__pyx_float_1_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ax);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ay);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scale") < 0)) __PYX_ERR(26, 123, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ax = values[0];
    __pyx_v_ay = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scale", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(26, 123, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter2D.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_34scale(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), __pyx_v_ax, __pyx_v_ay);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_34scale(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("scale", 0);

  /* "include/Scatter2D.pyx":127
 *         DEPRECATED: USE scaleXY
 *         Scale the values and errors of the points in this scatter by factors ax, ay."""
 *         self.scaleXY(ax, ay)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_scaleXY); if (unlikely(!__pyx_t_2)) __PYX_ERR(26, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_ax);
  __Pyx_GIVEREF(__pyx_v_ax);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_ax);
  __Pyx_INCREF(__pyx_v_ay);
  __Pyx_GIVEREF(__pyx_v_ay);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_ay);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":123
 * 
 *     # TODO: remove
 *     def scale(self, ax=1.0, ay=1.0):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1) -> None
 *         DEPRECATED: USE scaleXY
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter2D.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":130
 * 
 * 
 *     def transformX(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_37transformX(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_36transformX[] = "Scatter2D.transformX(self, f)\n(fn) -> None\n        Transform the x values and errors of the points in this scatter by function f.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_37transformX(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transformX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_36transformX(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_36transformX(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_ctypes = NULL;
  PyObject *__pyx_v_callback = NULL;
  __pyx_t_4yoda_12declarations_dbl_dbl_fptr __pyx_v_fptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  size_t __pyx_t_12;
  YODA::Scatter2D *__pyx_t_13;
  __Pyx_RefNannySetupContext("transformX", 0);

  /* "include/Scatter2D.pyx":133
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes             # <<<<<<<<<<<<<<
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ctypes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":134
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "include/Scatter2D.pyx":135
 *         import ctypes
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)             # <<<<<<<<<<<<<<
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 135, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(26, 135, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_8)) __PYX_ERR(26, 135, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 135, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
      __pyx_t_7 = 0;
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 135, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 135, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 135, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(__pyx_v_f);
        __Pyx_GIVEREF(__pyx_v_f);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_f);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 135, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_callback = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "include/Scatter2D.pyx":134
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "include/Scatter2D.pyx":136
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Scatter2D.transformX", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(26, 136, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/Scatter2D.pyx":137
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter2D_transformX(deref(self.s2ptr()), fptr)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 137, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(26, 137, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "include/Scatter2D.pyx":134
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "include/Scatter2D.pyx":138
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]             # <<<<<<<<<<<<<<
 *         c.Scatter2D_transformX(deref(self.s2ptr()), fptr)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_addressof); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_callback); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_callback);
    __Pyx_GIVEREF(__pyx_v_callback);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_callback);
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(26, 138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_fptr = (((__pyx_t_4yoda_12declarations_dbl_dbl_fptr *)((size_t)__pyx_t_12))[0]);

  /* "include/Scatter2D.pyx":139
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter2D_transformX(deref(self.s2ptr()), fptr)             # <<<<<<<<<<<<<<
 * 
 *     def transformY(self, f):
 */
  __pyx_t_13 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_13 == NULL)) __PYX_ERR(26, 139, __pyx_L1_error)
  YODA::transformX((*__pyx_t_13), __pyx_v_fptr);

  /* "include/Scatter2D.pyx":130
 * 
 * 
 *     def transformX(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.Scatter2D.transformX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctypes);
  __Pyx_XDECREF(__pyx_v_callback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter2D.pyx":141
 *         c.Scatter2D_transformX(deref(self.s2ptr()), fptr)
 * 
 *     def transformY(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the y values and errors of the points in this scatter by function f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_39transformY(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter2D_38transformY[] = "Scatter2D.transformY(self, f)\n(fn) -> None\n        Transform the y values and errors of the points in this scatter by function f.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter2D_39transformY(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transformY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter2D_38transformY(((struct __pyx_obj_4yoda_4core_Scatter2D *)__pyx_v_self), ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter2D_38transformY(struct __pyx_obj_4yoda_4core_Scatter2D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_ctypes = NULL;
  PyObject *__pyx_v_callback = NULL;
  __pyx_t_4yoda_12declarations_dbl_dbl_fptr __pyx_v_fptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  size_t __pyx_t_12;
  YODA::Scatter2D *__pyx_t_13;
  __Pyx_RefNannySetupContext("transformY", 0);

  /* "include/Scatter2D.pyx":144
 *         """(fn) -> None
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes             # <<<<<<<<<<<<<<
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ctypes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Scatter2D.pyx":145
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "include/Scatter2D.pyx":146
 *         import ctypes
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)             # <<<<<<<<<<<<<<
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 146, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(26, 146, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_8)) __PYX_ERR(26, 146, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 146, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
      __pyx_t_7 = 0;
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 146, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 146, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 146, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(__pyx_v_f);
        __Pyx_GIVEREF(__pyx_v_f);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_f);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(26, 146, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_callback = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "include/Scatter2D.pyx":145
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "include/Scatter2D.pyx":147
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Scatter2D.transformY", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(26, 147, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/Scatter2D.pyx":148
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter2D_transformY(deref(self.s2ptr()), fptr)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 148, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(26, 148, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "include/Scatter2D.pyx":145
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "include/Scatter2D.pyx":149
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]             # <<<<<<<<<<<<<<
 *         c.Scatter2D_transformY(deref(self.s2ptr()), fptr)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_addressof); if (unlikely(!__pyx_t_5)) __PYX_ERR(26, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_callback); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(26, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_callback);
    __Pyx_GIVEREF(__pyx_v_callback);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_callback);
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(26, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(26, 149, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_fptr = (((__pyx_t_4yoda_12declarations_dbl_dbl_fptr *)((size_t)__pyx_t_12))[0]);

  /* "include/Scatter2D.pyx":150
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter2D_transformY(deref(self.s2ptr()), fptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_13 = __pyx_f_4yoda_4core_9Scatter2D_s2ptr(__pyx_v_self); if (unlikely(__pyx_t_13 == NULL)) __PYX_ERR(26, 150, __pyx_L1_error)
  YODA::transformY((*__pyx_t_13), __pyx_v_fptr);

  /* "include/Scatter2D.pyx":141
 *         c.Scatter2D_transformX(deref(self.s2ptr()), fptr)
 * 
 *     def transformY(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the y values and errors of the points in this scatter by function f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.Scatter2D.transformY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctypes);
  __Pyx_XDECREF(__pyx_v_callback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":17
 *     """
 * 
 *     cdef inline c.Scatter3D* s3ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Scatter3D*> self.ptr()
 * 
 */

static CYTHON_INLINE YODA::Scatter3D *__pyx_f_4yoda_4core_9Scatter3D_s3ptr(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  YODA::Scatter3D *__pyx_r;
  __Pyx_RefNannyDeclarations
  void *__pyx_t_1;
  __Pyx_RefNannySetupContext("s3ptr", 0);

  /* "include/Scatter3D.pyx":18
 * 
 *     cdef inline c.Scatter3D* s3ptr(self) except NULL:
 *         return <c.Scatter3D*> self.ptr()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  __pyx_t_1 = __pyx_f_4yoda_4util_4Base_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 18, __pyx_L1_error)
  __pyx_r = ((YODA::Scatter3D *)__pyx_t_1);
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":17
 *     """
 * 
 *     cdef inline c.Scatter3D* s3ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         return <c.Scatter3D*> self.ptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.s3ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":20
 *         return <c.Scatter3D*> self.ptr()
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4yoda_4core_9Scatter3D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yoda_4core_9Scatter3D_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D___init__(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yoda_4core_9Scatter3D___init__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "include/Scatter3D.pyx":21
 * 
 *     def __init__(self, *args, **kwargs):
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __init_2(self, char* path="", char* title=""):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_try_loop); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_args); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, __pyx_v_kwargs); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "include/Scatter3D.pyx":20
 *         return <c.Scatter3D*> self.ptr()
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":23
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 *     def __init_2(self, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Scatter3D(string(path), string(title)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_3__init_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_2__init_2[] = "Scatter3D.__init_2(self, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_3__init_2(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init_2") < 0)) __PYX_ERR(27, 23, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[0]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(27, 23, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[1]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(27, 23, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_2", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(27, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.__init_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_2__init_2(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_2__init_2(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  std::string __pyx_t_2;
  YODA::Scatter3D *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init_2", 0);

  /* "include/Scatter3D.pyx":24
 * 
 *     def __init_2(self, char* path="", char* title=""):
 *         cutil.set_owned_ptr(self, new c.Scatter3D(string(path), string(title)))             # <<<<<<<<<<<<<<
 * 
 *     def __init_3(self, points, char* path="", char* title=""):
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_path);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(27, 24, __pyx_L1_error)
  }
  try {
    __pyx_t_2 = std::string(__pyx_v_title);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(27, 24, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = new YODA::Scatter3D(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 24, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_self), __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "include/Scatter3D.pyx":23
 *         util.try_loop([self.__init_2, self.__init_3], *args, **kwargs)
 * 
 *     def __init_2(self, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         cutil.set_owned_ptr(self, new c.Scatter3D(string(path), string(title)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__init_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Scatter3D(string(path), string(title)))
 * 
 *     def __init_3(self, points, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         self.__init_2(path, title)
 *         self.addPoints(points)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_5__init_3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_4__init_3[] = "Scatter3D.__init_3(self, points, char *path='', char *title='')";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_5__init_3(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_points = 0;
  char *__pyx_v_path;
  char *__pyx_v_title;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init_3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_points,&__pyx_n_s_path,&__pyx_n_s_title,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_points)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_path);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_title);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init_3") < 0)) __PYX_ERR(27, 26, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_points = values[0];
    if (values[1]) {
      __pyx_v_path = __Pyx_PyObject_AsString(values[1]); if (unlikely((!__pyx_v_path) && PyErr_Occurred())) __PYX_ERR(27, 26, __pyx_L3_error)
    } else {
      __pyx_v_path = ((char *)((char *)""));
    }
    if (values[2]) {
      __pyx_v_title = __Pyx_PyObject_AsString(values[2]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) __PYX_ERR(27, 26, __pyx_L3_error)
    } else {
      __pyx_v_title = ((char *)((char *)""));
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init_3", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(27, 26, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.__init_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_4__init_3(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_points, __pyx_v_path, __pyx_v_title);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_4__init_3(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_points, char *__pyx_v_path, char *__pyx_v_title) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__init_3", 0);

  /* "include/Scatter3D.pyx":27
 * 
 *     def __init_3(self, points, char* path="", char* title=""):
 *         self.__init_2(path, title)             # <<<<<<<<<<<<<<
 *         self.addPoints(points)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_title); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(27, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":28
 *     def __init_3(self, points, char* path="", char* title=""):
 *         self.__init_2(path, title)
 *         self.addPoints(points)             # <<<<<<<<<<<<<<
 * 
 *     def clone(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoints); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_points); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_INCREF(__pyx_v_points);
    __Pyx_GIVEREF(__pyx_v_points);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_points);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":26
 *         cutil.set_owned_ptr(self, new c.Scatter3D(string(path), string(title)))
 * 
 *     def __init_3(self, points, char* path="", char* title=""):             # <<<<<<<<<<<<<<
 *         self.__init_2(path, title)
 *         self.addPoints(points)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__init_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":30
 *         self.addPoints(points)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """() -> Scatter3D.
 *         Clone this Scatter3D."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_6clone[] = "Scatter3D.clone(self)\n() -> Scatter3D.\n        Clone this Scatter3D.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_7clone(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clone (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_6clone(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_6clone(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  YODA::Scatter3D *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("clone", 0);

  /* "include/Scatter3D.pyx":33
 *         """() -> Scatter3D.
 *         Clone this Scatter3D."""
 *         return cutil.new_owned_cls(Scatter3D, self.s3ptr().newclone())             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 33, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 33, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter3D), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":30
 *         self.addPoints(points)
 * 
 *     def clone(self):             # <<<<<<<<<<<<<<
 *         """() -> Scatter3D.
 *         Clone this Scatter3D."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter3D.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":35
 *         return cutil.new_owned_cls(Scatter3D, self.s3ptr().newclone())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_9__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_9__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_8__repr__(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_8__repr__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "include/Scatter3D.pyx":36
 * 
 *     def __repr__(self):
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_points); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_4 == -1)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_s_s_d_points, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":35
 *         return cutil.new_owned_cls(Scatter3D, self.s3ptr().newclone())
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<%s '%s' %d points>" % (self.__class__.__name__, self.path, len(self.points))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":40
 * 
 *     @property
 *     def numPoints(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of points in this scatter."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_9numPoints_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_9numPoints_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_9numPoints___get__(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_9numPoints___get__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Scatter3D.pyx":43
 *         """() -> int
 *         Number of points in this scatter."""
 *         return self.s3ptr().numPoints()             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 43, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_t_1->numPoints();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 43, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":40
 * 
 *     @property
 *     def numPoints(self):             # <<<<<<<<<<<<<<
 *         """() -> int
 *         Number of points in this scatter."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter3D.numPoints.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":45
 *         return self.s3ptr().numPoints()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.numPoints
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4yoda_4core_9Scatter3D_11__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4yoda_4core_9Scatter3D_11__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_10__len__(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4yoda_4core_9Scatter3D_10__len__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "include/Scatter3D.pyx":46
 * 
 *     def __len__(self):
 *         return self.numPoints             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numPoints); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(27, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":45
 *         return self.s3ptr().numPoints()
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.numPoints
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__len__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":50
 * 
 *     @property
 *     def points(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_6points_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_6points_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_6points___get__(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_6points___get__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "include/Scatter3D.pyx":52
 *     def points(self):
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]             # <<<<<<<<<<<<<<
 * 
 *     def point(self, size_t i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_numPoints); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 52, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(27, 52, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 52, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(27, 52, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 52, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_5(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(27, 52, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_point); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(27, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_v_i);
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(27, 52, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":50
 * 
 *     @property
 *     def points(self):             # <<<<<<<<<<<<<<
 *         """Access the ordered list of points."""
 *         return [self.point(i) for i in xrange(self.numPoints)]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yoda.core.Scatter3D.points.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":54
 *         return [self.point(i) for i in xrange(self.numPoints)]
 * 
 *     def point(self, size_t i):             # <<<<<<<<<<<<<<
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_13point(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_12point[] = "Scatter3D.point(self, size_t i)\nAccess the i'th point.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_13point(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("point (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_size_t(__pyx_arg_i); if (unlikely((__pyx_v_i == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(27, 54, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_12point(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((size_t)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_12point(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, size_t __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("point", 0);

  /* "include/Scatter3D.pyx":56
 *     def point(self, size_t i):
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, py_ix):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 56, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point3D), (&__pyx_t_1->point(__pyx_v_i)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":54
 *         return [self.point(i) for i in xrange(self.numPoints)]
 * 
 *     def point(self, size_t i):             # <<<<<<<<<<<<<<
 *         """Access the i'th point."""
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.Scatter3D.point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":58
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s3ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix); /*proto*/
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_15__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_14__getitem__(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_py_ix));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_14__getitem__(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_py_ix) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  YODA::Scatter3D *__pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "include/Scatter3D.pyx":59
 * 
 *     def __getitem__(self, py_ix):
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s3ptr().numPoints())             # <<<<<<<<<<<<<<
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_py_ix); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(27, 59, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(27, 59, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_t_2->numPoints();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 59, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_4yoda_4util_pythonic_index(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_4 == 0 && PyErr_Occurred())) __PYX_ERR(27, 59, __pyx_L1_error)
  __pyx_v_i = __pyx_t_4;

  /* "include/Scatter3D.pyx":60
 *     def __getitem__(self, py_ix):
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s3ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(27, 60, __pyx_L1_error)
  __pyx_t_5 = __pyx_f_4yoda_4util_new_borrowed_cls(((PyObject *)__pyx_ptype_4yoda_4core_Point3D), (&__pyx_t_2->point(__pyx_v_i)), ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":58
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 * 
 *     def __getitem__(self, py_ix):             # <<<<<<<<<<<<<<
 *         cdef size_t i = cutil.pythonic_index(py_ix, self.s3ptr().numPoints())
 *         return cutil.new_borrowed_cls(Point3D, &self.s3ptr().point(i), self)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":63
 * 
 * 
 *     def addPoint(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Add a new point.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_17addPoint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_16addPoint[] = "Scatter3D.addPoint(self, *args, **kwargs)\nAdd a new point.\n\n        Provide either a single yoda.Point3D object, or the\n        3-6 args: x, y, z, xerrs=0, yerrs=0, zerrs=0.\n        ";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_17addPoint(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addPoint (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "addPoint", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = PyDict_Copy(__pyx_kwds); if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = NULL;
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_16addPoint(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_16addPoint(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("addPoint", 0);

  /* "include/Scatter3D.pyx":69
 *         3-6 args: x, y, z, xerrs=0, yerrs=0, zerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Scatter3D.pyx":70
 *         """
 *         try:
 *             self.__addPoint_point(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         except TypeError:
 *             self.__addPoint_explicit(*args, **kwargs)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_point); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 70, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 70, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "include/Scatter3D.pyx":69
 *         3-6 args: x, y, z, xerrs=0, yerrs=0, zerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "include/Scatter3D.pyx":71
 *         try:
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:             # <<<<<<<<<<<<<<
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 */
    __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_6) {
      __Pyx_AddTraceback("yoda.core.Scatter3D.addPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(27, 71, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_7);

      /* "include/Scatter3D.pyx":72
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 *             self.__addPoint_explicit(*args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def __addPoint_explicit(self, x, y, z, xerrs=0, yerrs=0, zerrs=0):
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_explicit); if (unlikely(!__pyx_t_8)) __PYX_ERR(27, 72, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_v_args, __pyx_v_kwargs); if (unlikely(!__pyx_t_9)) __PYX_ERR(27, 72, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "include/Scatter3D.pyx":69
 *         3-6 args: x, y, z, xerrs=0, yerrs=0, zerrs=0.
 *         """
 *         try:             # <<<<<<<<<<<<<<
 *             self.__addPoint_point(*args, **kwargs)
 *         except TypeError:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Scatter3D.pyx":63
 * 
 * 
 *     def addPoint(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """Add a new point.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core.Scatter3D.addPoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":74
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 *     def __addPoint_explicit(self, x, y, z, xerrs=0, yerrs=0, zerrs=0):             # <<<<<<<<<<<<<<
 *         self.__addPoint_point(Point3D(x, y, z, xerrs, yerrs, zerrs))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_19__addPoint_explicit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_18__addPoint_explicit[] = "Scatter3D.__addPoint_explicit(self, x, y, z, xerrs=0, yerrs=0, zerrs=0)";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_19__addPoint_explicit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_xerrs = 0;
  PyObject *__pyx_v_yerrs = 0;
  PyObject *__pyx_v_zerrs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addPoint_explicit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_xerrs,&__pyx_n_s_yerrs,&__pyx_n_s_zerrs,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[3] = ((PyObject *)__pyx_int_0);
    values[4] = ((PyObject *)__pyx_int_0);
    values[5] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__addPoint_explicit", 0, 3, 6, 1); __PYX_ERR(27, 74, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__addPoint_explicit", 0, 3, 6, 2); __PYX_ERR(27, 74, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_xerrs);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_yerrs);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_zerrs);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__addPoint_explicit") < 0)) __PYX_ERR(27, 74, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
    __pyx_v_xerrs = values[3];
    __pyx_v_yerrs = values[4];
    __pyx_v_zerrs = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__addPoint_explicit", 0, 3, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(27, 74, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.__addPoint_explicit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_18__addPoint_explicit(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_xerrs, __pyx_v_yerrs, __pyx_v_zerrs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_18__addPoint_explicit(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z, PyObject *__pyx_v_xerrs, PyObject *__pyx_v_yerrs, PyObject *__pyx_v_zerrs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__addPoint_explicit", 0);

  /* "include/Scatter3D.pyx":75
 * 
 *     def __addPoint_explicit(self, x, y, z, xerrs=0, yerrs=0, zerrs=0):
 *         self.__addPoint_point(Point3D(x, y, z, xerrs, yerrs, zerrs))             # <<<<<<<<<<<<<<
 * 
 *     def __addPoint_point(self, Point3D p):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint_point); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(6); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_y);
  __Pyx_INCREF(__pyx_v_z);
  __Pyx_GIVEREF(__pyx_v_z);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_z);
  __Pyx_INCREF(__pyx_v_xerrs);
  __Pyx_GIVEREF(__pyx_v_xerrs);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_xerrs);
  __Pyx_INCREF(__pyx_v_yerrs);
  __Pyx_GIVEREF(__pyx_v_yerrs);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_v_yerrs);
  __Pyx_INCREF(__pyx_v_zerrs);
  __Pyx_GIVEREF(__pyx_v_zerrs);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_v_zerrs);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4yoda_4core_Point3D), __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 75, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":74
 *             self.__addPoint_explicit(*args, **kwargs)
 * 
 *     def __addPoint_explicit(self, x, y, z, xerrs=0, yerrs=0, zerrs=0):             # <<<<<<<<<<<<<<
 *         self.__addPoint_point(Point3D(x, y, z, xerrs, yerrs, zerrs))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter3D.__addPoint_explicit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":77
 *         self.__addPoint_point(Point3D(x, y, z, xerrs, yerrs, zerrs))
 * 
 *     def __addPoint_point(self, Point3D p):             # <<<<<<<<<<<<<<
 *         self.s3ptr().addPoint(p.p3ptr()[0])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_21__addPoint_point(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_20__addPoint_point[] = "Scatter3D.__addPoint_point(self, Point3D p)";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_21__addPoint_point(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__addPoint_point (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_4yoda_4core_Point3D, 1, "p", 0))) __PYX_ERR(27, 77, __pyx_L1_error)
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_20__addPoint_point(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((struct __pyx_obj_4yoda_4core_Point3D *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_20__addPoint_point(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, struct __pyx_obj_4yoda_4core_Point3D *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  YODA::Point3D *__pyx_t_2;
  __Pyx_RefNannySetupContext("__addPoint_point", 0);

  /* "include/Scatter3D.pyx":78
 * 
 *     def __addPoint_point(self, Point3D p):
 *         self.s3ptr().addPoint(p.p3ptr()[0])             # <<<<<<<<<<<<<<
 * 
 *     def addPoints(self, iterable):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 78, __pyx_L1_error)
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yoda_4core_Point3D *)__pyx_v_p->__pyx_base.__pyx_base.__pyx_vtab)->p3ptr(__pyx_v_p); if (unlikely(__pyx_t_2 == NULL)) __PYX_ERR(27, 78, __pyx_L1_error)
  __pyx_t_1->addPoint((__pyx_t_2[0]));

  /* "include/Scatter3D.pyx":77
 *         self.__addPoint_point(Point3D(x, y, z, xerrs, yerrs, zerrs))
 * 
 *     def __addPoint_point(self, Point3D p):             # <<<<<<<<<<<<<<
 *         self.s3ptr().addPoint(p.p3ptr()[0])
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.__addPoint_point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":80
 *         self.s3ptr().addPoint(p.p3ptr()[0])
 * 
 *     def addPoints(self, iterable):             # <<<<<<<<<<<<<<
 *         """Add several new points."""
 *         for row in iterable:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_23addPoints(PyObject *__pyx_v_self, PyObject *__pyx_v_iterable); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_22addPoints[] = "Scatter3D.addPoints(self, iterable)\nAdd several new points.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_23addPoints(PyObject *__pyx_v_self, PyObject *__pyx_v_iterable) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addPoints (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_22addPoints(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_iterable));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_22addPoints(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_iterable) {
  PyObject *__pyx_v_row = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("addPoints", 0);

  /* "include/Scatter3D.pyx":82
 *     def addPoints(self, iterable):
 *         """Add several new points."""
 *         for row in iterable:             # <<<<<<<<<<<<<<
 *             self.addPoint(*row)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_iterable)) || PyTuple_CheckExact(__pyx_v_iterable)) {
    __pyx_t_1 = __pyx_v_iterable; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_iterable); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 82, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(27, 82, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(27, 82, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(27, 82, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_row, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/Scatter3D.pyx":83
 *         """Add several new points."""
 *         for row in iterable:
 *             self.addPoint(*row)             # <<<<<<<<<<<<<<
 * 
 *     def combineWith(self, others):
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addPoint); if (unlikely(!__pyx_t_4)) __PYX_ERR(27, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PySequence_Tuple(__pyx_v_row); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "include/Scatter3D.pyx":82
 *     def addPoints(self, iterable):
 *         """Add several new points."""
 *         for row in iterable:             # <<<<<<<<<<<<<<
 *             self.addPoint(*row)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":80
 *         self.s3ptr().addPoint(p.p3ptr()[0])
 * 
 *     def addPoints(self, iterable):             # <<<<<<<<<<<<<<
 *         """Add several new points."""
 *         for row in iterable:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core.Scatter3D.addPoints", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_row);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":85
 *             self.addPoint(*row)
 * 
 *     def combineWith(self, others):             # <<<<<<<<<<<<<<
 *         """Try to add points from other Scatter3Ds into this one."""
 *         cdef Scatter3D other
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_25combineWith(PyObject *__pyx_v_self, PyObject *__pyx_v_others); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_24combineWith[] = "Scatter3D.combineWith(self, others)\nTry to add points from other Scatter3Ds into this one.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_25combineWith(PyObject *__pyx_v_self, PyObject *__pyx_v_others) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("combineWith (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_24combineWith(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_others));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_24combineWith(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_others) {
  struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_other = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  YODA::Scatter3D *__pyx_t_5;
  YODA::Scatter3D *__pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  __Pyx_RefNannySetupContext("combineWith", 0);

  /* "include/Scatter3D.pyx":88
 *         """Try to add points from other Scatter3Ds into this one."""
 *         cdef Scatter3D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter3D?
 *             other = others
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Scatter3D.pyx":90
 *         try:
 *             # Can we type it as a Scatter3D?
 *             other = others             # <<<<<<<<<<<<<<
 *         except TypeError:
 *             # Could be an iterable...
 */
      if (!(likely(((__pyx_v_others) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_others, __pyx_ptype_4yoda_4core_Scatter3D))))) __PYX_ERR(27, 90, __pyx_L3_error)
      __pyx_t_4 = __pyx_v_others;
      __Pyx_INCREF(__pyx_t_4);
      __pyx_v_other = ((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_t_4);
      __pyx_t_4 = 0;

      /* "include/Scatter3D.pyx":88
 *         """Try to add points from other Scatter3Ds into this one."""
 *         cdef Scatter3D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter3D?
 *             other = others
 */
    }

    /* "include/Scatter3D.pyx":96
 *                 self.s3ptr().combineWith(deref(other.s3ptr()))
 *         else:
 *             self.s3ptr().combineWith(deref(other.s3ptr()))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else:*/ {
      __pyx_t_5 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_5 == NULL)) __PYX_ERR(27, 96, __pyx_L5_except_error)
      __pyx_t_6 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_other); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(27, 96, __pyx_L5_except_error)
      __pyx_t_5->combineWith((*__pyx_t_6));
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "include/Scatter3D.pyx":91
 *             # Can we type it as a Scatter3D?
 *             other = others
 *         except TypeError:             # <<<<<<<<<<<<<<
 *             # Could be an iterable...
 *             for other in others:
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("yoda.core.Scatter3D.combineWith", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_9) < 0) __PYX_ERR(27, 91, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_9);

      /* "include/Scatter3D.pyx":93
 *         except TypeError:
 *             # Could be an iterable...
 *             for other in others:             # <<<<<<<<<<<<<<
 *                 self.s3ptr().combineWith(deref(other.s3ptr()))
 *         else:
 */
      if (likely(PyList_CheckExact(__pyx_v_others)) || PyTuple_CheckExact(__pyx_v_others)) {
        __pyx_t_10 = __pyx_v_others; __Pyx_INCREF(__pyx_t_10); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_v_others); if (unlikely(!__pyx_t_10)) __PYX_ERR(27, 93, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = Py_TYPE(__pyx_t_10)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(27, 93, __pyx_L5_except_error)
      }
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_10))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_13 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_11); __Pyx_INCREF(__pyx_t_13); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(27, 93, __pyx_L5_except_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_10, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_13)) __PYX_ERR(27, 93, __pyx_L5_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_13 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_11); __Pyx_INCREF(__pyx_t_13); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(27, 93, __pyx_L5_except_error)
            #else
            __pyx_t_13 = PySequence_ITEM(__pyx_t_10, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_13)) __PYX_ERR(27, 93, __pyx_L5_except_error)
            __Pyx_GOTREF(__pyx_t_13);
            #endif
          }
        } else {
          __pyx_t_13 = __pyx_t_12(__pyx_t_10);
          if (unlikely(!__pyx_t_13)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(27, 93, __pyx_L5_except_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_13);
        }
        if (!(likely(((__pyx_t_13) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_13, __pyx_ptype_4yoda_4core_Scatter3D))))) __PYX_ERR(27, 93, __pyx_L5_except_error)
        __Pyx_XDECREF_SET(__pyx_v_other, ((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_t_13));
        __pyx_t_13 = 0;

        /* "include/Scatter3D.pyx":94
 *             # Could be an iterable...
 *             for other in others:
 *                 self.s3ptr().combineWith(deref(other.s3ptr()))             # <<<<<<<<<<<<<<
 *         else:
 *             self.s3ptr().combineWith(deref(other.s3ptr()))
 */
        __pyx_t_6 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_6 == NULL)) __PYX_ERR(27, 94, __pyx_L5_except_error)
        __pyx_t_5 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_other); if (unlikely(__pyx_t_5 == NULL)) __PYX_ERR(27, 94, __pyx_L5_except_error)
        __pyx_t_6->combineWith((*__pyx_t_5));

        /* "include/Scatter3D.pyx":93
 *         except TypeError:
 *             # Could be an iterable...
 *             for other in others:             # <<<<<<<<<<<<<<
 *                 self.s3ptr().combineWith(deref(other.s3ptr()))
 *         else:
 */
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "include/Scatter3D.pyx":88
 *         """Try to add points from other Scatter3Ds into this one."""
 *         cdef Scatter3D other
 *         try:             # <<<<<<<<<<<<<<
 *             # Can we type it as a Scatter3D?
 *             other = others
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L10_try_end:;
  }

  /* "include/Scatter3D.pyx":85
 *             self.addPoint(*row)
 * 
 *     def combineWith(self, others):             # <<<<<<<<<<<<<<
 *         """Try to add points from other Scatter3Ds into this one."""
 *         cdef Scatter3D other
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yoda.core.Scatter3D.combineWith", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_other);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":99
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter3D.
 *         Make a new Scatter3D. Exists to allow mkScatter calls on any AnalysisObject,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_27mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_26mkScatter[] = "Scatter3D.mkScatter(self)\nNone -> Scatter3D.\n        Make a new Scatter3D. Exists to allow mkScatter calls on any AnalysisObject,\n        even if it already is a scatter.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_27mkScatter(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_26mkScatter(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_26mkScatter(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self) {
  YODA::Scatter3D __pyx_v_s3;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  YODA::Scatter3D __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Scatter3D.pyx":103
 *         Make a new Scatter3D. Exists to allow mkScatter calls on any AnalysisObject,
 *         even if it already is a scatter."""
 *         cdef c.Scatter3D s3 = c.mkScatter_Scatter3D(deref(self.s3ptr()))             # <<<<<<<<<<<<<<
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())
 * 
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 103, __pyx_L1_error)
  try {
    __pyx_t_2 = YODA::mkScatter((*__pyx_t_1));
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 103, __pyx_L1_error)
  }
  __pyx_v_s3 = __pyx_t_2;

  /* "include/Scatter3D.pyx":104
 *         even if it already is a scatter."""
 *         cdef c.Scatter3D s3 = c.mkScatter_Scatter3D(deref(self.s3ptr()))
 *         return cutil.new_owned_cls(Scatter3D, s3.newclone())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_s3.newclone();
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 104, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_4yoda_4util_new_owned_cls(((PyObject *)__pyx_ptype_4yoda_4core_Scatter3D), __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Scatter3D.pyx":99
 * 
 * 
 *     def mkScatter(self):             # <<<<<<<<<<<<<<
 *         """None -> Scatter3D.
 *         Make a new Scatter3D. Exists to allow mkScatter calls on any AnalysisObject,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.Scatter3D.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":107
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_29scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_28scaleX[] = "Scatter3D.scaleX(self, a)\n(float) -> None\n        Scale the x values and errors of the points in this scatter by factor a.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_29scaleX(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_28scaleX(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_28scaleX(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleX", 0);

  /* "include/Scatter3D.pyx":110
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 *         self.s3ptr().scaleX(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleY(self, a):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 110, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(27, 110, __pyx_L1_error)
  try {
    __pyx_t_1->scaleX(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 110, __pyx_L1_error)
  }

  /* "include/Scatter3D.pyx":107
 * 
 * 
 *     def scaleX(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the x values and errors of the points in this scatter by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.scaleX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":112
 *         self.s3ptr().scaleX(a)
 * 
 *     def scaleY(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the y values and errors of the points in this scatter by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_31scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_30scaleY[] = "Scatter3D.scaleY(self, a)\n(float) -> None\n        Scale the y values and errors of the points in this scatter by factor a.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_31scaleY(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_30scaleY(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_30scaleY(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleY", 0);

  /* "include/Scatter3D.pyx":115
 *         """(float) -> None
 *         Scale the y values and errors of the points in this scatter by factor a."""
 *         self.s3ptr().scaleY(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleZ(self, a):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 115, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(27, 115, __pyx_L1_error)
  try {
    __pyx_t_1->scaleY(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 115, __pyx_L1_error)
  }

  /* "include/Scatter3D.pyx":112
 *         self.s3ptr().scaleX(a)
 * 
 *     def scaleY(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the y values and errors of the points in this scatter by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.scaleY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":117
 *         self.s3ptr().scaleY(a)
 * 
 *     def scaleZ(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the z values and errors of the points in this scatter by factor a."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_33scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_v_a); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_32scaleZ[] = "Scatter3D.scaleZ(self, a)\n(float) -> None\n        Scale the z values and errors of the points in this scatter by factor a.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_33scaleZ(PyObject *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleZ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_32scaleZ(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_a));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_32scaleZ(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  double __pyx_t_2;
  __Pyx_RefNannySetupContext("scaleZ", 0);

  /* "include/Scatter3D.pyx":120
 *         """(float) -> None
 *         Scale the z values and errors of the points in this scatter by factor a."""
 *         self.s3ptr().scaleZ(a)             # <<<<<<<<<<<<<<
 * 
 *     def scaleXYZ(self, ax=1, ay=1, az=1):
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 120, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(27, 120, __pyx_L1_error)
  try {
    __pyx_t_1->scaleZ(__pyx_t_2);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 120, __pyx_L1_error)
  }

  /* "include/Scatter3D.pyx":117
 *         self.s3ptr().scaleY(a)
 * 
 *     def scaleZ(self, a):             # <<<<<<<<<<<<<<
 *         """(float) -> None
 *         Scale the z values and errors of the points in this scatter by factor a."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.scaleZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":122
 *         self.s3ptr().scaleZ(a)
 * 
 *     def scaleXYZ(self, ax=1, ay=1, az=1):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1, float=1) -> None
 *         Scale the values and errors of the points in this scatter by factors ax, ay, az."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_35scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_34scaleXYZ[] = "Scatter3D.scaleXYZ(self, ax=1, ay=1, az=1)\n(float=1, float=1, float=1) -> None\n        Scale the values and errors of the points in this scatter by factors ax, ay, az.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_35scaleXYZ(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ax = 0;
  PyObject *__pyx_v_ay = 0;
  PyObject *__pyx_v_az = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleXYZ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ax,&__pyx_n_s_ay,&__pyx_n_s_az,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_int_1);
    values[1] = ((PyObject *)__pyx_int_1);
    values[2] = ((PyObject *)__pyx_int_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ax);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ay);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_az);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scaleXYZ") < 0)) __PYX_ERR(27, 122, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ax = values[0];
    __pyx_v_ay = values[1];
    __pyx_v_az = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scaleXYZ", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(27, 122, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_34scaleXYZ(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_ax, __pyx_v_ay, __pyx_v_az);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_34scaleXYZ(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  YODA::Scatter3D *__pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  __Pyx_RefNannySetupContext("scaleXYZ", 0);

  /* "include/Scatter3D.pyx":125
 *         """(float=1, float=1, float=1) -> None
 *         Scale the values and errors of the points in this scatter by factors ax, ay, az."""
 *         self.s3ptr().scaleXYZ(ax, ay, az)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: remove
 */
  __pyx_t_1 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(27, 125, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_ax); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(27, 125, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_ay); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(27, 125, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_az); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(27, 125, __pyx_L1_error)
  try {
    __pyx_t_1->scaleXYZ(__pyx_t_2, __pyx_t_3, __pyx_t_4);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(27, 125, __pyx_L1_error)
  }

  /* "include/Scatter3D.pyx":122
 *         self.s3ptr().scaleZ(a)
 * 
 *     def scaleXYZ(self, ax=1, ay=1, az=1):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1, float=1) -> None
 *         Scale the values and errors of the points in this scatter by factors ax, ay, az."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.scaleXYZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":128
 * 
 *     # TODO: remove
 *     def scale(self, ax=1, ay=1, az=1):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1, float=1) -> None
 *         DEPRECATED: USE scaleXYZ
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_37scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_36scale[] = "Scatter3D.scale(self, ax=1, ay=1, az=1)\n(float=1, float=1, float=1) -> None\n        DEPRECATED: USE scaleXYZ\n        Scale the values and errors of the points in this scatter by factors ax, ay, az.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_37scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ax = 0;
  PyObject *__pyx_v_ay = 0;
  PyObject *__pyx_v_az = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scale (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ax,&__pyx_n_s_ay,&__pyx_n_s_az,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_int_1);
    values[1] = ((PyObject *)__pyx_int_1);
    values[2] = ((PyObject *)__pyx_int_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ax);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ay);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_az);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scale") < 0)) __PYX_ERR(27, 128, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ax = values[0];
    __pyx_v_ay = values[1];
    __pyx_v_az = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scale", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(27, 128, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.Scatter3D.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_36scale(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), __pyx_v_ax, __pyx_v_ay, __pyx_v_az);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_36scale(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_ax, PyObject *__pyx_v_ay, PyObject *__pyx_v_az) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("scale", 0);

  /* "include/Scatter3D.pyx":132
 *         DEPRECATED: USE scaleXYZ
 *         Scale the values and errors of the points in this scatter by factors ax, ay, az."""
 *         self.scaleXYZ(ax, ay, az)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_scaleXYZ); if (unlikely(!__pyx_t_2)) __PYX_ERR(27, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_INCREF(__pyx_v_ax);
  __Pyx_GIVEREF(__pyx_v_ax);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_ax);
  __Pyx_INCREF(__pyx_v_ay);
  __Pyx_GIVEREF(__pyx_v_ay);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_ay);
  __Pyx_INCREF(__pyx_v_az);
  __Pyx_GIVEREF(__pyx_v_az);
  PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, __pyx_v_az);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":128
 * 
 *     # TODO: remove
 *     def scale(self, ax=1, ay=1, az=1):             # <<<<<<<<<<<<<<
 *         """(float=1, float=1, float=1) -> None
 *         DEPRECATED: USE scaleXYZ
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core.Scatter3D.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":135
 * 
 * 
 *     def transformX(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_39transformX(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_38transformX[] = "Scatter3D.transformX(self, f)\n(fn) -> None\n        Transform the x values and errors of the points in this scatter by function f.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_39transformX(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transformX (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_38transformX(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_38transformX(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_ctypes = NULL;
  PyObject *__pyx_v_callback = NULL;
  __pyx_t_4yoda_12declarations_dbl_dbl_fptr __pyx_v_fptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  size_t __pyx_t_12;
  YODA::Scatter3D *__pyx_t_13;
  __Pyx_RefNannySetupContext("transformX", 0);

  /* "include/Scatter3D.pyx":138
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes             # <<<<<<<<<<<<<<
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ctypes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":139
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "include/Scatter3D.pyx":140
 *         import ctypes
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)             # <<<<<<<<<<<<<<
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 140, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(27, 140, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_8)) __PYX_ERR(27, 140, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 140, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
      __pyx_t_7 = 0;
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 140, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 140, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 140, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(__pyx_v_f);
        __Pyx_GIVEREF(__pyx_v_f);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_f);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 140, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_callback = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "include/Scatter3D.pyx":139
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "include/Scatter3D.pyx":141
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Scatter3D.transformX", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(27, 141, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/Scatter3D.pyx":142
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformX(deref(self.s3ptr()), fptr)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 142, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(27, 142, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "include/Scatter3D.pyx":139
 *         Transform the x values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "include/Scatter3D.pyx":143
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]             # <<<<<<<<<<<<<<
 *         c.Scatter3D_transformX(deref(self.s3ptr()), fptr)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_addressof); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_callback); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_callback);
    __Pyx_GIVEREF(__pyx_v_callback);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_callback);
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(27, 143, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_fptr = (((__pyx_t_4yoda_12declarations_dbl_dbl_fptr *)((size_t)__pyx_t_12))[0]);

  /* "include/Scatter3D.pyx":144
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformX(deref(self.s3ptr()), fptr)             # <<<<<<<<<<<<<<
 * 
 *     def transformY(self, f):
 */
  __pyx_t_13 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_13 == NULL)) __PYX_ERR(27, 144, __pyx_L1_error)
  YODA::transformX((*__pyx_t_13), __pyx_v_fptr);

  /* "include/Scatter3D.pyx":135
 * 
 * 
 *     def transformX(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the x values and errors of the points in this scatter by function f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.Scatter3D.transformX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctypes);
  __Pyx_XDECREF(__pyx_v_callback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":146
 *         c.Scatter3D_transformX(deref(self.s3ptr()), fptr)
 * 
 *     def transformY(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the y values and errors of the points in this scatter by function f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_41transformY(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_40transformY[] = "Scatter3D.transformY(self, f)\n(fn) -> None\n        Transform the y values and errors of the points in this scatter by function f.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_41transformY(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transformY (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_40transformY(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_40transformY(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_ctypes = NULL;
  PyObject *__pyx_v_callback = NULL;
  __pyx_t_4yoda_12declarations_dbl_dbl_fptr __pyx_v_fptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  size_t __pyx_t_12;
  YODA::Scatter3D *__pyx_t_13;
  __Pyx_RefNannySetupContext("transformY", 0);

  /* "include/Scatter3D.pyx":149
 *         """(fn) -> None
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes             # <<<<<<<<<<<<<<
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ctypes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":150
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "include/Scatter3D.pyx":151
 *         import ctypes
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)             # <<<<<<<<<<<<<<
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 151, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(27, 151, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_8)) __PYX_ERR(27, 151, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 151, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
      __pyx_t_7 = 0;
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 151, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 151, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 151, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(__pyx_v_f);
        __Pyx_GIVEREF(__pyx_v_f);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_f);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 151, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_callback = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "include/Scatter3D.pyx":150
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "include/Scatter3D.pyx":152
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Scatter3D.transformY", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(27, 152, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/Scatter3D.pyx":153
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformY(deref(self.s3ptr()), fptr)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 153, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(27, 153, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "include/Scatter3D.pyx":150
 *         Transform the y values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "include/Scatter3D.pyx":154
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]             # <<<<<<<<<<<<<<
 *         c.Scatter3D_transformY(deref(self.s3ptr()), fptr)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_addressof); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_callback); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_callback);
    __Pyx_GIVEREF(__pyx_v_callback);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_callback);
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(27, 154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_fptr = (((__pyx_t_4yoda_12declarations_dbl_dbl_fptr *)((size_t)__pyx_t_12))[0]);

  /* "include/Scatter3D.pyx":155
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformY(deref(self.s3ptr()), fptr)             # <<<<<<<<<<<<<<
 * 
 *     def transformZ(self, f):
 */
  __pyx_t_13 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_13 == NULL)) __PYX_ERR(27, 155, __pyx_L1_error)
  YODA::transformY((*__pyx_t_13), __pyx_v_fptr);

  /* "include/Scatter3D.pyx":146
 *         c.Scatter3D_transformX(deref(self.s3ptr()), fptr)
 * 
 *     def transformY(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the y values and errors of the points in this scatter by function f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.Scatter3D.transformY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctypes);
  __Pyx_XDECREF(__pyx_v_callback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Scatter3D.pyx":157
 *         c.Scatter3D_transformY(deref(self.s3ptr()), fptr)
 * 
 *     def transformZ(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the z values and errors of the points in this scatter by function f."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_43transformZ(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_4yoda_4core_9Scatter3D_42transformZ[] = "Scatter3D.transformZ(self, f)\n(fn) -> None\n        Transform the z values and errors of the points in this scatter by function f.";
static PyObject *__pyx_pw_4yoda_4core_9Scatter3D_43transformZ(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transformZ (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_9Scatter3D_42transformZ(((struct __pyx_obj_4yoda_4core_Scatter3D *)__pyx_v_self), ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_9Scatter3D_42transformZ(struct __pyx_obj_4yoda_4core_Scatter3D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_ctypes = NULL;
  PyObject *__pyx_v_callback = NULL;
  __pyx_t_4yoda_12declarations_dbl_dbl_fptr __pyx_v_fptr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  size_t __pyx_t_12;
  YODA::Scatter3D *__pyx_t_13;
  __Pyx_RefNannySetupContext("transformZ", 0);

  /* "include/Scatter3D.pyx":160
 *         """(fn) -> None
 *         Transform the z values and errors of the points in this scatter by function f."""
 *         import ctypes             # <<<<<<<<<<<<<<
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ctypes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/Scatter3D.pyx":161
 *         Transform the z values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "include/Scatter3D.pyx":162
 *         import ctypes
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)             # <<<<<<<<<<<<<<
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 162, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(27, 162, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_c_double); if (unlikely(!__pyx_t_8)) __PYX_ERR(27, 162, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 162, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
      __pyx_t_7 = 0;
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 162, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 162, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 162, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
        __Pyx_INCREF(__pyx_v_f);
        __Pyx_GIVEREF(__pyx_v_f);
        PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_v_f);
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(27, 162, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_callback = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "include/Scatter3D.pyx":161
 *         Transform the z values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10_try_end;
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "include/Scatter3D.pyx":163
 *         try:
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.Scatter3D.transformZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(27, 163, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_11);

      /* "include/Scatter3D.pyx":164
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformZ(deref(self.s3ptr()), fptr)
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 164, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(27, 164, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "include/Scatter3D.pyx":161
 *         Transform the z values and errors of the points in this scatter by function f."""
 *         import ctypes
 *         try:             # <<<<<<<<<<<<<<
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "include/Scatter3D.pyx":165
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]             # <<<<<<<<<<<<<<
 *         c.Scatter3D_transformZ(deref(self.s3ptr()), fptr)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ctypes, __pyx_n_s_addressof); if (unlikely(!__pyx_t_5)) __PYX_ERR(27, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_callback); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_INCREF(__pyx_v_callback);
    __Pyx_GIVEREF(__pyx_v_callback);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_callback);
    __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(27, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_11); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(27, 165, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_v_fptr = (((__pyx_t_4yoda_12declarations_dbl_dbl_fptr *)((size_t)__pyx_t_12))[0]);

  /* "include/Scatter3D.pyx":166
 *             raise RuntimeError("Callback is not of type (double) -> double")
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformZ(deref(self.s3ptr()), fptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_13 = __pyx_f_4yoda_4core_9Scatter3D_s3ptr(__pyx_v_self); if (unlikely(__pyx_t_13 == NULL)) __PYX_ERR(27, 166, __pyx_L1_error)
  YODA::transformZ((*__pyx_t_13), __pyx_v_fptr);

  /* "include/Scatter3D.pyx":157
 *         c.Scatter3D_transformY(deref(self.s3ptr()), fptr)
 * 
 *     def transformZ(self, f):             # <<<<<<<<<<<<<<
 *         """(fn) -> None
 *         Transform the z values and errors of the points in this scatter by function f."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.Scatter3D.transformZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ctypes);
  __Pyx_XDECREF(__pyx_v_callback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":1
 * def mkScatter(ao, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *     """AnalysisObject -> Scatter{1,2,3}D
 *     Convert an AnalysisObject to a Scatter, using the logic of the bound mkScatter methods.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_3mkScatter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_2mkScatter[] = "mkScatter(ao, usefocus=False, usestddev=False)\nAnalysisObject -> Scatter{1,2,3}D\n    Convert an AnalysisObject to a Scatter, using the logic of the bound mkScatter methods.\n\n    @todo This falls back on use of optional args until we find one that works: is there a nicer way?\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_3mkScatter = {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_3mkScatter, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_2mkScatter};
static PyObject *__pyx_pw_4yoda_4core_3mkScatter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ao = 0;
  PyObject *__pyx_v_usefocus = 0;
  PyObject *__pyx_v_usestddev = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mkScatter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ao,&__pyx_n_s_usefocus,&__pyx_n_s_usestddev,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)Py_False);
    values[2] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ao)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usefocus);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_usestddev);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "mkScatter") < 0)) __PYX_ERR(28, 1, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ao = values[0];
    __pyx_v_usefocus = values[1];
    __pyx_v_usestddev = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("mkScatter", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_2mkScatter(__pyx_self, __pyx_v_ao, __pyx_v_usefocus, __pyx_v_usestddev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_2mkScatter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ao, PyObject *__pyx_v_usefocus, PyObject *__pyx_v_usestddev) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  __Pyx_RefNannySetupContext("mkScatter", 0);

  /* "include/Functions.pyx":7
 *     @todo This falls back on use of optional args until we find one that works: is there a nicer way?
 *     """
 *     try:             # <<<<<<<<<<<<<<
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "include/Functions.pyx":8
 *     """
 *     try:
 *         return ao.mkScatter(usefocus, usestddev)             # <<<<<<<<<<<<<<
 *     except:
 *         try:
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_ao, __pyx_n_s_mkScatter); if (unlikely(!__pyx_t_5)) __PYX_ERR(28, 8, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(28, 8, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_INCREF(__pyx_v_usefocus);
      __Pyx_GIVEREF(__pyx_v_usefocus);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_usefocus);
      __Pyx_INCREF(__pyx_v_usestddev);
      __Pyx_GIVEREF(__pyx_v_usestddev);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_usestddev);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(28, 8, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L7_try_return;

      /* "include/Functions.pyx":7
 *     @todo This falls back on use of optional args until we find one that works: is there a nicer way?
 *     """
 *     try:             # <<<<<<<<<<<<<<
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:
 */
    }
    __pyx_L3_error:;
    __Pyx_PyThreadState_assign
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "include/Functions.pyx":9
 *     try:
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:             # <<<<<<<<<<<<<<
 *         try:
 *             return ao.mkScatter(usefocus)
 */
    /*except:*/ {
      __Pyx_AddTraceback("yoda.core.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_8) < 0) __PYX_ERR(28, 9, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_8);

      /* "include/Functions.pyx":10
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:
 *         try:             # <<<<<<<<<<<<<<
 *             return ao.mkScatter(usefocus)
 *         except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_11);
        /*try:*/ {

          /* "include/Functions.pyx":11
 *     except:
 *         try:
 *             return ao.mkScatter(usefocus)             # <<<<<<<<<<<<<<
 *         except:
 *             return ao.mkScatter()
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_ao, __pyx_n_s_mkScatter); if (unlikely(!__pyx_t_12)) __PYX_ERR(28, 11, __pyx_L13_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_13 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_12))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_12, function);
            }
          }
          if (!__pyx_t_13) {
            __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_usefocus); if (unlikely(!__pyx_t_6)) __PYX_ERR(28, 11, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_6);
          } else {
            __pyx_t_14 = PyTuple_New(1+1); if (unlikely(!__pyx_t_14)) __PYX_ERR(28, 11, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_13); __pyx_t_13 = NULL;
            __Pyx_INCREF(__pyx_v_usefocus);
            __Pyx_GIVEREF(__pyx_v_usefocus);
            PyTuple_SET_ITEM(__pyx_t_14, 0+1, __pyx_v_usefocus);
            __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_14, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(28, 11, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_r = __pyx_t_6;
          __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          goto __pyx_L17_try_return;

          /* "include/Functions.pyx":10
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:
 *         try:             # <<<<<<<<<<<<<<
 *             return ao.mkScatter(usefocus)
 *         except:
 */
        }
        __pyx_L13_error:;
        __Pyx_PyThreadState_assign
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "include/Functions.pyx":12
 *         try:
 *             return ao.mkScatter(usefocus)
 *         except:             # <<<<<<<<<<<<<<
 *             return ao.mkScatter()
 * 
 */
        /*except:*/ {
          __Pyx_AddTraceback("yoda.core.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_12, &__pyx_t_14) < 0) __PYX_ERR(28, 12, __pyx_L15_except_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_GOTREF(__pyx_t_14);

          /* "include/Functions.pyx":13
 *             return ao.mkScatter(usefocus)
 *         except:
 *             return ao.mkScatter()             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_ao, __pyx_n_s_mkScatter); if (unlikely(!__pyx_t_15)) __PYX_ERR(28, 13, __pyx_L15_except_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_16 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_15))) {
            __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_15);
            if (likely(__pyx_t_16)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
              __Pyx_INCREF(__pyx_t_16);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_15, function);
            }
          }
          if (__pyx_t_16) {
            __pyx_t_13 = __Pyx_PyObject_CallOneArg(__pyx_t_15, __pyx_t_16); if (unlikely(!__pyx_t_13)) __PYX_ERR(28, 13, __pyx_L15_except_error)
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          } else {
            __pyx_t_13 = __Pyx_PyObject_CallNoArg(__pyx_t_15); if (unlikely(!__pyx_t_13)) __PYX_ERR(28, 13, __pyx_L15_except_error)
          }
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_r = __pyx_t_13;
          __pyx_t_13 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          goto __pyx_L16_except_return;
        }
        __pyx_L15_except_error:;

        /* "include/Functions.pyx":10
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:
 *         try:             # <<<<<<<<<<<<<<
 *             return ao.mkScatter(usefocus)
 *         except:
 */
        __Pyx_PyThreadState_assign
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        goto __pyx_L5_except_error;
        __pyx_L17_try_return:;
        __Pyx_PyThreadState_assign
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        goto __pyx_L6_except_return;
        __pyx_L16_except_return:;
        __Pyx_PyThreadState_assign
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        goto __pyx_L6_except_return;
      }
    }
    __pyx_L5_except_error:;

    /* "include/Functions.pyx":7
 *     @todo This falls back on use of optional args until we find one that works: is there a nicer way?
 *     """
 *     try:             # <<<<<<<<<<<<<<
 *         return ao.mkScatter(usefocus, usestddev)
 *     except:
 */
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_PyThreadState_assign
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
  }

  /* "include/Functions.pyx":1
 * def mkScatter(ao, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *     """AnalysisObject -> Scatter{1,2,3}D
 *     Convert an AnalysisObject to a Scatter, using the logic of the bound mkScatter methods.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_AddTraceback("yoda.core.mkScatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":16
 * 
 * 
 * def divide(ao1, ao2):             # <<<<<<<<<<<<<<
 *     """(AnalysisObject, AnalysisObject) -> Scatter{1,2,3}D
 *     Divide one AnalysisObject by another, producing a Scatter of appropriate dimension by using the logic of the bound divideBy methods."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_5divide(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_4divide[] = "divide(ao1, ao2)\n(AnalysisObject, AnalysisObject) -> Scatter{1,2,3}D\n    Divide one AnalysisObject by another, producing a Scatter of appropriate dimension by using the logic of the bound divideBy methods.";
static PyMethodDef __pyx_mdef_4yoda_4core_5divide = {"divide", (PyCFunction)__pyx_pw_4yoda_4core_5divide, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_4divide};
static PyObject *__pyx_pw_4yoda_4core_5divide(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ao1 = 0;
  PyObject *__pyx_v_ao2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("divide (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ao1,&__pyx_n_s_ao2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ao1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ao2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("divide", 1, 2, 2, 1); __PYX_ERR(28, 16, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "divide") < 0)) __PYX_ERR(28, 16, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ao1 = values[0];
    __pyx_v_ao2 = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("divide", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 16, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.divide", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_4divide(__pyx_self, __pyx_v_ao1, __pyx_v_ao2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_4divide(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ao1, PyObject *__pyx_v_ao2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("divide", 0);

  /* "include/Functions.pyx":19
 *     """(AnalysisObject, AnalysisObject) -> Scatter{1,2,3}D
 *     Divide one AnalysisObject by another, producing a Scatter of appropriate dimension by using the logic of the bound divideBy methods."""
 *     return ao1.divideBy(ao2)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_ao1, __pyx_n_s_divideBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_ao2); if (unlikely(!__pyx_t_1)) __PYX_ERR(28, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(28, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_ao2);
    __Pyx_GIVEREF(__pyx_v_ao2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_ao2);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(28, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":16
 * 
 * 
 * def divide(ao1, ao2):             # <<<<<<<<<<<<<<
 *     """(AnalysisObject, AnalysisObject) -> Scatter{1,2,3}D
 *     Divide one AnalysisObject by another, producing a Scatter of appropriate dimension by using the logic of the bound divideBy methods."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.divide", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":45
 * 
 * 
 * def linspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced between start and end, with the first and
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_7linspace(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_6linspace[] = "linspace(nbins, start, end)\n(int, float, float) -> list[float]\n    Make a list of n+1 bin edges linearly spaced between start and end, with the first and\n    last edges on those boundaries.";
static PyMethodDef __pyx_mdef_4yoda_4core_7linspace = {"linspace", (PyCFunction)__pyx_pw_4yoda_4core_7linspace, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_6linspace};
static PyObject *__pyx_pw_4yoda_4core_7linspace(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nbins = 0;
  PyObject *__pyx_v_start = 0;
  PyObject *__pyx_v_end = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("linspace (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nbins,&__pyx_n_s_start,&__pyx_n_s_end,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nbins)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_start)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("linspace", 1, 3, 3, 1); __PYX_ERR(28, 45, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_end)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("linspace", 1, 3, 3, 2); __PYX_ERR(28, 45, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "linspace") < 0)) __PYX_ERR(28, 45, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_nbins = values[0];
    __pyx_v_start = values[1];
    __pyx_v_end = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("linspace", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 45, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.linspace", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_6linspace(__pyx_self, __pyx_v_nbins, __pyx_v_start, __pyx_v_end);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_6linspace(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_nbins, PyObject *__pyx_v_start, PyObject *__pyx_v_end) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("linspace", 0);

  /* "include/Functions.pyx":49
 *     Make a list of n+1 bin edges linearly spaced between start and end, with the first and
 *     last edges on those boundaries."""
 *     return c.linspace(nbins, start, end)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_nbins); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(28, 49, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_start); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(28, 49, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_end); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(28, 49, __pyx_L1_error)
  __pyx_t_4 = __pyx_convert_vector_to_py_double(YODA::linspace(__pyx_t_1, __pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_4)) __PYX_ERR(28, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":45
 * 
 * 
 * def linspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced between start and end, with the first and
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.linspace", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":52
 * 
 * 
 * def logspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced on the interval log(start..end), with
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_9logspace(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_8logspace[] = "logspace(nbins, start, end)\n(int, float, float) -> list[float]\n    Make a list of n+1 bin edges linearly spaced on the interval log(start..end), with\n    the first and last edges on those boundaries.";
static PyMethodDef __pyx_mdef_4yoda_4core_9logspace = {"logspace", (PyCFunction)__pyx_pw_4yoda_4core_9logspace, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_8logspace};
static PyObject *__pyx_pw_4yoda_4core_9logspace(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nbins = 0;
  PyObject *__pyx_v_start = 0;
  PyObject *__pyx_v_end = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("logspace (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nbins,&__pyx_n_s_start,&__pyx_n_s_end,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nbins)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_start)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("logspace", 1, 3, 3, 1); __PYX_ERR(28, 52, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_end)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("logspace", 1, 3, 3, 2); __PYX_ERR(28, 52, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "logspace") < 0)) __PYX_ERR(28, 52, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_nbins = values[0];
    __pyx_v_start = values[1];
    __pyx_v_end = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("logspace", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 52, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.logspace", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_8logspace(__pyx_self, __pyx_v_nbins, __pyx_v_start, __pyx_v_end);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_8logspace(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_nbins, PyObject *__pyx_v_start, PyObject *__pyx_v_end) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("logspace", 0);

  /* "include/Functions.pyx":56
 *     Make a list of n+1 bin edges linearly spaced on the interval log(start..end), with
 *     the first and last edges on those boundaries."""
 *     return c.logspace(nbins, start, end)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_nbins); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(28, 56, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_start); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(28, 56, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_end); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(28, 56, __pyx_L1_error)
  __pyx_t_4 = __pyx_convert_vector_to_py_double(YODA::logspace(__pyx_t_1, __pyx_t_2, __pyx_t_3)); if (unlikely(!__pyx_t_4)) __PYX_ERR(28, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":52
 * 
 * 
 * def logspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced on the interval log(start..end), with
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.logspace", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":59
 * 
 * 
 * def index_between(x, binedges):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the index of the bin which would contain x, or -1 if there is no enclosing
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_11index_between(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_10index_between[] = "index_between(x, binedges)\n(float, list[float]) -> int\n    Return the index of the bin which would contain x, or -1 if there is no enclosing\n    bin in the given set of n+1 bin edges.";
static PyMethodDef __pyx_mdef_4yoda_4core_11index_between = {"index_between", (PyCFunction)__pyx_pw_4yoda_4core_11index_between, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_10index_between};
static PyObject *__pyx_pw_4yoda_4core_11index_between(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_binedges = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("index_between (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_binedges,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binedges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("index_between", 1, 2, 2, 1); __PYX_ERR(28, 59, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "index_between") < 0)) __PYX_ERR(28, 59, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_binedges = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("index_between", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 59, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.index_between", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_10index_between(__pyx_self, __pyx_v_x, __pyx_v_binedges);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_10index_between(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_binedges) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  std::vector<double>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("index_between", 0);

  /* "include/Functions.pyx":63
 *     Return the index of the bin which would contain x, or -1 if there is no enclosing
 *     bin in the given set of n+1 bin edges."""
 *     return c.index_between(x, binedges)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(28, 63, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_double(__pyx_v_binedges); if (unlikely(PyErr_Occurred())) __PYX_ERR(28, 63, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_int(YODA::index_between(__pyx_t_1, __pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(28, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":59
 * 
 * 
 * def index_between(x, binedges):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the index of the bin which would contain x, or -1 if there is no enclosing
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.index_between", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":66
 * 
 * 
 * def mean(sample):             # <<<<<<<<<<<<<<
 *     """(list[float]) -> float
 *     Return the unweighted mean of the entries in the provided sample list."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_13mean(PyObject *__pyx_self, PyObject *__pyx_v_sample); /*proto*/
static char __pyx_doc_4yoda_4core_12mean[] = "mean(sample)\n(list[float]) -> float\n    Return the unweighted mean of the entries in the provided sample list.";
static PyMethodDef __pyx_mdef_4yoda_4core_13mean = {"mean", (PyCFunction)__pyx_pw_4yoda_4core_13mean, METH_O, __pyx_doc_4yoda_4core_12mean};
static PyObject *__pyx_pw_4yoda_4core_13mean(PyObject *__pyx_self, PyObject *__pyx_v_sample) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mean (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_12mean(__pyx_self, ((PyObject *)__pyx_v_sample));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_12mean(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_sample) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<int>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("mean", 0);

  /* "include/Functions.pyx":69
 *     """(list[float]) -> float
 *     Return the unweighted mean of the entries in the provided sample list."""
 *     return c.mean(sample)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_from_py_int(__pyx_v_sample); if (unlikely(PyErr_Occurred())) __PYX_ERR(28, 69, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(YODA::mean(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":66
 * 
 * 
 * def mean(sample):             # <<<<<<<<<<<<<<
 *     """(list[float]) -> float
 *     Return the unweighted mean of the entries in the provided sample list."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.core.mean", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":72
 * 
 * 
 * def covariance(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(list[float], list[float]) -> float
 *     Return the unweighted covariance of the two provided sample lists."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_15covariance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_14covariance[] = "covariance(sample1, sample2)\n(list[float], list[float]) -> float\n    Return the unweighted covariance of the two provided sample lists.";
static PyMethodDef __pyx_mdef_4yoda_4core_15covariance = {"covariance", (PyCFunction)__pyx_pw_4yoda_4core_15covariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_14covariance};
static PyObject *__pyx_pw_4yoda_4core_15covariance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_sample1 = 0;
  PyObject *__pyx_v_sample2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("covariance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sample1,&__pyx_n_s_sample2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sample1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sample2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("covariance", 1, 2, 2, 1); __PYX_ERR(28, 72, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "covariance") < 0)) __PYX_ERR(28, 72, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_sample1 = values[0];
    __pyx_v_sample2 = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("covariance", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 72, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.covariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_14covariance(__pyx_self, __pyx_v_sample1, __pyx_v_sample2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_14covariance(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_sample1, PyObject *__pyx_v_sample2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<int>  __pyx_t_1;
  std::vector<int>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("covariance", 0);

  /* "include/Functions.pyx":75
 *     """(list[float], list[float]) -> float
 *     Return the unweighted covariance of the two provided sample lists."""
 *     return c.covariance(sample1, sample2)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_from_py_int(__pyx_v_sample1); if (unlikely(PyErr_Occurred())) __PYX_ERR(28, 75, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_int(__pyx_v_sample2); if (unlikely(PyErr_Occurred())) __PYX_ERR(28, 75, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(YODA::covariance(__pyx_t_1, __pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(28, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":72
 * 
 * 
 * def covariance(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(list[float], list[float]) -> float
 *     Return the unweighted covariance of the two provided sample lists."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.covariance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/Functions.pyx":78
 * 
 * 
 * def correlation(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the unweighted correlation of the two provided sample lists."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_17correlation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_16correlation[] = "correlation(sample1, sample2)\n(float, list[float]) -> int\n    Return the unweighted correlation of the two provided sample lists.";
static PyMethodDef __pyx_mdef_4yoda_4core_17correlation = {"correlation", (PyCFunction)__pyx_pw_4yoda_4core_17correlation, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_16correlation};
static PyObject *__pyx_pw_4yoda_4core_17correlation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_sample1 = 0;
  PyObject *__pyx_v_sample2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("correlation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sample1,&__pyx_n_s_sample2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sample1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sample2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("correlation", 1, 2, 2, 1); __PYX_ERR(28, 78, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "correlation") < 0)) __PYX_ERR(28, 78, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_sample1 = values[0];
    __pyx_v_sample2 = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("correlation", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(28, 78, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.correlation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_16correlation(__pyx_self, __pyx_v_sample1, __pyx_v_sample2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_16correlation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_sample1, PyObject *__pyx_v_sample2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<int>  __pyx_t_1;
  std::vector<int>  __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("correlation", 0);

  /* "include/Functions.pyx":81
 *     """(float, list[float]) -> int
 *     Return the unweighted correlation of the two provided sample lists."""
 *     return c.correlation(sample1, sample2)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_from_py_int(__pyx_v_sample1); if (unlikely(PyErr_Occurred())) __PYX_ERR(28, 81, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_vector_from_py_int(__pyx_v_sample2); if (unlikely(PyErr_Occurred())) __PYX_ERR(28, 81, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(YODA::correlation(__pyx_t_1, __pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(28, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "include/Functions.pyx":78
 * 
 * 
 * def correlation(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the unweighted correlation of the two provided sample lists."""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.correlation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":13
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     import re
 *     if patterns:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_19_pattern_check(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_18_pattern_check[] = "_pattern_check(name, patterns, unpatterns)";
static PyMethodDef __pyx_mdef_4yoda_4core_19_pattern_check = {"_pattern_check", (PyCFunction)__pyx_pw_4yoda_4core_19_pattern_check, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_18_pattern_check};
static PyObject *__pyx_pw_4yoda_4core_19_pattern_check(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_patterns = 0;
  PyObject *__pyx_v_unpatterns = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_pattern_check (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name_2,&__pyx_n_s_patterns,&__pyx_n_s_unpatterns,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name_2)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_patterns)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_pattern_check", 1, 3, 3, 1); __PYX_ERR(2, 13, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unpatterns)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_pattern_check", 1, 3, 3, 2); __PYX_ERR(2, 13, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_pattern_check") < 0)) __PYX_ERR(2, 13, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_name = values[0];
    __pyx_v_patterns = values[1];
    __pyx_v_unpatterns = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_pattern_check", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 13, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core._pattern_check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_18_pattern_check(__pyx_self, __pyx_v_name, __pyx_v_patterns, __pyx_v_unpatterns);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_4yoda_4core_14_pattern_check_2generator2(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "include/IO.pyx":19
 *             patterns = [patterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if not any(re.compile(patt).match(name) for patt in patterns):             # <<<<<<<<<<<<<<
 *             return False
 *     if unpatterns:
 */

static PyObject *__pyx_pf_4yoda_4core_14_pattern_check_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *)__pyx_tp_new_4yoda_4core___pyx_scope_struct_5_genexpr(__pyx_ptype_4yoda_4core___pyx_scope_struct_5_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_4yoda_4core_14_pattern_check_2generator2, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_pattern_check_locals_genexpr, __pyx_n_s_yoda_core); if (unlikely(!gen)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core._pattern_check.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_4yoda_4core_14_pattern_check_2generator2(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *__pyx_cur_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(2, 19, __pyx_L1_error)
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_patterns)) { __Pyx_RaiseClosureNameError("patterns"); __PYX_ERR(2, 19, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_patterns)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_patterns)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_patterns; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_patterns); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 19, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 19, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 19, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 19, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 19, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 19, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_patt);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_patt, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_re)) { __Pyx_RaiseClosureNameError("re"); __PYX_ERR(2, 19, __pyx_L1_error) }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_re, __pyx_n_s_compile); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_cur_scope->__pyx_v_patt); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_patt);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_patt);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_cur_scope->__pyx_v_patt);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_match); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_name)) { __Pyx_RaiseClosureNameError("name"); __PYX_ERR(2, 19, __pyx_L1_error) }
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_name);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_name);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_name);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_9) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
  }
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_4yoda_4core_14_pattern_check_5generator3(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "include/IO.pyx":25
 *             unpatterns = [unpatterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if any(re.compile(patt).match(name) for patt in unpatterns):             # <<<<<<<<<<<<<<
 *             return False
 *     return True
 */

static PyObject *__pyx_pf_4yoda_4core_14_pattern_check_3genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *)__pyx_tp_new_4yoda_4core___pyx_scope_struct_6_genexpr(__pyx_ptype_4yoda_4core___pyx_scope_struct_6_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_4yoda_4core_14_pattern_check_5generator3, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_pattern_check_locals_genexpr, __pyx_n_s_yoda_core); if (unlikely(!gen)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.core._pattern_check.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_4yoda_4core_14_pattern_check_5generator3(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *__pyx_cur_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(2, 25, __pyx_L1_error)
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_unpatterns)) { __Pyx_RaiseClosureNameError("unpatterns"); __PYX_ERR(2, 25, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_unpatterns)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_unpatterns)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_outer_scope->__pyx_v_unpatterns; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_unpatterns); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 25, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 25, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 25, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 25, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 25, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 25, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_patt);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_patt, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_re)) { __Pyx_RaiseClosureNameError("re"); __PYX_ERR(2, 25, __pyx_L1_error) }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_re, __pyx_n_s_compile); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_cur_scope->__pyx_v_patt); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_patt);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_patt);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_cur_scope->__pyx_v_patt);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_match); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_name)) { __Pyx_RaiseClosureNameError("name"); __PYX_ERR(2, 25, __pyx_L1_error) }
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_name);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_name);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_name);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_9) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
  }
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":13
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     import re
 *     if patterns:
 */

static PyObject *__pyx_pf_4yoda_4core_18_pattern_check(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_name, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("_pattern_check", 0);
  __pyx_cur_scope = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)__pyx_tp_new_4yoda_4core___pyx_scope_struct_4__pattern_check(__pyx_ptype_4yoda_4core___pyx_scope_struct_4__pattern_check, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_name = __pyx_v_name;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_name);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_name);
  __pyx_cur_scope->__pyx_v_patterns = __pyx_v_patterns;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_patterns);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_patterns);
  __pyx_cur_scope->__pyx_v_unpatterns = __pyx_v_unpatterns;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_unpatterns);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_unpatterns);

  /* "include/IO.pyx":14
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):
 *     import re             # <<<<<<<<<<<<<<
 *     if patterns:
 *         if not hasattr(patterns, "__iter__"):
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_re, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_re = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":15
 * def _pattern_check(name, patterns, unpatterns):
 *     import re
 *     if patterns:             # <<<<<<<<<<<<<<
 *         if not hasattr(patterns, "__iter__"):
 *             patterns = [patterns]
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_patterns); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 15, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "include/IO.pyx":16
 *     import re
 *     if patterns:
 *         if not hasattr(patterns, "__iter__"):             # <<<<<<<<<<<<<<
 *             patterns = [patterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 */
    __pyx_t_1 = __pyx_cur_scope->__pyx_v_patterns;
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyObject_HasAttr(__pyx_t_1, __pyx_n_s_iter); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 16, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = ((!(__pyx_t_2 != 0)) != 0);
    if (__pyx_t_3) {

      /* "include/IO.pyx":17
 *     if patterns:
 *         if not hasattr(patterns, "__iter__"):
 *             patterns = [patterns]             # <<<<<<<<<<<<<<
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if not any(re.compile(patt).match(name) for patt in patterns):
 */
      __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 17, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_patterns);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_patterns);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_cur_scope->__pyx_v_patterns);
      __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_patterns);
      __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_patterns, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;

      /* "include/IO.pyx":16
 *     import re
 *     if patterns:
 *         if not hasattr(patterns, "__iter__"):             # <<<<<<<<<<<<<<
 *             patterns = [patterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 */
    }

    /* "include/IO.pyx":19
 *             patterns = [patterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if not any(re.compile(patt).match(name) for patt in patterns):             # <<<<<<<<<<<<<<
 *             return False
 *     if unpatterns:
 */
    __pyx_t_1 = __pyx_pf_4yoda_4core_14_pattern_check_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_Generator_Next(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(2, 19, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = ((!__pyx_t_3) != 0);
    if (__pyx_t_2) {

      /* "include/IO.pyx":20
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if not any(re.compile(patt).match(name) for patt in patterns):
 *             return False             # <<<<<<<<<<<<<<
 *     if unpatterns:
 *         if not hasattr(unpatterns, "__iter__"):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "include/IO.pyx":19
 *             patterns = [patterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if not any(re.compile(patt).match(name) for patt in patterns):             # <<<<<<<<<<<<<<
 *             return False
 *     if unpatterns:
 */
    }

    /* "include/IO.pyx":15
 * def _pattern_check(name, patterns, unpatterns):
 *     import re
 *     if patterns:             # <<<<<<<<<<<<<<
 *         if not hasattr(patterns, "__iter__"):
 *             patterns = [patterns]
 */
  }

  /* "include/IO.pyx":21
 *         if not any(re.compile(patt).match(name) for patt in patterns):
 *             return False
 *     if unpatterns:             # <<<<<<<<<<<<<<
 *         if not hasattr(unpatterns, "__iter__"):
 *             unpatterns = [unpatterns]
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_unpatterns); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 21, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "include/IO.pyx":22
 *             return False
 *     if unpatterns:
 *         if not hasattr(unpatterns, "__iter__"):             # <<<<<<<<<<<<<<
 *             unpatterns = [unpatterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 */
    __pyx_t_4 = __pyx_cur_scope->__pyx_v_unpatterns;
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_2 = PyObject_HasAttr(__pyx_t_4, __pyx_n_s_iter); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 22, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_3 = ((!(__pyx_t_2 != 0)) != 0);
    if (__pyx_t_3) {

      /* "include/IO.pyx":23
 *     if unpatterns:
 *         if not hasattr(unpatterns, "__iter__"):
 *             unpatterns = [unpatterns]             # <<<<<<<<<<<<<<
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if any(re.compile(patt).match(name) for patt in unpatterns):
 */
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 23, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_cur_scope->__pyx_v_unpatterns);
      __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_unpatterns);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_cur_scope->__pyx_v_unpatterns);
      __Pyx_GOTREF(__pyx_cur_scope->__pyx_v_unpatterns);
      __Pyx_DECREF_SET(__pyx_cur_scope->__pyx_v_unpatterns, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;

      /* "include/IO.pyx":22
 *             return False
 *     if unpatterns:
 *         if not hasattr(unpatterns, "__iter__"):             # <<<<<<<<<<<<<<
 *             unpatterns = [unpatterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 */
    }

    /* "include/IO.pyx":25
 *             unpatterns = [unpatterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if any(re.compile(patt).match(name) for patt in unpatterns):             # <<<<<<<<<<<<<<
 *             return False
 *     return True
 */
    __pyx_t_4 = __pyx_pf_4yoda_4core_14_pattern_check_3genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_Generator_Next(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(2, 25, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_3) {

      /* "include/IO.pyx":26
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if any(re.compile(patt).match(name) for patt in unpatterns):
 *             return False             # <<<<<<<<<<<<<<
 *     return True
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_False);
      __pyx_r = Py_False;
      goto __pyx_L0;

      /* "include/IO.pyx":25
 *             unpatterns = [unpatterns]
 *         ## Compile on the fly: works because compile(compiled_re) -> compiled_re
 *         if any(re.compile(patt).match(name) for patt in unpatterns):             # <<<<<<<<<<<<<<
 *             return False
 *     return True
 */
    }

    /* "include/IO.pyx":21
 *         if not any(re.compile(patt).match(name) for patt in patterns):
 *             return False
 *     if unpatterns:             # <<<<<<<<<<<<<<
 *         if not hasattr(unpatterns, "__iter__"):
 *             unpatterns = [unpatterns]
 */
  }

  /* "include/IO.pyx":27
 *         if any(re.compile(patt).match(name) for patt in unpatterns):
 *             return False
 *     return True             # <<<<<<<<<<<<<<
 * 
 * ## Make a Python list of analysis objects from a C++ vector of them
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "include/IO.pyx":13
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     import re
 *     if patterns:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core._pattern_check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":30
 * 
 * ## Make a Python list of analysis objects from a C++ vector of them
 * cdef list _aobjects_to_list(vector[c.AnalysisObject*]* aobjects, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     cdef list out = []
 *     cdef c.AnalysisObject* ao
 */

static PyObject *__pyx_f_4yoda_4core__aobjects_to_list(std::vector<YODA::AnalysisObject *>  *__pyx_v_aobjects, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  PyObject *__pyx_v_out = 0;
  YODA::AnalysisObject *__pyx_v_ao;
  size_t __pyx_v_i;
  PyObject *__pyx_v_newao = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  std::string __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("_aobjects_to_list", 0);

  /* "include/IO.pyx":31
 * ## Make a Python list of analysis objects from a C++ vector of them
 * cdef list _aobjects_to_list(vector[c.AnalysisObject*]* aobjects, patterns, unpatterns):
 *     cdef list out = []             # <<<<<<<<<<<<<<
 *     cdef c.AnalysisObject* ao
 *     cdef size_t i
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/IO.pyx":34
 *     cdef c.AnalysisObject* ao
 *     cdef size_t i
 *     for i in xrange(aobjects.size()):             # <<<<<<<<<<<<<<
 *         ao = deref(aobjects)[i]
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 */
  __pyx_t_2 = __pyx_v_aobjects->size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "include/IO.pyx":35
 *     cdef size_t i
 *     for i in xrange(aobjects.size()):
 *         ao = deref(aobjects)[i]             # <<<<<<<<<<<<<<
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls(globals()[ao.type()], ao)
 */
    __pyx_v_ao = ((*__pyx_v_aobjects)[__pyx_v_i]);

    /* "include/IO.pyx":37
 *         ao = deref(aobjects)[i]
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls(globals()[ao.type()], ao)             # <<<<<<<<<<<<<<
 *         if _pattern_check(newao.path, patterns, unpatterns):
 *             out.append(newao)
 */
    __pyx_t_1 = __Pyx_Globals(); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    try {
      __pyx_t_4 = __pyx_v_ao->type();
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(2, 37, __pyx_L1_error)
    }
    __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_GetItem(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __pyx_f_4yoda_4util_new_owned_cls(__pyx_t_6, __pyx_v_ao); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_newao, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "include/IO.pyx":38
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls(globals()[ao.type()], ao)
 *         if _pattern_check(newao.path, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *             out.append(newao)
 *     return out
 */
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_pattern_check); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_newao, __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_patterns);
    __Pyx_GIVEREF(__pyx_v_patterns);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_v_patterns);
    __Pyx_INCREF(__pyx_v_unpatterns);
    __Pyx_GIVEREF(__pyx_v_unpatterns);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_v_unpatterns);
    __pyx_t_1 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(2, 38, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_10) {

      /* "include/IO.pyx":39
 *         newao = cutil.new_owned_cls(globals()[ao.type()], ao)
 *         if _pattern_check(newao.path, patterns, unpatterns):
 *             out.append(newao)             # <<<<<<<<<<<<<<
 *     return out
 * 
 */
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_out, __pyx_v_newao); if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(2, 39, __pyx_L1_error)

      /* "include/IO.pyx":38
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls(globals()[ao.type()], ao)
 *         if _pattern_check(newao.path, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *             out.append(newao)
 *     return out
 */
    }
  }

  /* "include/IO.pyx":40
 *         if _pattern_check(newao.path, patterns, unpatterns):
 *             out.append(newao)
 *     return out             # <<<<<<<<<<<<<<
 * 
 * ## Make a Python dict of analysis objects from a C++ vector of them
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "include/IO.pyx":30
 * 
 * ## Make a Python list of analysis objects from a C++ vector of them
 * cdef list _aobjects_to_list(vector[c.AnalysisObject*]* aobjects, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     cdef list out = []
 *     cdef c.AnalysisObject* ao
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core._aobjects_to_list", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XDECREF(__pyx_v_newao);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":43
 * 
 * ## Make a Python dict of analysis objects from a C++ vector of them
 * cdef dict _aobjects_to_dict(vector[c.AnalysisObject*]* aobjects, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     cdef dict out = {}
 *     cdef c.AnalysisObject* ao
 */

static PyObject *__pyx_f_4yoda_4core__aobjects_to_dict(std::vector<YODA::AnalysisObject *>  *__pyx_v_aobjects, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  PyObject *__pyx_v_out = 0;
  YODA::AnalysisObject *__pyx_v_ao;
  size_t __pyx_v_i;
  PyObject *__pyx_v_newao = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  std::string __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  __Pyx_RefNannySetupContext("_aobjects_to_dict", 0);

  /* "include/IO.pyx":44
 * ## Make a Python dict of analysis objects from a C++ vector of them
 * cdef dict _aobjects_to_dict(vector[c.AnalysisObject*]* aobjects, patterns, unpatterns):
 *     cdef dict out = {}             # <<<<<<<<<<<<<<
 *     cdef c.AnalysisObject* ao
 *     cdef size_t i
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/IO.pyx":47
 *     cdef c.AnalysisObject* ao
 *     cdef size_t i
 *     for i in xrange(aobjects.size()):             # <<<<<<<<<<<<<<
 *         ao = deref(aobjects)[i]
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 */
  __pyx_t_2 = __pyx_v_aobjects->size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "include/IO.pyx":48
 *     cdef size_t i
 *     for i in xrange(aobjects.size()):
 *         ao = deref(aobjects)[i]             # <<<<<<<<<<<<<<
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls( globals()[ao.type()], ao)
 */
    __pyx_v_ao = ((*__pyx_v_aobjects)[__pyx_v_i]);

    /* "include/IO.pyx":50
 *         ao = deref(aobjects)[i]
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls( globals()[ao.type()], ao)             # <<<<<<<<<<<<<<
 *         if _pattern_check(newao.path, patterns, unpatterns):
 *             out[newao.path] = newao
 */
    __pyx_t_1 = __Pyx_Globals(); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    try {
      __pyx_t_4 = __pyx_v_ao->type();
    } catch(...) {
      translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
      __PYX_ERR(2, 50, __pyx_L1_error)
    }
    __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_GetItem(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __pyx_f_4yoda_4util_new_owned_cls(__pyx_t_6, __pyx_v_ao); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_newao, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "include/IO.pyx":51
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls( globals()[ao.type()], ao)
 *         if _pattern_check(newao.path, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *             out[newao.path] = newao
 *     return out
 */
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_pattern_check); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_newao, __pyx_n_s_path); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_patterns);
    __Pyx_GIVEREF(__pyx_v_patterns);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_v_patterns);
    __Pyx_INCREF(__pyx_v_unpatterns);
    __Pyx_GIVEREF(__pyx_v_unpatterns);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_v_unpatterns);
    __pyx_t_1 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(2, 51, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_10) {

      /* "include/IO.pyx":52
 *         newao = cutil.new_owned_cls( globals()[ao.type()], ao)
 *         if _pattern_check(newao.path, patterns, unpatterns):
 *             out[newao.path] = newao             # <<<<<<<<<<<<<<
 *     return out
 * 
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_newao, __pyx_n_s_path); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 52, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(PyDict_SetItem(__pyx_v_out, __pyx_t_5, __pyx_v_newao) < 0)) __PYX_ERR(2, 52, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "include/IO.pyx":51
 *         ## NOTE: automatic type conversion by passing the type() as a key to globals()
 *         newao = cutil.new_owned_cls( globals()[ao.type()], ao)
 *         if _pattern_check(newao.path, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *             out[newao.path] = newao
 *     return out
 */
    }
  }

  /* "include/IO.pyx":53
 *         if _pattern_check(newao.path, patterns, unpatterns):
 *             out[newao.path] = newao
 *     return out             # <<<<<<<<<<<<<<
 * 
 * ## Set a istringstream's string from a C/Python string
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "include/IO.pyx":43
 * 
 * ## Make a Python dict of analysis objects from a C++ vector of them
 * cdef dict _aobjects_to_dict(vector[c.AnalysisObject*]* aobjects, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     cdef dict out = {}
 *     cdef c.AnalysisObject* ao
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yoda.core._aobjects_to_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XDECREF(__pyx_v_newao);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":56
 * 
 * ## Set a istringstream's string from a C/Python string
 * cdef void _make_iss(c.istringstream &iss, char* s):             # <<<<<<<<<<<<<<
 *     iss.str(string(s))
 * 
 */

static void __pyx_f_4yoda_4core__make_iss(std::istringstream &__pyx_v_iss, char *__pyx_v_s) {
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("_make_iss", 0);

  /* "include/IO.pyx":57
 * ## Set a istringstream's string from a C/Python string
 * cdef void _make_iss(c.istringstream &iss, char* s):
 *     iss.str(string(s))             # <<<<<<<<<<<<<<
 * 
 * ## Read a file's contents as a returned string
 */
  try {
    __pyx_t_1 = std::string(__pyx_v_s);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(2, 57, __pyx_L1_error)
  }
  __pyx_v_iss.str(__pyx_t_1);

  /* "include/IO.pyx":56
 * 
 * ## Set a istringstream's string from a C/Python string
 * cdef void _make_iss(c.istringstream &iss, char* s):             # <<<<<<<<<<<<<<
 *     iss.str(string(s))
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("yoda.core._make_iss", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "include/IO.pyx":61
 * ## Read a file's contents as a returned string
 * ## The file argument can either be a file object, filename, or special "-" reference to stdin
 * def _str_from_file(file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_21_str_from_file(PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename); /*proto*/
static char __pyx_doc_4yoda_4core_20_str_from_file[] = "_str_from_file(file_or_filename)";
static PyMethodDef __pyx_mdef_4yoda_4core_21_str_from_file = {"_str_from_file", (PyCFunction)__pyx_pw_4yoda_4core_21_str_from_file, METH_O, __pyx_doc_4yoda_4core_20_str_from_file};
static PyObject *__pyx_pw_4yoda_4core_21_str_from_file(PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_str_from_file (wrapper)", 0);
  __pyx_r = __pyx_pf_4yoda_4core_20_str_from_file(__pyx_self, ((PyObject *)__pyx_v_file_or_filename));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_20_str_from_file(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("_str_from_file", 0);

  /* "include/IO.pyx":62
 * ## The file argument can either be a file object, filename, or special "-" reference to stdin
 * def _str_from_file(file_or_filename):
 *     if hasattr(file_or_filename, 'read'):             # <<<<<<<<<<<<<<
 *         s = file_or_filename.read()
 *     elif file_or_filename == "-":
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_file_or_filename, __pyx_n_s_read); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(2, 62, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "include/IO.pyx":63
 * def _str_from_file(file_or_filename):
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()             # <<<<<<<<<<<<<<
 *     elif file_or_filename == "-":
 *         s = sys.stdin.read()
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_file_or_filename, __pyx_n_s_read); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 63, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 63, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 63, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_s = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "include/IO.pyx":62
 * ## The file argument can either be a file object, filename, or special "-" reference to stdin
 * def _str_from_file(file_or_filename):
 *     if hasattr(file_or_filename, 'read'):             # <<<<<<<<<<<<<<
 *         s = file_or_filename.read()
 *     elif file_or_filename == "-":
 */
    goto __pyx_L3;
  }

  /* "include/IO.pyx":64
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()
 *     elif file_or_filename == "-":             # <<<<<<<<<<<<<<
 *         s = sys.stdin.read()
 *     else:
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_file_or_filename, __pyx_kp_s__10, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 64, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "include/IO.pyx":65
 *         s = file_or_filename.read()
 *     elif file_or_filename == "-":
 *         s = sys.stdin.read()             # <<<<<<<<<<<<<<
 *     else:
 *         f = open(file_or_filename)
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_sys); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_stdin); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_read); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 65, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 65, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 65, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_s = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "include/IO.pyx":64
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()
 *     elif file_or_filename == "-":             # <<<<<<<<<<<<<<
 *         s = sys.stdin.read()
 *     else:
 */
    goto __pyx_L3;
  }

  /* "include/IO.pyx":67
 *         s = sys.stdin.read()
 *     else:
 *         f = open(file_or_filename)             # <<<<<<<<<<<<<<
 *         s = f.read()
 *         f.close()
 */
  /*else*/ {
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 67, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_file_or_filename);
    __Pyx_GIVEREF(__pyx_v_file_or_filename);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_file_or_filename);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 67, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_f = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "include/IO.pyx":68
 *     else:
 *         f = open(file_or_filename)
 *         s = f.read()             # <<<<<<<<<<<<<<
 *         f.close()
 *     return s
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_read); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 68, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 68, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_s = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "include/IO.pyx":69
 *         f = open(file_or_filename)
 *         s = f.read()
 *         f.close()             # <<<<<<<<<<<<<<
 *     return s
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_close); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 69, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 69, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 69, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "include/IO.pyx":70
 *         s = f.read()
 *         f.close()
 *     return s             # <<<<<<<<<<<<<<
 * 
 * ## Write a string to a file
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_s);
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "include/IO.pyx":61
 * ## Read a file's contents as a returned string
 * ## The file argument can either be a file object, filename, or special "-" reference to stdin
 * def _str_from_file(file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yoda.core._str_from_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":74
 * ## Write a string to a file
 * ## The file argument can either be a file object, filename, or special "-" reference to stdout
 * def _str_to_file(s, file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_23_str_to_file(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_22_str_to_file[] = "_str_to_file(s, file_or_filename)";
static PyMethodDef __pyx_mdef_4yoda_4core_23_str_to_file = {"_str_to_file", (PyCFunction)__pyx_pw_4yoda_4core_23_str_to_file, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_22_str_to_file};
static PyObject *__pyx_pw_4yoda_4core_23_str_to_file(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_s = 0;
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_str_to_file (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_s,&__pyx_n_s_file_or_filename,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_str_to_file", 1, 2, 2, 1); __PYX_ERR(2, 74, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_str_to_file") < 0)) __PYX_ERR(2, 74, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_s = values[0];
    __pyx_v_file_or_filename = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_str_to_file", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 74, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core._str_to_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_22_str_to_file(__pyx_self, __pyx_v_s, __pyx_v_file_or_filename);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_22_str_to_file(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_s, PyObject *__pyx_v_file_or_filename) {
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("_str_to_file", 0);
  __Pyx_INCREF(__pyx_v_s);

  /* "include/IO.pyx":75
 * ## The file argument can either be a file object, filename, or special "-" reference to stdout
 * def _str_to_file(s, file_or_filename):
 *     if hasattr(file_or_filename, 'write'):             # <<<<<<<<<<<<<<
 *         file_or_filename.write(s)
 *     elif file_or_filename == "-":
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_file_or_filename, __pyx_n_s_write); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(2, 75, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "include/IO.pyx":76
 * def _str_to_file(s, file_or_filename):
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)             # <<<<<<<<<<<<<<
 *     elif file_or_filename == "-":
 *         sys.stdout.write(s)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_file_or_filename, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 76, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 76, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_v_s);
      __Pyx_GIVEREF(__pyx_v_s);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_s);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 76, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "include/IO.pyx":75
 * ## The file argument can either be a file object, filename, or special "-" reference to stdout
 * def _str_to_file(s, file_or_filename):
 *     if hasattr(file_or_filename, 'write'):             # <<<<<<<<<<<<<<
 *         file_or_filename.write(s)
 *     elif file_or_filename == "-":
 */
    goto __pyx_L3;
  }

  /* "include/IO.pyx":77
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)
 *     elif file_or_filename == "-":             # <<<<<<<<<<<<<<
 *         sys.stdout.write(s)
 *     else:
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_file_or_filename, __pyx_kp_s__10, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 77, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "include/IO.pyx":78
 *         file_or_filename.write(s)
 *     elif file_or_filename == "-":
 *         sys.stdout.write(s)             # <<<<<<<<<<<<<<
 *     else:
 *         f = open(file_or_filename, "w")
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_sys); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 78, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 78, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 78, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 78, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 78, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(__pyx_v_s);
      __Pyx_GIVEREF(__pyx_v_s);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_s);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 78, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "include/IO.pyx":77
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)
 *     elif file_or_filename == "-":             # <<<<<<<<<<<<<<
 *         sys.stdout.write(s)
 *     else:
 */
    goto __pyx_L3;
  }

  /* "include/IO.pyx":80
 *         sys.stdout.write(s)
 *     else:
 *         f = open(file_or_filename, "w")             # <<<<<<<<<<<<<<
 *         s = f.write(s)
 *         f.close()
 */
  /*else*/ {
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_file_or_filename);
    __Pyx_GIVEREF(__pyx_v_file_or_filename);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_file_or_filename);
    __Pyx_INCREF(__pyx_n_s_w);
    __Pyx_GIVEREF(__pyx_n_s_w);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_n_s_w);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 80, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_f = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "include/IO.pyx":81
 *     else:
 *         f = open(file_or_filename, "w")
 *         s = f.write(s)             # <<<<<<<<<<<<<<
 *         f.close()
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_write); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_s); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(__pyx_v_s);
      __Pyx_GIVEREF(__pyx_v_s);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_s);
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 81, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_s, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "include/IO.pyx":82
 *         f = open(file_or_filename, "w")
 *         s = f.write(s)
 *         f.close()             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_close); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 82, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 82, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "include/IO.pyx":74
 * ## Write a string to a file
 * ## The file argument can either be a file object, filename, or special "-" reference to stdout
 * def _str_to_file(s, file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yoda.core._str_to_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":90
 * ##
 * 
 * def read(filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided filename, auto-determining the format
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_25read(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_24read[] = "read(filename, asdict=True, patterns=None, unpatterns=None)\n\n    Read data objects from the provided filename, auto-determining the format\n    from the file extension.\n\n    The loaded data objects can be filtered on their path strings, using the\n    optional patterns and unpatterns arguments. These can be strings, compiled\n    regex objects with a 'match' method, or any iterable of those types. If\n    given, only analyses with paths which match at least one pattern, and do not\n    match any unpatterns, will be returned.\n\n    Returns a dict or list of analysis objects depending on the asdict argument.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_25read = {"read", (PyCFunction)__pyx_pw_4yoda_4core_25read, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_24read};
static PyObject *__pyx_pw_4yoda_4core_25read(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_asdict = 0;
  PyObject *__pyx_v_patterns = 0;
  PyObject *__pyx_v_unpatterns = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_asdict,&__pyx_n_s_patterns,&__pyx_n_s_unpatterns,0};
    PyObject* values[4] = {0,0,0,0};
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_filename)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_asdict);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_patterns);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unpatterns);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "read") < 0)) __PYX_ERR(2, 90, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_filename = values[0];
    __pyx_v_asdict = values[1];
    __pyx_v_patterns = values[2];
    __pyx_v_unpatterns = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("read", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 90, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_24read(__pyx_self, __pyx_v_filename, __pyx_v_asdict, __pyx_v_patterns, __pyx_v_unpatterns);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_24read(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  std::istringstream __pyx_v_iss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_aobjects;
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  char *__pyx_t_4;
  std::string __pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("read", 0);

  /* "include/IO.pyx":105
 *     cdef c.istringstream iss
 *     cdef vector[c.AnalysisObject*] aobjects
 *     f = open(filename)             # <<<<<<<<<<<<<<
 *     s = f.read()
 *     f.close()
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_filename);
  __Pyx_GIVEREF(__pyx_v_filename);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_filename);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_f = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "include/IO.pyx":106
 *     cdef vector[c.AnalysisObject*] aobjects
 *     f = open(filename)
 *     s = f.read()             # <<<<<<<<<<<<<<
 *     f.close()
 *     _make_iss(iss, s)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 106, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 106, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_s = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "include/IO.pyx":107
 *     f = open(filename)
 *     s = f.read()
 *     f.close()             # <<<<<<<<<<<<<<
 *     _make_iss(iss, s)
 *     c.Reader_create(filename).read(iss, aobjects)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_f, __pyx_n_s_close); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 107, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 107, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":108
 *     s = f.read()
 *     f.close()
 *     _make_iss(iss, s)             # <<<<<<<<<<<<<<
 *     c.Reader_create(filename).read(iss, aobjects)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 */
  __pyx_t_4 = __Pyx_PyObject_AsString(__pyx_v_s); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(2, 108, __pyx_L1_error)
  __pyx_f_4yoda_4core__make_iss(__pyx_v_iss, __pyx_t_4);

  /* "include/IO.pyx":109
 *     f.close()
 *     _make_iss(iss, s)
 *     c.Reader_create(filename).read(iss, aobjects)             # <<<<<<<<<<<<<<
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 * 
 */
  __pyx_t_5 = __pyx_convert_string_from_py_std__in_string(__pyx_v_filename); if (unlikely(PyErr_Occurred())) __PYX_ERR(2, 109, __pyx_L1_error)
  try {
    YODA::mkReader(__pyx_t_5).read(__pyx_v_iss, __pyx_v_aobjects);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(2, 109, __pyx_L1_error)
  }

  /* "include/IO.pyx":110
 *     _make_iss(iss, s)
 *     c.Reader_create(filename).read(iss, aobjects)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_asdict); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 110, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_1 = __pyx_f_4yoda_4core__aobjects_to_dict((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_t_1;
    __pyx_t_1 = 0;
  } else {
    __pyx_t_1 = __pyx_f_4yoda_4core__aobjects_to_list((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "include/IO.pyx":90
 * ##
 * 
 * def read(filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided filename, auto-determining the format
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yoda.core.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":113
 * 
 * 
 * def readYODA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided YODA-format file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_27readYODA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_26readYODA[] = "readYODA(file_or_filename, asdict=True, patterns=None, unpatterns=None)\n\n    Read data objects from the provided YODA-format file.\n\n    The loaded data objects can be filtered on their path strings, using the\n    optional patterns and unpatterns arguments. These can be strings, compiled\n    regex objects with a 'match' method, or any iterable of those types. If\n    given, only analyses with paths which match at least one pattern, and do not\n    match any unpatterns, will be returned.\n\n    Returns a dict or list of analysis objects depending on the asdict argument.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_27readYODA = {"readYODA", (PyCFunction)__pyx_pw_4yoda_4core_27readYODA, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_26readYODA};
static PyObject *__pyx_pw_4yoda_4core_27readYODA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_v_asdict = 0;
  PyObject *__pyx_v_patterns = 0;
  PyObject *__pyx_v_unpatterns = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readYODA (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_file_or_filename,&__pyx_n_s_asdict,&__pyx_n_s_patterns,&__pyx_n_s_unpatterns,0};
    PyObject* values[4] = {0,0,0,0};
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_asdict);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_patterns);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unpatterns);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readYODA") < 0)) __PYX_ERR(2, 113, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_file_or_filename = values[0];
    __pyx_v_asdict = values[1];
    __pyx_v_patterns = values[2];
    __pyx_v_unpatterns = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readYODA", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 113, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.readYODA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_26readYODA(__pyx_self, __pyx_v_file_or_filename, __pyx_v_asdict, __pyx_v_patterns, __pyx_v_unpatterns);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_26readYODA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  std::istringstream __pyx_v_iss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_aobjects;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  char *__pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("readYODA", 0);

  /* "include/IO.pyx":127
 *     cdef c.istringstream iss
 *     cdef vector[c.AnalysisObject*] aobjects
 *     s = _str_from_file(file_or_filename)             # <<<<<<<<<<<<<<
 *     _make_iss(iss, s)
 *     c.ReaderYODA_create().read(iss, aobjects)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_from_file); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_file_or_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_file_or_filename);
    __Pyx_GIVEREF(__pyx_v_file_or_filename);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_file_or_filename);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_s = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":128
 *     cdef vector[c.AnalysisObject*] aobjects
 *     s = _str_from_file(file_or_filename)
 *     _make_iss(iss, s)             # <<<<<<<<<<<<<<
 *     c.ReaderYODA_create().read(iss, aobjects)
 *     # TODO: Add optional filter pattern in conversion to Python iterable (also for all other read functions)
 */
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_v_s); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(2, 128, __pyx_L1_error)
  __pyx_f_4yoda_4core__make_iss(__pyx_v_iss, __pyx_t_5);

  /* "include/IO.pyx":129
 *     s = _str_from_file(file_or_filename)
 *     _make_iss(iss, s)
 *     c.ReaderYODA_create().read(iss, aobjects)             # <<<<<<<<<<<<<<
 *     # TODO: Add optional filter pattern in conversion to Python iterable (also for all other read functions)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 */
  try {
    YODA::ReaderYODA::create().read(__pyx_v_iss, __pyx_v_aobjects);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(2, 129, __pyx_L1_error)
  }

  /* "include/IO.pyx":131
 *     c.ReaderYODA_create().read(iss, aobjects)
 *     # TODO: Add optional filter pattern in conversion to Python iterable (also for all other read functions)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_asdict); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 131, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_2 = __pyx_f_4yoda_4core__aobjects_to_dict((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __pyx_t_2 = __pyx_f_4yoda_4core__aobjects_to_list((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/IO.pyx":113
 * 
 * 
 * def readYODA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided YODA-format file.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.readYODA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":134
 * 
 * 
 * def readFLAT(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided FLAT-format file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_29readFLAT(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_28readFLAT[] = "readFLAT(file_or_filename, asdict=True, patterns=None, unpatterns=None)\n\n    Read data objects from the provided FLAT-format file.\n\n    The loaded data objects can be filtered on their path strings, using the\n    optional patterns and unpatterns arguments. These can be strings, compiled\n    regex objects with a 'match' method, or any iterable of those types. If\n    given, only analyses with paths which match at least one pattern, and do not\n    match any unpatterns, will be returned.\n\n    Returns a dict or list of analysis objects depending on the asdict argument.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_29readFLAT = {"readFLAT", (PyCFunction)__pyx_pw_4yoda_4core_29readFLAT, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_28readFLAT};
static PyObject *__pyx_pw_4yoda_4core_29readFLAT(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_v_asdict = 0;
  PyObject *__pyx_v_patterns = 0;
  PyObject *__pyx_v_unpatterns = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readFLAT (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_file_or_filename,&__pyx_n_s_asdict,&__pyx_n_s_patterns,&__pyx_n_s_unpatterns,0};
    PyObject* values[4] = {0,0,0,0};
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_asdict);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_patterns);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unpatterns);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readFLAT") < 0)) __PYX_ERR(2, 134, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_file_or_filename = values[0];
    __pyx_v_asdict = values[1];
    __pyx_v_patterns = values[2];
    __pyx_v_unpatterns = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readFLAT", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 134, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.readFLAT", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_28readFLAT(__pyx_self, __pyx_v_file_or_filename, __pyx_v_asdict, __pyx_v_patterns, __pyx_v_unpatterns);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_28readFLAT(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  std::istringstream __pyx_v_iss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_aobjects;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  char *__pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("readFLAT", 0);

  /* "include/IO.pyx":148
 *     cdef c.istringstream iss
 *     cdef vector[c.AnalysisObject*] aobjects
 *     s = _str_from_file(file_or_filename)             # <<<<<<<<<<<<<<
 *     _make_iss(iss, s)
 *     c.ReaderFLAT_create().read(iss, aobjects)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_from_file); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_file_or_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_file_or_filename);
    __Pyx_GIVEREF(__pyx_v_file_or_filename);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_file_or_filename);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_s = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":149
 *     cdef vector[c.AnalysisObject*] aobjects
 *     s = _str_from_file(file_or_filename)
 *     _make_iss(iss, s)             # <<<<<<<<<<<<<<
 *     c.ReaderFLAT_create().read(iss, aobjects)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 */
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_v_s); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(2, 149, __pyx_L1_error)
  __pyx_f_4yoda_4core__make_iss(__pyx_v_iss, __pyx_t_5);

  /* "include/IO.pyx":150
 *     s = _str_from_file(file_or_filename)
 *     _make_iss(iss, s)
 *     c.ReaderFLAT_create().read(iss, aobjects)             # <<<<<<<<<<<<<<
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 * 
 */
  try {
    YODA::ReaderFLAT::create().read(__pyx_v_iss, __pyx_v_aobjects);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(2, 150, __pyx_L1_error)
  }

  /* "include/IO.pyx":151
 *     _make_iss(iss, s)
 *     c.ReaderFLAT_create().read(iss, aobjects)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_asdict); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 151, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_2 = __pyx_f_4yoda_4core__aobjects_to_dict((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __pyx_t_2 = __pyx_f_4yoda_4core__aobjects_to_list((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/IO.pyx":134
 * 
 * 
 * def readFLAT(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided FLAT-format file.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.readFLAT", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":154
 * 
 * 
 * def readAIDA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided AIDA-format file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_31readAIDA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_30readAIDA[] = "readAIDA(file_or_filename, asdict=True, patterns=None, unpatterns=None)\n\n    Read data objects from the provided AIDA-format file.\n\n    The loaded data objects can be filtered on their path strings, using the\n    optional patterns and unpatterns arguments. These can be strings, compiled\n    regex objects with a 'match' method, or any iterable of those types. If\n    given, only analyses with paths which match at least one pattern, and do not\n    match any unpatterns, will be returned.\n\n    Returns a dict or list of analysis objects depending on the asdict argument.\n\n    DEPRECATED: AIDA is a dead format. At some point we will stop supporting it.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_31readAIDA = {"readAIDA", (PyCFunction)__pyx_pw_4yoda_4core_31readAIDA, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_30readAIDA};
static PyObject *__pyx_pw_4yoda_4core_31readAIDA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_v_asdict = 0;
  PyObject *__pyx_v_patterns = 0;
  PyObject *__pyx_v_unpatterns = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readAIDA (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_file_or_filename,&__pyx_n_s_asdict,&__pyx_n_s_patterns,&__pyx_n_s_unpatterns,0};
    PyObject* values[4] = {0,0,0,0};
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_asdict);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_patterns);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unpatterns);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readAIDA") < 0)) __PYX_ERR(2, 154, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_file_or_filename = values[0];
    __pyx_v_asdict = values[1];
    __pyx_v_patterns = values[2];
    __pyx_v_unpatterns = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readAIDA", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 154, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.readAIDA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_30readAIDA(__pyx_self, __pyx_v_file_or_filename, __pyx_v_asdict, __pyx_v_patterns, __pyx_v_unpatterns);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_30readAIDA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_file_or_filename, PyObject *__pyx_v_asdict, PyObject *__pyx_v_patterns, PyObject *__pyx_v_unpatterns) {
  std::istringstream __pyx_v_iss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_aobjects;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  char *__pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("readAIDA", 0);

  /* "include/IO.pyx":170
 *     cdef c.istringstream iss
 *     cdef vector[c.AnalysisObject*] aobjects
 *     s = _str_from_file(file_or_filename)             # <<<<<<<<<<<<<<
 *     _make_iss(iss, s)
 *     c.ReaderAIDA_create().read(iss, aobjects)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_from_file); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_file_or_filename); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_file_or_filename);
    __Pyx_GIVEREF(__pyx_v_file_or_filename);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_file_or_filename);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_s = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":171
 *     cdef vector[c.AnalysisObject*] aobjects
 *     s = _str_from_file(file_or_filename)
 *     _make_iss(iss, s)             # <<<<<<<<<<<<<<
 *     c.ReaderAIDA_create().read(iss, aobjects)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 */
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_v_s); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(2, 171, __pyx_L1_error)
  __pyx_f_4yoda_4core__make_iss(__pyx_v_iss, __pyx_t_5);

  /* "include/IO.pyx":172
 *     s = _str_from_file(file_or_filename)
 *     _make_iss(iss, s)
 *     c.ReaderAIDA_create().read(iss, aobjects)             # <<<<<<<<<<<<<<
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)
 * 
 */
  try {
    YODA::ReaderAIDA::create().read(__pyx_v_iss, __pyx_v_aobjects);
  } catch(...) {
    translate_yoda_error(); if (!PyErr_Occurred()) PyErr_SetString(PyExc_RuntimeError , "Error converting c++ exception.");
    __PYX_ERR(2, 172, __pyx_L1_error)
  }

  /* "include/IO.pyx":173
 *     _make_iss(iss, s)
 *     c.ReaderAIDA_create().read(iss, aobjects)
 *     return _aobjects_to_dict(&aobjects, patterns, unpatterns) if asdict else _aobjects_to_list(&aobjects, patterns, unpatterns)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_asdict); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 173, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_2 = __pyx_f_4yoda_4core__aobjects_to_dict((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __pyx_t_2 = __pyx_f_4yoda_4core__aobjects_to_list((&__pyx_v_aobjects), __pyx_v_patterns, __pyx_v_unpatterns); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "include/IO.pyx":154
 * 
 * 
 * def readAIDA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided AIDA-format file.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.core.readAIDA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":180
 * ##
 * 
 * def write(ana_objs, filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided filename,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_33write(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_32write[] = "write(ana_objs, filename)\n\n    Write data objects to the provided filename,\n    auto-determining the format from the file extension.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_33write = {"write", (PyCFunction)__pyx_pw_4yoda_4core_33write, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_32write};
static PyObject *__pyx_pw_4yoda_4core_33write(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ana_objs = 0;
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ana_objs,&__pyx_n_s_filename,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ana_objs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("write", 1, 2, 2, 1); __PYX_ERR(2, 180, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "write") < 0)) __PYX_ERR(2, 180, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ana_objs = values[0];
    __pyx_v_filename = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("write", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 180, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_32write(__pyx_self, __pyx_v_ana_objs, __pyx_v_filename);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_32write(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_filename) {
  std::ostringstream __pyx_v_oss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_vec;
  struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_a = 0;
  PyObject *__pyx_v_aolist = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  YODA::AnalysisObject *__pyx_t_9;
  std::string __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("write", 0);

  /* "include/IO.pyx":189
 *     cdef AnalysisObject a
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]             # <<<<<<<<<<<<<<
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())
 */
  __pyx_t_2 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 189, __pyx_L1_error)
  if ((__pyx_t_2 != 0)) {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 189, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 189, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __pyx_t_6 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_iter); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(2, 189, __pyx_L1_error)
    if ((__pyx_t_6 != 0)) {
      __Pyx_INCREF(__pyx_v_ana_objs);
      __pyx_t_3 = __pyx_v_ana_objs;
    } else {
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_ana_objs);
      __Pyx_GIVEREF(__pyx_v_ana_objs);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_ana_objs);
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __pyx_v_aolist = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":190
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_aolist)) || PyTuple_CheckExact(__pyx_v_aolist)) {
    __pyx_t_1 = __pyx_v_aolist; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_aolist); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 190, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 190, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 190, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 190, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 190, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 190, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_4yoda_4core_AnalysisObject))))) __PYX_ERR(2, 190, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_a, ((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "include/IO.pyx":191
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())             # <<<<<<<<<<<<<<
 * 
 *     c.Writer_create(filename).write(oss, vec)
 */
    __pyx_t_9 = __pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(__pyx_v_a); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(2, 191, __pyx_L1_error)
    try {
      __pyx_v_vec.push_back(__pyx_t_9);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(2, 191, __pyx_L1_error)
    }

    /* "include/IO.pyx":190
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":193
 *         vec.push_back(a._AnalysisObject())
 * 
 *     c.Writer_create(filename).write(oss, vec)             # <<<<<<<<<<<<<<
 *     _str_to_file(oss.str().c_str(), filename)
 * 
 */
  __pyx_t_10 = __pyx_convert_string_from_py_std__in_string(__pyx_v_filename); if (unlikely(PyErr_Occurred())) __PYX_ERR(2, 193, __pyx_L1_error)
  YODA::mkWriter(__pyx_t_10).write(__pyx_v_oss, __pyx_v_vec);

  /* "include/IO.pyx":194
 * 
 *     c.Writer_create(filename).write(oss, vec)
 *     _str_to_file(oss.str().c_str(), filename)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_to_file); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_oss.str().c_str()); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_11 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(2, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_7, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_filename);
  __Pyx_GIVEREF(__pyx_v_filename);
  PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_7, __pyx_v_filename);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":180
 * ##
 * 
 * def write(ana_objs, filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided filename,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yoda.core.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_aolist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":197
 * 
 * 
 * def writeYODA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in YODA format.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_35writeYODA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_34writeYODA[] = "writeYODA(ana_objs, file_or_filename)\n\n    Write data objects to the provided file in YODA format.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_35writeYODA = {"writeYODA", (PyCFunction)__pyx_pw_4yoda_4core_35writeYODA, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_34writeYODA};
static PyObject *__pyx_pw_4yoda_4core_35writeYODA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ana_objs = 0;
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("writeYODA (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ana_objs,&__pyx_n_s_file_or_filename,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ana_objs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("writeYODA", 1, 2, 2, 1); __PYX_ERR(2, 197, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "writeYODA") < 0)) __PYX_ERR(2, 197, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ana_objs = values[0];
    __pyx_v_file_or_filename = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("writeYODA", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 197, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.writeYODA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_34writeYODA(__pyx_self, __pyx_v_ana_objs, __pyx_v_file_or_filename);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_34writeYODA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_file_or_filename) {
  std::ostringstream __pyx_v_oss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_vec;
  struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_a = 0;
  PyObject *__pyx_v_aolist = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  YODA::AnalysisObject *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("writeYODA", 0);

  /* "include/IO.pyx":205
 *     cdef AnalysisObject a
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]             # <<<<<<<<<<<<<<
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())
 */
  __pyx_t_2 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 205, __pyx_L1_error)
  if ((__pyx_t_2 != 0)) {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 205, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 205, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 205, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __pyx_t_6 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_iter); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(2, 205, __pyx_L1_error)
    if ((__pyx_t_6 != 0)) {
      __Pyx_INCREF(__pyx_v_ana_objs);
      __pyx_t_3 = __pyx_v_ana_objs;
    } else {
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 205, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_ana_objs);
      __Pyx_GIVEREF(__pyx_v_ana_objs);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_ana_objs);
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __pyx_v_aolist = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":206
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_aolist)) || PyTuple_CheckExact(__pyx_v_aolist)) {
    __pyx_t_1 = __pyx_v_aolist; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_aolist); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 206, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 206, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 206, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 206, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 206, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 206, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 206, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_4yoda_4core_AnalysisObject))))) __PYX_ERR(2, 206, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_a, ((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "include/IO.pyx":207
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())             # <<<<<<<<<<<<<<
 * 
 *     c.WriterYODA_create().write(oss, vec)
 */
    __pyx_t_9 = __pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(__pyx_v_a); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(2, 207, __pyx_L1_error)
    try {
      __pyx_v_vec.push_back(__pyx_t_9);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(2, 207, __pyx_L1_error)
    }

    /* "include/IO.pyx":206
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":209
 *         vec.push_back(a._AnalysisObject())
 * 
 *     c.WriterYODA_create().write(oss, vec)             # <<<<<<<<<<<<<<
 *     _str_to_file(oss.str().c_str(), file_or_filename)
 * 
 */
  YODA::WriterYODA::create().write(__pyx_v_oss, __pyx_v_vec);

  /* "include/IO.pyx":210
 * 
 *     c.WriterYODA_create().write(oss, vec)
 *     _str_to_file(oss.str().c_str(), file_or_filename)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_to_file); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_oss.str().c_str()); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_10 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_7, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_file_or_filename);
  __Pyx_GIVEREF(__pyx_v_file_or_filename);
  PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_7, __pyx_v_file_or_filename);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":197
 * 
 * 
 * def writeYODA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in YODA format.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yoda.core.writeYODA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_aolist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":213
 * 
 * 
 * def writeFLAT(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in FLAT format.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_37writeFLAT(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_36writeFLAT[] = "writeFLAT(ana_objs, file_or_filename)\n\n    Write data objects to the provided file in FLAT format.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_37writeFLAT = {"writeFLAT", (PyCFunction)__pyx_pw_4yoda_4core_37writeFLAT, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_36writeFLAT};
static PyObject *__pyx_pw_4yoda_4core_37writeFLAT(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ana_objs = 0;
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("writeFLAT (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ana_objs,&__pyx_n_s_file_or_filename,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ana_objs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("writeFLAT", 1, 2, 2, 1); __PYX_ERR(2, 213, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "writeFLAT") < 0)) __PYX_ERR(2, 213, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ana_objs = values[0];
    __pyx_v_file_or_filename = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("writeFLAT", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 213, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.writeFLAT", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_36writeFLAT(__pyx_self, __pyx_v_ana_objs, __pyx_v_file_or_filename);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_36writeFLAT(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_file_or_filename) {
  std::ostringstream __pyx_v_oss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_vec;
  struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_a = 0;
  PyObject *__pyx_v_aolist = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  YODA::AnalysisObject *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("writeFLAT", 0);

  /* "include/IO.pyx":221
 *     cdef AnalysisObject a
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]             # <<<<<<<<<<<<<<
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())
 */
  __pyx_t_2 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 221, __pyx_L1_error)
  if ((__pyx_t_2 != 0)) {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 221, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 221, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __pyx_t_6 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_iter); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(2, 221, __pyx_L1_error)
    if ((__pyx_t_6 != 0)) {
      __Pyx_INCREF(__pyx_v_ana_objs);
      __pyx_t_3 = __pyx_v_ana_objs;
    } else {
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 221, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_ana_objs);
      __Pyx_GIVEREF(__pyx_v_ana_objs);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_ana_objs);
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __pyx_v_aolist = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":222
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_aolist)) || PyTuple_CheckExact(__pyx_v_aolist)) {
    __pyx_t_1 = __pyx_v_aolist; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_aolist); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 222, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 222, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 222, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 222, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 222, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 222, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_4yoda_4core_AnalysisObject))))) __PYX_ERR(2, 222, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_a, ((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "include/IO.pyx":223
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())             # <<<<<<<<<<<<<<
 * 
 *     c.WriterFLAT_create().write(oss, vec)
 */
    __pyx_t_9 = __pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(__pyx_v_a); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(2, 223, __pyx_L1_error)
    try {
      __pyx_v_vec.push_back(__pyx_t_9);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(2, 223, __pyx_L1_error)
    }

    /* "include/IO.pyx":222
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":225
 *         vec.push_back(a._AnalysisObject())
 * 
 *     c.WriterFLAT_create().write(oss, vec)             # <<<<<<<<<<<<<<
 *     _str_to_file(oss.str().c_str(), file_or_filename)
 * 
 */
  YODA::WriterFLAT::create().write(__pyx_v_oss, __pyx_v_vec);

  /* "include/IO.pyx":226
 * 
 *     c.WriterFLAT_create().write(oss, vec)
 *     _str_to_file(oss.str().c_str(), file_or_filename)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_to_file); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_oss.str().c_str()); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_10 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_7, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_file_or_filename);
  __Pyx_GIVEREF(__pyx_v_file_or_filename);
  PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_7, __pyx_v_file_or_filename);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":213
 * 
 * 
 * def writeFLAT(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in FLAT format.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yoda.core.writeFLAT", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_aolist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "include/IO.pyx":229
 * 
 * 
 * def writeAIDA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in AIDA format.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yoda_4core_39writeAIDA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yoda_4core_38writeAIDA[] = "writeAIDA(ana_objs, file_or_filename)\n\n    Write data objects to the provided file in AIDA format.\n    ";
static PyMethodDef __pyx_mdef_4yoda_4core_39writeAIDA = {"writeAIDA", (PyCFunction)__pyx_pw_4yoda_4core_39writeAIDA, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_38writeAIDA};
static PyObject *__pyx_pw_4yoda_4core_39writeAIDA(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ana_objs = 0;
  PyObject *__pyx_v_file_or_filename = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("writeAIDA (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ana_objs,&__pyx_n_s_file_or_filename,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ana_objs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_file_or_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("writeAIDA", 1, 2, 2, 1); __PYX_ERR(2, 229, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "writeAIDA") < 0)) __PYX_ERR(2, 229, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_ana_objs = values[0];
    __pyx_v_file_or_filename = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("writeAIDA", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 229, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("yoda.core.writeAIDA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yoda_4core_38writeAIDA(__pyx_self, __pyx_v_ana_objs, __pyx_v_file_or_filename);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yoda_4core_38writeAIDA(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ana_objs, PyObject *__pyx_v_file_or_filename) {
  std::ostringstream __pyx_v_oss;
  std::vector<YODA::AnalysisObject *>  __pyx_v_vec;
  struct __pyx_obj_4yoda_4core_AnalysisObject *__pyx_v_a = 0;
  PyObject *__pyx_v_aolist = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  YODA::AnalysisObject *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("writeAIDA", 0);

  /* "include/IO.pyx":237
 *     cdef AnalysisObject a
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]             # <<<<<<<<<<<<<<
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())
 */
  __pyx_t_2 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(2, 237, __pyx_L1_error)
  if ((__pyx_t_2 != 0)) {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_ana_objs, __pyx_n_s_values); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 237, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 237, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __pyx_t_6 = PyObject_HasAttr(__pyx_v_ana_objs, __pyx_n_s_iter); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(2, 237, __pyx_L1_error)
    if ((__pyx_t_6 != 0)) {
      __Pyx_INCREF(__pyx_v_ana_objs);
      __pyx_t_3 = __pyx_v_ana_objs;
    } else {
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 237, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_ana_objs);
      __Pyx_GIVEREF(__pyx_v_ana_objs);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_ana_objs);
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __pyx_v_aolist = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "include/IO.pyx":238
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_aolist)) || PyTuple_CheckExact(__pyx_v_aolist)) {
    __pyx_t_1 = __pyx_v_aolist; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_aolist); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 238, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 238, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 238, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 238, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_4yoda_4core_AnalysisObject))))) __PYX_ERR(2, 238, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_a, ((struct __pyx_obj_4yoda_4core_AnalysisObject *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "include/IO.pyx":239
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:
 *         vec.push_back(a._AnalysisObject())             # <<<<<<<<<<<<<<
 * 
 *     c.WriterAIDA_create().write(oss, vec)
 */
    __pyx_t_9 = __pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject(__pyx_v_a); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(2, 239, __pyx_L1_error)
    try {
      __pyx_v_vec.push_back(__pyx_t_9);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(2, 239, __pyx_L1_error)
    }

    /* "include/IO.pyx":238
 * 
 *     aolist = ana_objs.values() if hasattr(ana_objs, "values") else ana_objs if hasattr(ana_objs, "__iter__") else [ana_objs]
 *     for a in aolist:             # <<<<<<<<<<<<<<
 *         vec.push_back(a._AnalysisObject())
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":241
 *         vec.push_back(a._AnalysisObject())
 * 
 *     c.WriterAIDA_create().write(oss, vec)             # <<<<<<<<<<<<<<
 *     _str_to_file(oss.str().c_str(), file_or_filename)
 */
  YODA::WriterAIDA::create().write(__pyx_v_oss, __pyx_v_vec);

  /* "include/IO.pyx":242
 * 
 *     c.WriterAIDA_create().write(oss, vec)
 *     _str_to_file(oss.str().c_str(), file_or_filename)             # <<<<<<<<<<<<<<
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_str_to_file); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_oss.str().c_str()); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_10 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_7, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_file_or_filename);
  __Pyx_GIVEREF(__pyx_v_file_or_filename);
  PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_7, __pyx_v_file_or_filename);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "include/IO.pyx":229
 * 
 * 
 * def writeAIDA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in AIDA format.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yoda.core.writeAIDA", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_aolist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yoda/util.pxd":7
 *     cdef object _owner
 * 
 *     cdef inline void* ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         if self._ptr == NULL:
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')
 */

static CYTHON_INLINE void *__pyx_f_4yoda_4util_4Base_ptr(struct __pyx_obj_4yoda_4util_Base *__pyx_v_self) {
  void *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("ptr", 0);

  /* "yoda/util.pxd":8
 * 
 *     cdef inline void* ptr(self) except NULL:
 *         if self._ptr == NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')
 *         return self._ptr
 */
  __pyx_t_1 = ((__pyx_v_self->_ptr == NULL) != 0);
  if (__pyx_t_1) {

    /* "yoda/util.pxd":9
 *     cdef inline void* ptr(self) except NULL:
 *         if self._ptr == NULL:
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')             # <<<<<<<<<<<<<<
 *         return self._ptr
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_MemoryError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(29, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(29, 9, __pyx_L1_error)

    /* "yoda/util.pxd":8
 * 
 *     cdef inline void* ptr(self) except NULL:
 *         if self._ptr == NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')
 *         return self._ptr
 */
  }

  /* "yoda/util.pxd":10
 *         if self._ptr == NULL:
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')
 *         return self._ptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->_ptr;
  goto __pyx_L0;

  /* "yoda/util.pxd":7
 *     cdef object _owner
 * 
 *     cdef inline void* ptr(self) except NULL:             # <<<<<<<<<<<<<<
 *         if self._ptr == NULL:
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yoda.util.Base.ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yoda/util.pxd":18
 * ## e.g. if you want deallocation to happen automatically when this object goes
 * ## out of scope
 * cdef inline set_owned_ptr(Base obj, void* ptr):             # <<<<<<<<<<<<<<
 *     obj._ptr = ptr
 *     obj._deallocate = True
 */

static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_set_owned_ptr(struct __pyx_obj_4yoda_4util_Base *__pyx_v_obj, void *__pyx_v_ptr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_owned_ptr", 0);

  /* "yoda/util.pxd":19
 * ## out of scope
 * cdef inline set_owned_ptr(Base obj, void* ptr):
 *     obj._ptr = ptr             # <<<<<<<<<<<<<<
 *     obj._deallocate = True
 * 
 */
  __pyx_v_obj->_ptr = __pyx_v_ptr;

  /* "yoda/util.pxd":20
 * cdef inline set_owned_ptr(Base obj, void* ptr):
 *     obj._ptr = ptr
 *     obj._deallocate = True             # <<<<<<<<<<<<<<
 * 
 * ## Use this for setting a pointer that is *not* owned by the object obj e.g. if
 */
  __pyx_v_obj->_deallocate = 1;

  /* "yoda/util.pxd":18
 * ## e.g. if you want deallocation to happen automatically when this object goes
 * ## out of scope
 * cdef inline set_owned_ptr(Base obj, void* ptr):             # <<<<<<<<<<<<<<
 *     obj._ptr = ptr
 *     obj._deallocate = True
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yoda/util.pxd":25
 * ## you were given this object by a class which will deallocate it once it's
 * ## finished
 * cdef inline set_borrowed_ptr(Base obj, void* ptr, object owner):             # <<<<<<<<<<<<<<
 *     obj._ptr = ptr
 *     obj._deallocate = False
 */

static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_set_borrowed_ptr(struct __pyx_obj_4yoda_4util_Base *__pyx_v_obj, void *__pyx_v_ptr, PyObject *__pyx_v_owner) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_borrowed_ptr", 0);

  /* "yoda/util.pxd":26
 * ## finished
 * cdef inline set_borrowed_ptr(Base obj, void* ptr, object owner):
 *     obj._ptr = ptr             # <<<<<<<<<<<<<<
 *     obj._deallocate = False
 *     obj._owner = owner
 */
  __pyx_v_obj->_ptr = __pyx_v_ptr;

  /* "yoda/util.pxd":27
 * cdef inline set_borrowed_ptr(Base obj, void* ptr, object owner):
 *     obj._ptr = ptr
 *     obj._deallocate = False             # <<<<<<<<<<<<<<
 *     obj._owner = owner
 * 
 */
  __pyx_v_obj->_deallocate = 0;

  /* "yoda/util.pxd":28
 *     obj._ptr = ptr
 *     obj._deallocate = False
 *     obj._owner = owner             # <<<<<<<<<<<<<<
 * 
 * ## Use this to create a new object of type cls from the pointer ptr. The class is
 */
  __Pyx_INCREF(__pyx_v_owner);
  __Pyx_GIVEREF(__pyx_v_owner);
  __Pyx_GOTREF(__pyx_v_obj->_owner);
  __Pyx_DECREF(__pyx_v_obj->_owner);
  __pyx_v_obj->_owner = __pyx_v_owner;

  /* "yoda/util.pxd":25
 * ## you were given this object by a class which will deallocate it once it's
 * ## finished
 * cdef inline set_borrowed_ptr(Base obj, void* ptr, object owner):             # <<<<<<<<<<<<<<
 *     obj._ptr = ptr
 *     obj._deallocate = False
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yoda/util.pxd":34
 * ## that you want to use for e.g. loaders or factory methods where the user is
 * ## expected to manage memory. Or where you've explicitly called new.
 * cdef inline object new_owned_cls(object cls, void* ptr):             # <<<<<<<<<<<<<<
 *     obj = cls.__new__(cls)
 *     set_owned_ptr(obj, ptr)
 */

static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_new_owned_cls(PyObject *__pyx_v_cls, void *__pyx_v_ptr) {
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("new_owned_cls", 0);

  /* "yoda/util.pxd":35
 * ## expected to manage memory. Or where you've explicitly called new.
 * cdef inline object new_owned_cls(object cls, void* ptr):
 *     obj = cls.__new__(cls)             # <<<<<<<<<<<<<<
 *     set_owned_ptr(obj, ptr)
 *     return obj
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_cls, __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(29, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_cls); if (unlikely(!__pyx_t_1)) __PYX_ERR(29, 35, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(29, 35, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_cls);
    __Pyx_GIVEREF(__pyx_v_cls);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_cls);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(29, 35, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_obj = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "yoda/util.pxd":36
 * cdef inline object new_owned_cls(object cls, void* ptr):
 *     obj = cls.__new__(cls)
 *     set_owned_ptr(obj, ptr)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  if (!(likely(((__pyx_v_obj) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_obj, __pyx_ptype_4yoda_4util_Base))))) __PYX_ERR(29, 36, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_owned_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_obj), __pyx_v_ptr); if (unlikely(!__pyx_t_1)) __PYX_ERR(29, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yoda/util.pxd":37
 *     obj = cls.__new__(cls)
 *     set_owned_ptr(obj, ptr)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * ## Use this to create a thin wrapper around a pointer that will *not* be
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "yoda/util.pxd":34
 * ## that you want to use for e.g. loaders or factory methods where the user is
 * ## expected to manage memory. Or where you've explicitly called new.
 * cdef inline object new_owned_cls(object cls, void* ptr):             # <<<<<<<<<<<<<<
 *     obj = cls.__new__(cls)
 *     set_owned_ptr(obj, ptr)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.util.new_owned_cls", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yoda/util.pxd":42
 * ## deallocated when it goes out of scope. Useful when you're given a reference
 * ## from a class which is not expecting you to delete its innards!
 * cdef inline object new_borrowed_cls(object cls, void* ptr, object owner):             # <<<<<<<<<<<<<<
 *     obj = cls.__new__(cls)
 *     set_borrowed_ptr(obj, ptr, owner)
 */

static CYTHON_INLINE PyObject *__pyx_f_4yoda_4util_new_borrowed_cls(PyObject *__pyx_v_cls, void *__pyx_v_ptr, PyObject *__pyx_v_owner) {
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("new_borrowed_cls", 0);

  /* "yoda/util.pxd":43
 * ## from a class which is not expecting you to delete its innards!
 * cdef inline object new_borrowed_cls(object cls, void* ptr, object owner):
 *     obj = cls.__new__(cls)             # <<<<<<<<<<<<<<
 *     set_borrowed_ptr(obj, ptr, owner)
 *     return obj
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_cls, __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(29, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_cls); if (unlikely(!__pyx_t_1)) __PYX_ERR(29, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(29, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_cls);
    __Pyx_GIVEREF(__pyx_v_cls);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_cls);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(29, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_obj = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "yoda/util.pxd":44
 * cdef inline object new_borrowed_cls(object cls, void* ptr, object owner):
 *     obj = cls.__new__(cls)
 *     set_borrowed_ptr(obj, ptr, owner)             # <<<<<<<<<<<<<<
 *     return obj
 * 
 */
  if (!(likely(((__pyx_v_obj) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_obj, __pyx_ptype_4yoda_4util_Base))))) __PYX_ERR(29, 44, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_4yoda_4util_set_borrowed_ptr(((struct __pyx_obj_4yoda_4util_Base *)__pyx_v_obj), __pyx_v_ptr, __pyx_v_owner); if (unlikely(!__pyx_t_1)) __PYX_ERR(29, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yoda/util.pxd":45
 *     obj = cls.__new__(cls)
 *     set_borrowed_ptr(obj, ptr, owner)
 *     return obj             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "yoda/util.pxd":42
 * ## deallocated when it goes out of scope. Useful when you're given a reference
 * ## from a class which is not expecting you to delete its innards!
 * cdef inline object new_borrowed_cls(object cls, void* ptr, object owner):             # <<<<<<<<<<<<<<
 *     obj = cls.__new__(cls)
 *     set_borrowed_ptr(obj, ptr, owner)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("yoda.util.new_borrowed_cls", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yoda/util.pxd":49
 * 
 * ## Translation utility to allow use of 'Pythonic' negative indices
 * cdef inline size_t pythonic_index(int i, size_t size) except? 0:             # <<<<<<<<<<<<<<
 *     if i < 0:
 *         i += size
 */

static CYTHON_INLINE size_t __pyx_f_4yoda_4util_pythonic_index(int __pyx_v_i, size_t __pyx_v_size) {
  size_t __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("pythonic_index", 0);

  /* "yoda/util.pxd":50
 * ## Translation utility to allow use of 'Pythonic' negative indices
 * cdef inline size_t pythonic_index(int i, size_t size) except? 0:
 *     if i < 0:             # <<<<<<<<<<<<<<
 *         i += size
 *     if 0 <= i < size:
 */
  __pyx_t_1 = ((__pyx_v_i < 0) != 0);
  if (__pyx_t_1) {

    /* "yoda/util.pxd":51
 * cdef inline size_t pythonic_index(int i, size_t size) except? 0:
 *     if i < 0:
 *         i += size             # <<<<<<<<<<<<<<
 *     if 0 <= i < size:
 *         return i
 */
    __pyx_v_i = (__pyx_v_i + __pyx_v_size);

    /* "yoda/util.pxd":50
 * ## Translation utility to allow use of 'Pythonic' negative indices
 * cdef inline size_t pythonic_index(int i, size_t size) except? 0:
 *     if i < 0:             # <<<<<<<<<<<<<<
 *         i += size
 *     if 0 <= i < size:
 */
  }

  /* "yoda/util.pxd":52
 *     if i < 0:
 *         i += size
 *     if 0 <= i < size:             # <<<<<<<<<<<<<<
 *         return i
 *     else:
 */
  __pyx_t_1 = (0 <= __pyx_v_i);
  if (__pyx_t_1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_size);
  }
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yoda/util.pxd":53
 *         i += size
 *     if 0 <= i < size:
 *         return i             # <<<<<<<<<<<<<<
 *     else:
 *         raise IndexError
 */
    __pyx_r = __pyx_v_i;
    goto __pyx_L0;

    /* "yoda/util.pxd":52
 *     if i < 0:
 *         i += size
 *     if 0 <= i < size:             # <<<<<<<<<<<<<<
 *         return i
 *     else:
 */
  }

  /* "yoda/util.pxd":55
 *         return i
 *     else:
 *         raise IndexError             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_Raise(__pyx_builtin_IndexError, 0, 0, 0);
    __PYX_ERR(29, 55, __pyx_L1_error)
  }

  /* "yoda/util.pxd":49
 * 
 * ## Translation utility to allow use of 'Pythonic' negative indices
 * cdef inline size_t pythonic_index(int i, size_t size) except? 0:             # <<<<<<<<<<<<<<
 *     if i < 0:
 *         i += size
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("yoda.util.pythonic_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(30, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_string(const std::vector<std::string>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_string", 0);

  /* "vector.to_py":68
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = __pyx_convert_PyObject_string_to_py_std__in_string((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) __PYX_ERR(30, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(30, 68, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *__pyx_v_o) {
  std::vector<double>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_double", 0);

  /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(30, 51, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(30, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(30, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(30, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(30, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(30, 51, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":52
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely(__pyx_t_5 == -1.0 && PyErr_Occurred())) __PYX_ERR(30, 52, __pyx_L1_error)
    __pyx_v_v.push_back(__pyx_t_5);

    /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":53
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 0);

  /* "vector.to_py":68
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) __PYX_ERR(30, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(30, 68, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.to_py":180
 * 
 * @cname("__pyx_convert_pair_to_py_double____double")
 * cdef object __pyx_convert_pair_to_py_double____double(const pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return X_to_py(p.first), Y_to_py(p.second)
 * 
 */

static PyObject *__pyx_convert_pair_to_py_double____double(std::pair<double,double>  const &__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_to_py_double____double", 0);

  /* "pair.to_py":181
 * @cname("__pyx_convert_pair_to_py_double____double")
 * cdef object __pyx_convert_pair_to_py_double____double(const pair[X,Y]& p):
 *     return X_to_py(p.first), Y_to_py(p.second)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_p.first); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p.second); if (unlikely(!__pyx_t_2)) __PYX_ERR(30, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(30, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pair.to_py":180
 * 
 * @cname("__pyx_convert_pair_to_py_double____double")
 * cdef object __pyx_convert_pair_to_py_double____double(const pair[X,Y]& p):             # <<<<<<<<<<<<<<
 *     return X_to_py(p.first), Y_to_py(p.second)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.to_py.__pyx_convert_pair_to_py_double____double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pair.from_py":163
 * 
 * @cname("__pyx_convert_pair_from_py_double__and_double")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_double__and_double(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))
 */

static std::pair<double,double>  __pyx_convert_pair_from_py_double__and_double(PyObject *__pyx_v_o) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  std::pair<double,double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *(*__pyx_t_4)(PyObject *);
  double __pyx_t_5;
  double __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_convert_pair_from_py_double__and_double", 0);

  /* "pair.from_py":164
 * @cname("__pyx_convert_pair_from_py_double__and_double")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_double__and_double(object o) except *:
 *     x, y = o             # <<<<<<<<<<<<<<
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))
 * 
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_o))) || (PyList_CheckExact(__pyx_v_o))) {
    PyObject* sequence = __pyx_v_o;
    #if CYTHON_COMPILING_IN_CPYTHON
    Py_ssize_t size = Py_SIZE(sequence);
    #else
    Py_ssize_t size = PySequence_Size(sequence);
    #endif
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(30, 164, __pyx_L1_error)
    }
    #if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(30, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_3 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_3)) __PYX_ERR(30, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = Py_TYPE(__pyx_t_3)->tp_iternext;
    index = 0; __pyx_t_1 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_4(__pyx_t_3); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_4(__pyx_t_3), 2) < 0) __PYX_ERR(30, 164, __pyx_L1_error)
    __pyx_t_4 = NULL;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(30, 164, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_x = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_y = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pair.from_py":165
 * cdef pair[X,Y] __pyx_convert_pair_from_py_double__and_double(object o) except *:
 *     x, y = o
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely(__pyx_t_5 == -1.0 && PyErr_Occurred())) __PYX_ERR(30, 165, __pyx_L1_error)
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely(__pyx_t_6 == -1.0 && PyErr_Occurred())) __PYX_ERR(30, 165, __pyx_L1_error)
  __pyx_r = std::pair<double,double> (__pyx_t_5, __pyx_t_6);
  goto __pyx_L0;

  /* "pair.from_py":163
 * 
 * @cname("__pyx_convert_pair_from_py_double__and_double")
 * cdef pair[X,Y] __pyx_convert_pair_from_py_double__and_double(object o) except *:             # <<<<<<<<<<<<<<
 *     x, y = o
 *     return pair[X,Y](X_from_py(x), Y_from_py(y))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pair.from_py.__pyx_convert_pair_from_py_double__and_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_int")
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<int>  __pyx_convert_vector_from_py_int(PyObject *__pyx_v_o) {
  std::vector<int>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_int", 0);

  /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(30, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(30, 51, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(30, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(30, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(30, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(30, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(30, 51, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":52
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_item); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) __PYX_ERR(30, 52, __pyx_L1_error)
    __pyx_v_v.push_back(__pyx_t_5);

    /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":53
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_int")
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_4yoda_4core_Dbn0D __pyx_vtable_4yoda_4core_Dbn0D;

static PyObject *__pyx_tp_new_4yoda_4core_Dbn0D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Dbn0D *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Dbn0D *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Dbn0D;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_Dbn0D(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_5Dbn0D_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_Dbn0D);
}

static int __pyx_tp_traverse_4yoda_4core_Dbn0D(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_Dbn0D)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_Dbn0D(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_Dbn0D);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn0D_numEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn0D_10numEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn0D_effNumEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn0D_13effNumEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn0D_errW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn0D_4errW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn0D_relErrW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn0D_7relErrW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn0D_sumW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn0D_4sumW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn0D_sumW2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn0D_5sumW2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Dbn0D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn0D_7copy, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn0D_6copy},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn0D_9reset, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn0D_8reset},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn0D_11fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Dbn0D_10fill},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn0D_13scaleW, METH_O, __pyx_doc_4yoda_4core_5Dbn0D_12scaleW},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Dbn0D[] = {
  {(char *)"numEntries", __pyx_getprop_4yoda_4core_5Dbn0D_numEntries, 0, (char *)"The number of entries", 0},
  {(char *)"effNumEntries", __pyx_getprop_4yoda_4core_5Dbn0D_effNumEntries, 0, (char *)"Effective number of entries (for weighted events)", 0},
  {(char *)"errW", __pyx_getprop_4yoda_4core_5Dbn0D_errW, 0, (char *)"Error on sumW", 0},
  {(char *)"relErrW", __pyx_getprop_4yoda_4core_5Dbn0D_relErrW, 0, (char *)"Relative error on sumW", 0},
  {(char *)"sumW", __pyx_getprop_4yoda_4core_5Dbn0D_sumW, 0, (char *)"sum(weights)", 0},
  {(char *)"sumW2", __pyx_getprop_4yoda_4core_5Dbn0D_sumW2, 0, (char *)"sum(weights * weights)", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Dbn0D = {
  __pyx_pw_4yoda_4core_5Dbn0D_15__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_5Dbn0D_17__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Dbn0D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Dbn0D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Dbn0D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Dbn0D, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_5Dbn0D_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Dbn0D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Dbn0D()\n\n    A zero-dimensional 'counter', used and exposed by Counter.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Dbn0D, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Dbn0D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Dbn0D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Dbn0D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_5Dbn0D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Dbn0D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn1D __pyx_vtable_4yoda_4core_Dbn1D;

static PyObject *__pyx_tp_new_4yoda_4core_Dbn1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Dbn1D *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Dbn1D *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Dbn1D;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_Dbn1D(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_5Dbn1D_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_Dbn1D);
}

static int __pyx_tp_traverse_4yoda_4core_Dbn1D(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_Dbn1D)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_Dbn1D(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_Dbn1D);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_xMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_5xMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_xVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_9xVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_xStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_7xStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_xStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_7xStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_xRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_4xRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_numEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_10numEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_effNumEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_13effNumEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_errW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_4errW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_relErrW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_7relErrW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_sumW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_4sumW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_sumW2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_5sumW2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn1D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn1D_6sumWX2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Dbn1D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn1D_7copy, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn1D_6copy},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn1D_9reset, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn1D_8reset},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn1D_11fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Dbn1D_10fill},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn1D_13scaleW, METH_O, __pyx_doc_4yoda_4core_5Dbn1D_12scaleW},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn1D_15scaleX, METH_O, __pyx_doc_4yoda_4core_5Dbn1D_14scaleX},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Dbn1D[] = {
  {(char *)"xMean", __pyx_getprop_4yoda_4core_5Dbn1D_xMean, 0, (char *)"Weighted mean of x", 0},
  {(char *)"xVariance", __pyx_getprop_4yoda_4core_5Dbn1D_xVariance, 0, (char *)"Weighted variance of x", 0},
  {(char *)"xStdDev", __pyx_getprop_4yoda_4core_5Dbn1D_xStdDev, 0, (char *)"Weighted standard deviation of x", 0},
  {(char *)"xStdErr", __pyx_getprop_4yoda_4core_5Dbn1D_xStdErr, 0, (char *)"Weighted standard error on <x>", 0},
  {(char *)"xRMS", __pyx_getprop_4yoda_4core_5Dbn1D_xRMS, 0, (char *)"Weighted root mean squared (RMS) of x", 0},
  {(char *)"numEntries", __pyx_getprop_4yoda_4core_5Dbn1D_numEntries, 0, (char *)"The number of entries", 0},
  {(char *)"effNumEntries", __pyx_getprop_4yoda_4core_5Dbn1D_effNumEntries, 0, (char *)"Effective number of entries (for weighted events)", 0},
  {(char *)"errW", __pyx_getprop_4yoda_4core_5Dbn1D_errW, 0, (char *)"Error on sumW", 0},
  {(char *)"relErrW", __pyx_getprop_4yoda_4core_5Dbn1D_relErrW, 0, (char *)"Relative error on sumW", 0},
  {(char *)"sumW", __pyx_getprop_4yoda_4core_5Dbn1D_sumW, 0, (char *)"sum(weights)", 0},
  {(char *)"sumW2", __pyx_getprop_4yoda_4core_5Dbn1D_sumW2, 0, (char *)"sum(weights * weights)", 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_5Dbn1D_sumWX, 0, (char *)"sum(weights * xs)", 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_5Dbn1D_sumWX2, 0, (char *)"sum(weights * xs * xs)", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Dbn1D = {
  __pyx_pw_4yoda_4core_5Dbn1D_17__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_5Dbn1D_19__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Dbn1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Dbn1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Dbn1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Dbn1D, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_5Dbn1D_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Dbn1D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Dbn1D()\n\n    A 1D distribution 'counter', used and exposed by 1D histograms and their bins.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Dbn1D, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Dbn1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Dbn1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Dbn1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_5Dbn1D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Dbn1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn2D __pyx_vtable_4yoda_4core_Dbn2D;

static PyObject *__pyx_tp_new_4yoda_4core_Dbn2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Dbn2D *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Dbn2D *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Dbn2D;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_Dbn2D(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_5Dbn2D_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_Dbn2D);
}

static int __pyx_tp_traverse_4yoda_4core_Dbn2D(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_Dbn2D)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_Dbn2D(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_Dbn2D);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_mean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_4mean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_variance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_8variance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_stdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_6stdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_stdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_6stdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_rms(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_3rms_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_numEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_10numEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_effNumEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_13effNumEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_errW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_4errW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_relErrW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_7relErrW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_4sumW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumW2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_5sumW2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumWY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_5sumWY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_6sumWX2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumWY2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_6sumWY2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn2D_sumWXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn2D_6sumWXY_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Dbn2D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_7copy, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn2D_6copy},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_9reset, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn2D_8reset},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_11fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Dbn2D_10fill},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_13scaleW, METH_O, __pyx_doc_4yoda_4core_5Dbn2D_12scaleW},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_15scaleX, METH_O, __pyx_doc_4yoda_4core_5Dbn2D_14scaleX},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_17scaleY, METH_O, __pyx_doc_4yoda_4core_5Dbn2D_16scaleY},
  {"scaleXY", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn2D_19scaleXY, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Dbn2D_18scaleXY},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Dbn2D[] = {
  {(char *)"mean", __pyx_getprop_4yoda_4core_5Dbn2D_mean, 0, (char *)"Weighted mean of x", 0},
  {(char *)"variance", __pyx_getprop_4yoda_4core_5Dbn2D_variance, 0, (char *)"Weighted variance of x", 0},
  {(char *)"stdDev", __pyx_getprop_4yoda_4core_5Dbn2D_stdDev, 0, (char *)"Weighted standard deviation of x", 0},
  {(char *)"stdErr", __pyx_getprop_4yoda_4core_5Dbn2D_stdErr, 0, (char *)"Weighted standard error on <x>", 0},
  {(char *)"rms", __pyx_getprop_4yoda_4core_5Dbn2D_rms, 0, (char *)"Weighted root mean squared (RMS) of x", 0},
  {(char *)"numEntries", __pyx_getprop_4yoda_4core_5Dbn2D_numEntries, 0, (char *)"The number of entries", 0},
  {(char *)"effNumEntries", __pyx_getprop_4yoda_4core_5Dbn2D_effNumEntries, 0, (char *)"Effective number of entries (for weighted events)", 0},
  {(char *)"errW", __pyx_getprop_4yoda_4core_5Dbn2D_errW, 0, (char *)"Error on sumW", 0},
  {(char *)"relErrW", __pyx_getprop_4yoda_4core_5Dbn2D_relErrW, 0, (char *)"Relative error on sumW", 0},
  {(char *)"sumW", __pyx_getprop_4yoda_4core_5Dbn2D_sumW, 0, (char *)"sum(weights)", 0},
  {(char *)"sumW2", __pyx_getprop_4yoda_4core_5Dbn2D_sumW2, 0, (char *)"sum(weights * weights)", 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_5Dbn2D_sumWX, 0, (char *)"sum(weights * xs)", 0},
  {(char *)"sumWY", __pyx_getprop_4yoda_4core_5Dbn2D_sumWY, 0, (char *)"sum(weights * ys)", 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_5Dbn2D_sumWX2, 0, (char *)"sum(weights * xs * xs)", 0},
  {(char *)"sumWY2", __pyx_getprop_4yoda_4core_5Dbn2D_sumWY2, 0, (char *)"sum(weights * ys * ys)", 0},
  {(char *)"sumWXY", __pyx_getprop_4yoda_4core_5Dbn2D_sumWXY, 0, (char *)"sum(weights xs * ys)", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Dbn2D = {
  __pyx_pw_4yoda_4core_5Dbn2D_21__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_5Dbn2D_23__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Dbn2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Dbn2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Dbn2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Dbn2D, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_5Dbn2D_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Dbn2D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Dbn2D()\n\n    A 2D distribution 'counter', used and exposed by 2D histograms and\n    1D profiles and their bins.\n\n    TODO: also provide normal scalar access to quantities like xRMS\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Dbn2D, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Dbn2D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Dbn2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Dbn2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_5Dbn2D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Dbn2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Dbn3D __pyx_vtable_4yoda_4core_Dbn3D;

static PyObject *__pyx_tp_new_4yoda_4core_Dbn3D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Dbn3D *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Dbn3D *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Dbn3D;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_Dbn3D(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_5Dbn3D_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_Dbn3D);
}

static int __pyx_tp_traverse_4yoda_4core_Dbn3D(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_Dbn3D)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_Dbn3D(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_Dbn3D);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_mean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_4mean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_variance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_8variance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_stdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6stdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_stdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6stdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_rms(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_3rms_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_numEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_10numEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_effNumEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_13effNumEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_errW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_4errW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_relErrW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_7relErrW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_4sumW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumW2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_5sumW2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_5sumWY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_5sumWZ_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6sumWX2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWY2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6sumWY2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWZ2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6sumWZ2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6sumWXY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWXZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6sumWXZ_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_5Dbn3D_sumWYZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Dbn3D_6sumWYZ_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Dbn3D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_7copy, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn3D_6copy},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_9fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Dbn3D_8fill},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_11reset, METH_NOARGS, __pyx_doc_4yoda_4core_5Dbn3D_10reset},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_13scaleW, METH_O, __pyx_doc_4yoda_4core_5Dbn3D_12scaleW},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_15scaleX, METH_O, __pyx_doc_4yoda_4core_5Dbn3D_14scaleX},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_17scaleY, METH_O, __pyx_doc_4yoda_4core_5Dbn3D_16scaleY},
  {"scaleZ", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_19scaleZ, METH_O, __pyx_doc_4yoda_4core_5Dbn3D_18scaleZ},
  {"scaleXYZ", (PyCFunction)__pyx_pw_4yoda_4core_5Dbn3D_21scaleXYZ, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Dbn3D_20scaleXYZ},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Dbn3D[] = {
  {(char *)"mean", __pyx_getprop_4yoda_4core_5Dbn3D_mean, 0, (char *)"Weighted mean of x", 0},
  {(char *)"variance", __pyx_getprop_4yoda_4core_5Dbn3D_variance, 0, (char *)"Weighted variance of x", 0},
  {(char *)"stdDev", __pyx_getprop_4yoda_4core_5Dbn3D_stdDev, 0, (char *)"Weighted standard deviation of x", 0},
  {(char *)"stdErr", __pyx_getprop_4yoda_4core_5Dbn3D_stdErr, 0, (char *)"Weighted standard error on <x>", 0},
  {(char *)"rms", __pyx_getprop_4yoda_4core_5Dbn3D_rms, 0, (char *)"Weighted root mean squared (RMS) of x", 0},
  {(char *)"numEntries", __pyx_getprop_4yoda_4core_5Dbn3D_numEntries, 0, (char *)"The number of entries", 0},
  {(char *)"effNumEntries", __pyx_getprop_4yoda_4core_5Dbn3D_effNumEntries, 0, (char *)"Effective number of entries (for weighted events)", 0},
  {(char *)"errW", __pyx_getprop_4yoda_4core_5Dbn3D_errW, 0, (char *)"Error on sumW", 0},
  {(char *)"relErrW", __pyx_getprop_4yoda_4core_5Dbn3D_relErrW, 0, (char *)"Relative error on sumW", 0},
  {(char *)"sumW", __pyx_getprop_4yoda_4core_5Dbn3D_sumW, 0, (char *)"sum(weights)", 0},
  {(char *)"sumW2", __pyx_getprop_4yoda_4core_5Dbn3D_sumW2, 0, (char *)"sum(weights * weights)", 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_5Dbn3D_sumWX, 0, (char *)"sum(weights * xs)", 0},
  {(char *)"sumWY", __pyx_getprop_4yoda_4core_5Dbn3D_sumWY, 0, (char *)"sum(weights * ys)", 0},
  {(char *)"sumWZ", __pyx_getprop_4yoda_4core_5Dbn3D_sumWZ, 0, (char *)"sum(weights * zs)", 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_5Dbn3D_sumWX2, 0, (char *)"sum(weights * xs * xs)", 0},
  {(char *)"sumWY2", __pyx_getprop_4yoda_4core_5Dbn3D_sumWY2, 0, (char *)"sum(weights * ys * ys)", 0},
  {(char *)"sumWZ2", __pyx_getprop_4yoda_4core_5Dbn3D_sumWZ2, 0, (char *)"sum(weights * zs * zs)", 0},
  {(char *)"sumWXY", __pyx_getprop_4yoda_4core_5Dbn3D_sumWXY, 0, (char *)"sum(weights * xs * ys)", 0},
  {(char *)"sumWXZ", __pyx_getprop_4yoda_4core_5Dbn3D_sumWXZ, 0, (char *)"sum(weights * xs * zs)", 0},
  {(char *)"sumWYZ", __pyx_getprop_4yoda_4core_5Dbn3D_sumWYZ, 0, (char *)"sum(weights * ys * zs)", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Dbn3D = {
  __pyx_pw_4yoda_4core_5Dbn3D_23__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_5Dbn3D_25__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Dbn3D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Dbn3D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Dbn3D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Dbn3D, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_5Dbn3D_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Dbn3D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Dbn3D()\n\n    A 3D distribution 'counter', used and exposed by 2D profiles and their bins.\n\n    TODO: also provide normal scalar access to quantities like xRMS\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Dbn3D, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Dbn3D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Dbn3D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Dbn3D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_5Dbn3D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Dbn3D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_AnalysisObject __pyx_vtable_4yoda_4core_AnalysisObject;

static PyObject *__pyx_tp_new_4yoda_4core_AnalysisObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_AnalysisObject *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_AnalysisObject *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_AnalysisObject;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_AnalysisObject(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_14AnalysisObject_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_AnalysisObject);
}

static int __pyx_tp_traverse_4yoda_4core_AnalysisObject(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_AnalysisObject)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_AnalysisObject(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_AnalysisObject);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_14AnalysisObject_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_14AnalysisObject_4type_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_14AnalysisObject_dim(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_14AnalysisObject_3dim_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_14AnalysisObject_annotations(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_14AnalysisObject_11annotations_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_14AnalysisObject_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_14AnalysisObject_4name_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_14AnalysisObject_path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_14AnalysisObject_4path_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_14AnalysisObject_path(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_14AnalysisObject_4path_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_14AnalysisObject_title(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_14AnalysisObject_5title_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_14AnalysisObject_title(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_14AnalysisObject_5title_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4yoda_4core_AnalysisObject[] = {
  {"annotation", (PyCFunction)__pyx_pw_4yoda_4core_14AnalysisObject_3annotation, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_14AnalysisObject_2annotation},
  {"setAnnotation", (PyCFunction)__pyx_pw_4yoda_4core_14AnalysisObject_5setAnnotation, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_14AnalysisObject_4setAnnotation},
  {"hasAnnotation", (PyCFunction)__pyx_pw_4yoda_4core_14AnalysisObject_7hasAnnotation, METH_O, __pyx_doc_4yoda_4core_14AnalysisObject_6hasAnnotation},
  {"rmAnnotation", (PyCFunction)__pyx_pw_4yoda_4core_14AnalysisObject_9rmAnnotation, METH_O, __pyx_doc_4yoda_4core_14AnalysisObject_8rmAnnotation},
  {"clearAnnotations", (PyCFunction)__pyx_pw_4yoda_4core_14AnalysisObject_11clearAnnotations, METH_NOARGS, __pyx_doc_4yoda_4core_14AnalysisObject_10clearAnnotations},
  {"dump", (PyCFunction)__pyx_pw_4yoda_4core_14AnalysisObject_13dump, METH_NOARGS, __pyx_doc_4yoda_4core_14AnalysisObject_12dump},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_AnalysisObject[] = {
  {(char *)"type", __pyx_getprop_4yoda_4core_14AnalysisObject_type, 0, (char *)"String identifier for this type", 0},
  {(char *)"dim", __pyx_getprop_4yoda_4core_14AnalysisObject_dim, 0, (char *)"Fill dimension or plot dimension of this object, for fillables and scatters respectively", 0},
  {(char *)"annotations", __pyx_getprop_4yoda_4core_14AnalysisObject_annotations, 0, (char *)"() -> list[str]\n        A list of all annotation/metadata keys.", 0},
  {(char *)"name", __pyx_getprop_4yoda_4core_14AnalysisObject_name, 0, (char *)"\n        Return the histogram name, i.e. the last part of the path (which may be empty).\n        ", 0},
  {(char *)"path", __pyx_getprop_4yoda_4core_14AnalysisObject_path, __pyx_setprop_4yoda_4core_14AnalysisObject_path, (char *)"\n        Used for persistence and as a unique identifier. Must begin with\n        a '/' if not the empty string.\n        ", 0},
  {(char *)"title", __pyx_getprop_4yoda_4core_14AnalysisObject_title, __pyx_setprop_4yoda_4core_14AnalysisObject_title, (char *)"\n        Convenient access to the histogram title (optional).\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yoda_4core_AnalysisObject = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.AnalysisObject", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_AnalysisObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_14AnalysisObject_15__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    AnalysisObject is the base class of the main user-facing objects, such as\n    the Histo, Profile and Scatter classes.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_AnalysisObject, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_AnalysisObject, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_AnalysisObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Counter __pyx_vtable_4yoda_4core_Counter;

static PyObject *__pyx_tp_new_4yoda_4core_Counter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Counter *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Counter *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Counter;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_7Counter_val(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Counter_3val_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Counter_err(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Counter_3err_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Counter_relErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Counter_6relErr_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Counter[] = {
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_5reset, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_4reset},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_7clone, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_6clone},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_9fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Counter_8fill},
  {"numEntries", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_11numEntries, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_10numEntries},
  {"effNumEntries", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_13effNumEntries, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_12effNumEntries},
  {"sumW", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_15sumW, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_14sumW},
  {"sumW2", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_17sumW2, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_16sumW2},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_19scaleW, METH_O, __pyx_doc_4yoda_4core_7Counter_18scaleW},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_21mkScatter, METH_NOARGS, __pyx_doc_4yoda_4core_7Counter_20mkScatter},
  {"divideBy", (PyCFunction)__pyx_pw_4yoda_4core_7Counter_23divideBy, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Counter_22divideBy},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Counter[] = {
  {(char *)"val", __pyx_getprop_4yoda_4core_7Counter_val, 0, (char *)"() -> float\n        Sum of weights filled into this counter.", 0},
  {(char *)"err", __pyx_getprop_4yoda_4core_7Counter_err, 0, (char *)"() -> float\n        Binomial uncertainty on the sum of weights filled into this counter.", 0},
  {(char *)"relErr", __pyx_getprop_4yoda_4core_7Counter_relErr, 0, (char *)"() -> float\n        Relative binomial uncertainty on the sum of weights filled into this counter.", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Counter = {
  __pyx_pw_4yoda_4core_7Counter_29__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_7Counter_31__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_7Counter_33__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_7Counter_25__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_7Counter_27__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Counter = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Counter", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Counter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_7Counter_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Counter, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Counter(char *path='', char *title='')\n\n    Weight counter. Like a histogram without any axis (and hence only one bin).\n\n    Call fill() like with a histogram. Sums of weights can be returned, with val()\n    and err() being shorthand for the sum of weights and its binomial error.\n\n    Counter(path=\"\", title=\"\").\n      Construct a counter with optional path and title but no bins.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Counter, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Counter, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_7Counter_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Counter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Bin __pyx_vtable_4yoda_4core_Bin;

static PyObject *__pyx_tp_new_4yoda_4core_Bin(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Bin *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Bin *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Bin;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_Bin(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_3Bin_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_Bin);
}

static int __pyx_tp_traverse_4yoda_4core_Bin(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_Bin)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_Bin(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_Bin);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_3Bin_dim(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_3Bin_3dim_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_3Bin_numEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_3Bin_10numEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_3Bin_effNumEntries(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_3Bin_13effNumEntries_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_3Bin_sumW(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_3Bin_4sumW_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_3Bin_sumW2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_3Bin_5sumW2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Bin[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Bin[] = {
  {(char *)"dim", __pyx_getprop_4yoda_4core_3Bin_dim, 0, (char *)"None -> int\n        Dimension of the fill space (should match containing Histo/Profile)", 0},
  {(char *)"numEntries", __pyx_getprop_4yoda_4core_3Bin_numEntries, 0, (char *)"\n        The number of entries that have filled the bin.\n        ", 0},
  {(char *)"effNumEntries", __pyx_getprop_4yoda_4core_3Bin_effNumEntries, 0, (char *)"\n        The effective number of entries in the bin.\n\n        s.effNumEntries <==> (s.sumW ** 2) / s.sumW2\n        ", 0},
  {(char *)"sumW", __pyx_getprop_4yoda_4core_3Bin_sumW, 0, (char *)"\n        The sum of weights: sum(weights).\n        ", 0},
  {(char *)"sumW2", __pyx_getprop_4yoda_4core_3Bin_sumW2, 0, (char *)"\n        The sum of weights-squared: sum(weights * weights)\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yoda_4core_Bin = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Bin", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Bin), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Bin, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Bin, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Bin, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn1D __pyx_vtable_4yoda_4core_Bin1D_Dbn1D;

static PyObject *__pyx_tp_new_4yoda_4core_Bin1D_Dbn1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Bin1D_Dbn1D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xWidth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xWidth_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5xMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6xFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_9xVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7xStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7xStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_4xRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_6sumWX2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Bin1D_Dbn1D[] = {
  {"merge", (PyCFunction)__pyx_pw_4yoda_4core_11Bin1D_Dbn1D_5merge, METH_O, __pyx_doc_4yoda_4core_11Bin1D_Dbn1D_4merge},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Bin1D_Dbn1D[] = {
  {(char *)"xEdges", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xEdges, 0, (char *)"The lower and upper edges.", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMin, 0, (char *)"The lower bin edge.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMax, 0, (char *)"The upper bin edge.", 0},
  {(char *)"xMid", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMid, 0, (char *)"The midpoint of the bin.", 0},
  {(char *)"xWidth", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xWidth, 0, (char *)"The width of the bin.", 0},
  {(char *)"xMean", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xMean, 0, (char *)"The mean of the x-values that have filled the bin.", 0},
  {(char *)"xFocus", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xFocus, 0, (char *)"\n        The focus of the bin. If the bin has been filled, then this\n        is the mean fill on this bin. If the bin has not been filled,\n        then the focus is the midpoint of the bin.\n        ", 0},
  {(char *)"xVariance", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xVariance, 0, (char *)"\n        The variance of the x-values that have filled the bin.\n        ", 0},
  {(char *)"xStdDev", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xStdDev, 0, (char *)"\n        The standard deviation of the x-values that have filled the bin.\n        ", 0},
  {(char *)"xStdErr", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xStdErr, 0, (char *)"\n        The standard error of the x-values that have filled the bin.\n        ", 0},
  {(char *)"xRMS", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_xRMS, 0, (char *)"\n        The root-mean-square of the x-values that have filled the bin.\n        ", 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_sumWX, 0, (char *)"\n        The sum of weights-times-x: sum(weights * x)\n        ", 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_11Bin1D_Dbn1D_sumWX2, 0, (char *)"\n        The sum of weights-times-x-squared: sum(weights * x * x)\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Bin1D_Dbn1D = {
  __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_7__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_9__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Bin1D_Dbn1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Bin1D_Dbn1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Bin1D_Dbn1D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Bin1D_Dbn1D(xlow, xhigh)\n\n    1D Bin based on an underlying Dbn1D.\n\n    ProfileBin1D(xlow, xhigh)\n\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Bin1D_Dbn1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Bin1D_Dbn1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Bin1D_Dbn1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Bin1D_Dbn2D __pyx_vtable_4yoda_4core_Bin1D_Dbn2D;

static PyObject *__pyx_tp_new_4yoda_4core_Bin1D_Dbn2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Bin1D_Dbn2D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xWidth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xWidth_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5xMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6xFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_9xVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7xStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7xStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_4xRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_6sumWX2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Bin1D_Dbn2D[] = {
  {"merge", (PyCFunction)__pyx_pw_4yoda_4core_11Bin1D_Dbn2D_5merge, METH_O, __pyx_doc_4yoda_4core_11Bin1D_Dbn2D_4merge},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Bin1D_Dbn2D[] = {
  {(char *)"xEdges", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xEdges, 0, (char *)"The lower and upper edges.", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMin, 0, (char *)"The lower bin edge.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMax, 0, (char *)"The upper bin edge.", 0},
  {(char *)"xMid", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMid, 0, (char *)"The midpoint of the bin.", 0},
  {(char *)"xWidth", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xWidth, 0, (char *)"The width of the bin.", 0},
  {(char *)"xMean", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xMean, 0, (char *)"The mean of the x-values that have filled the bin.", 0},
  {(char *)"xFocus", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xFocus, 0, (char *)"\n        The focus of the bin. If the bin has been filled, then this\n        is the mean fill on this bin. If the bin has not been filled,\n        then the focus is the midpoint of the bin.\n        ", 0},
  {(char *)"xVariance", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xVariance, 0, (char *)"\n        The variance of the x-values that have filled the bin.\n        ", 0},
  {(char *)"xStdDev", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xStdDev, 0, (char *)"\n        The standard deviation of the x-values that have filled the bin.\n        ", 0},
  {(char *)"xStdErr", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xStdErr, 0, (char *)"\n        The standard error of the x-values that have filled the bin.\n        ", 0},
  {(char *)"xRMS", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_xRMS, 0, (char *)"\n        The root-mean-square of the x-values that have filled the bin.\n        ", 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_sumWX, 0, (char *)"\n        The sum of weights-times-x: sum(weights * x)\n        ", 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_11Bin1D_Dbn2D_sumWX2, 0, (char *)"\n        The sum of weights-times-x-squared: sum(weights * x * x)\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Bin1D_Dbn2D = {
  __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_7__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_9__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Bin1D_Dbn2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Bin1D_Dbn2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Bin1D_Dbn2D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Bin1D_Dbn2D(xlow, xhigh)\n\n    1D Bin based on an underlying Dbn2D.\n\n    ProfileBin1D(xlow, xhigh)\n\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Bin1D_Dbn2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Bin1D_Dbn2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Bin1D_Dbn2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_HistoBin1D __pyx_vtable_4yoda_4core_HistoBin1D;

static PyObject *__pyx_tp_new_4yoda_4core_HistoBin1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_HistoBin1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin1D_Dbn1D(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_HistoBin1D *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_HistoBin1D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin1D_area(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin1D_4area_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin1D_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin1D_6height_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin1D_areaErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin1D_7areaErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin1D_heightErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin1D_9heightErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin1D_relErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin1D_6relErr_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_HistoBin1D[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_HistoBin1D[] = {
  {(char *)"area", __pyx_getprop_4yoda_4core_10HistoBin1D_area, 0, (char *)"\n        b.area <==> b.sumW\n\n        The area of the bin is the sum of weights of the bin; it is\n        independent of width.\n        ", 0},
  {(char *)"height", __pyx_getprop_4yoda_4core_10HistoBin1D_height, 0, (char *)"\n        b.height <==> b.area / b.width\n\n        The height of the bin is defined as the area divided by the\n        width.\n        ", 0},
  {(char *)"areaErr", __pyx_getprop_4yoda_4core_10HistoBin1D_areaErr, 0, (char *)"\n        Error computed using binomial statistics on squared sum of bin\n        weights, i.e. s.areaErr = sqrt(s.sumW2)\n        ", 0},
  {(char *)"heightErr", __pyx_getprop_4yoda_4core_10HistoBin1D_heightErr, 0, (char *)"\n        Height error - scales the s.areaError by the reciprocal of the\n        bin width.\n        ", 0},
  {(char *)"relErr", __pyx_getprop_4yoda_4core_10HistoBin1D_relErr, 0, (char *)"\n        Relative error - same for either area or height interpretations.\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_HistoBin1D = {
  __pyx_pw_4yoda_4core_10HistoBin1D_7__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_10HistoBin1D_9__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_10HistoBin1D_3__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_10HistoBin1D_5__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_HistoBin1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.HistoBin1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_HistoBin1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_11Bin1D_Dbn1D_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  &__pyx_tp_as_number_HistoBin1D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "HistoBin1D(double a, double b)", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_HistoBin1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_HistoBin1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_10HistoBin1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_HistoBin1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_ProfileBin1D __pyx_vtable_4yoda_4core_ProfileBin1D;

static PyObject *__pyx_tp_new_4yoda_4core_ProfileBin1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_ProfileBin1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin1D_Dbn2D(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_ProfileBin1D *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_ProfileBin1D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_mean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_4mean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_variance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_8variance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_stdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_6stdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_stdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_6stdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_rms(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_3rms_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_sumWY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_5sumWY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin1D_sumWY2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin1D_6sumWY2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_ProfileBin1D[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_ProfileBin1D[] = {
  {(char *)"mean", __pyx_getprop_4yoda_4core_12ProfileBin1D_mean, 0, (char *)"The mean of the y-values that have filled the bin.", 0},
  {(char *)"variance", __pyx_getprop_4yoda_4core_12ProfileBin1D_variance, 0, (char *)"The variance of the y-values that have filled the bin.", 0},
  {(char *)"stdDev", __pyx_getprop_4yoda_4core_12ProfileBin1D_stdDev, 0, (char *)"The standard deviation of the y-values that have filled the bin.", 0},
  {(char *)"stdErr", __pyx_getprop_4yoda_4core_12ProfileBin1D_stdErr, 0, (char *)"The standard error of the y-values that have filled the bin.", 0},
  {(char *)"rms", __pyx_getprop_4yoda_4core_12ProfileBin1D_rms, 0, (char *)"The RMS of the y-values that have filled the bin.", 0},
  {(char *)"sumWY", __pyx_getprop_4yoda_4core_12ProfileBin1D_sumWY, 0, (char *)"sum(weights * ys)", 0},
  {(char *)"sumWY2", __pyx_getprop_4yoda_4core_12ProfileBin1D_sumWY2, 0, (char *)"sum(weights * ys * ys)", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ProfileBin1D = {
  __pyx_pw_4yoda_4core_12ProfileBin1D_7__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_12ProfileBin1D_9__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_12ProfileBin1D_3__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_12ProfileBin1D_5__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_ProfileBin1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.ProfileBin1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_ProfileBin1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_11Bin1D_Dbn2D_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  &__pyx_tp_as_number_ProfileBin1D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "ProfileBin1D(double a, double b)\n\n    A 1D profile bin, as stored inside Profile1D.\n\n    Only one constructor:\n\n    * ProfileBin1D(xlow, xhigh)\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_ProfileBin1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_ProfileBin1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_12ProfileBin1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_ProfileBin1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Histo1D __pyx_vtable_4yoda_4core_Histo1D;

static PyObject *__pyx_tp_new_4yoda_4core_Histo1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Histo1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Histo1D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Histo1D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Histo1D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_totalDbn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_8totalDbn_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_underflow(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_9underflow_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_overflow(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_8overflow_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_xEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_6xEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_numBins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_7numBins_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo1D_bins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo1D_4bins_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Histo1D[] = {
  {"__init2", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_3__init2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_2__init2},
  {"__init3", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_5__init3, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_4__init3},
  {"__init5", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_7__init5, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_6__init5},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_15reset, METH_NOARGS, __pyx_doc_4yoda_4core_7Histo1D_14reset},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_17clone, METH_NOARGS, __pyx_doc_4yoda_4core_7Histo1D_16clone},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_19fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_18fill},
  {"fillBin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_21fillBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_20fillBin},
  {"integral", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_23integral, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_22integral},
  {"integralRange", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_25integralRange, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_24integralRange},
  {"integralTo", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_27integralTo, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_26integralTo},
  {"numEntries", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_29numEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_28numEntries},
  {"effNumEntries", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_31effNumEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_30effNumEntries},
  {"sumW", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_33sumW, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_32sumW},
  {"sumW2", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_35sumW2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_34sumW2},
  {"xMean", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_37xMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_36xMean},
  {"xVariance", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_39xVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_38xVariance},
  {"xStdDev", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_41xStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_40xStdDev},
  {"xStdErr", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_43xStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_42xStdErr},
  {"xRMS", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_45xRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_44xRMS},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_47scaleW, METH_O, __pyx_doc_4yoda_4core_7Histo1D_46scaleW},
  {"normalize", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_49normalize, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_48normalize},
  {"bin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_51bin, METH_O, __pyx_doc_4yoda_4core_7Histo1D_50bin},
  {"binIndexAt", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_53binIndexAt, METH_O, __pyx_doc_4yoda_4core_7Histo1D_52binIndexAt},
  {"binAt", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_55binAt, METH_O, __pyx_doc_4yoda_4core_7Histo1D_54binAt},
  {"addBin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_57addBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_56addBin},
  {"addBins", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_59addBins, METH_O, __pyx_doc_4yoda_4core_7Histo1D_58addBins},
  {"__addBins_edges", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_61__addBins_edges, METH_O, __pyx_doc_4yoda_4core_7Histo1D_60__addBins_edges},
  {"__addBins_bins", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_63__addBins_bins, METH_O, __pyx_doc_4yoda_4core_7Histo1D_62__addBins_bins},
  {"__addBins_points", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_65__addBins_points, METH_O, __pyx_doc_4yoda_4core_7Histo1D_64__addBins_points},
  {"__addBins_tuples", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_67__addBins_tuples, METH_O, __pyx_doc_4yoda_4core_7Histo1D_66__addBins_tuples},
  {"mergeBins", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_69mergeBins, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_68mergeBins},
  {"rebinBy", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_71rebinBy, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_70rebinBy},
  {"rebinTo", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_73rebinTo, METH_O, __pyx_doc_4yoda_4core_7Histo1D_72rebinTo},
  {"rebin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_75rebin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_74rebin},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_77mkScatter, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_76mkScatter},
  {"toIntegral", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_79toIntegral, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_78toIntegral},
  {"divideBy", (PyCFunction)__pyx_pw_4yoda_4core_7Histo1D_81divideBy, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo1D_80divideBy},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Histo1D[] = {
  {(char *)"totalDbn", __pyx_getprop_4yoda_4core_7Histo1D_totalDbn, 0, (char *)"None -> Dbn1D\n        The Dbn1D representing the total distribution.", 0},
  {(char *)"underflow", __pyx_getprop_4yoda_4core_7Histo1D_underflow, 0, (char *)"None -> Dbn1D\n        The Dbn1D representing the underflow distribution.", 0},
  {(char *)"overflow", __pyx_getprop_4yoda_4core_7Histo1D_overflow, 0, (char *)"None -> Dbn1D\n        The Dbn1D representing the overflow distribution.", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_7Histo1D_xMin, 0, (char *)"Low x edge of the histo.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_7Histo1D_xMax, 0, (char *)"High x edge of the histo.", 0},
  {(char *)"xEdges", __pyx_getprop_4yoda_4core_7Histo1D_xEdges, 0, (char *)"All x edges of the histo.", 0},
  {(char *)"numBins", __pyx_getprop_4yoda_4core_7Histo1D_numBins, 0, (char *)"() -> int\n        Number of bins (not including overflows).", 0},
  {(char *)"bins", __pyx_getprop_4yoda_4core_7Histo1D_bins, 0, (char *)"Access the ordered bins list.", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Histo1D = {
  __pyx_pw_4yoda_4core_7Histo1D_87__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_7Histo1D_89__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_7Histo1D_91__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_7Histo1D_83__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_7Histo1D_85__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Histo1D = {
  __pyx_pw_4yoda_4core_7Histo1D_9__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Histo1D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Histo1D = {
  __pyx_pw_4yoda_4core_7Histo1D_9__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_7Histo1D_11__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Histo1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Histo1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Histo1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_7Histo1D_13__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Histo1D, /*tp_as_number*/
  &__pyx_tp_as_sequence_Histo1D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Histo1D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Histo1D(*args, **kwargs)\n\n    1D histogram, with distinction between bin areas and heights.\n\n    Complete histogram binning is supported, including uniform/regular binning,\n    variable-width binning, unbinned gaps in the covered range, and\n    under/overflows. Rebinning by integer factors, or by explicit merging of\n    contiguous bins is also supported.\n\n    Rescaling of weights and/or the x axis is permitted in-place: the result is\n    still a valid Histo1D. Binning-compatible 1D histograms may be divided,\n    resulting in a Scatter2D since further fills would not be meaningful.\n\n    Several sets of arguments are tried by the constructor in the\n    following order.\n\n    Histo1D(path=\"\", title=\"\").\n      Construct a histogram with optional path and title but no bins.\n\n    Histo1D(nbins, low, high, path=\"\", title=\"\")\n      Construct a histogram with optional path and title, and nbins bins\n      uniformly distributed between low and high.\n\n    Histo1D(B, path=\"\", title=\"\").\n      Construct a histogram with optional path and title, from an\n      iterator of bins, B.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Histo1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Histo1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_7Histo1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Histo1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Profile1D __pyx_vtable_4yoda_4core_Profile1D;

static PyObject *__pyx_tp_new_4yoda_4core_Profile1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Profile1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Profile1D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Profile1D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Profile1D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_totalDbn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_8totalDbn_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_underflow(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_9underflow_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_overflow(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_8overflow_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_xEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_6xEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_numBins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_7numBins_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile1D_bins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile1D_4bins_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Profile1D[] = {
  {"__init2", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_3__init2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_2__init2},
  {"__init3", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_5__init3, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_4__init3},
  {"__init5", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_7__init5, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_6__init5},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_15reset, METH_NOARGS, __pyx_doc_4yoda_4core_9Profile1D_14reset},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_17clone, METH_NOARGS, __pyx_doc_4yoda_4core_9Profile1D_16clone},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_19fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_18fill},
  {"fillBin", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_21fillBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_20fillBin},
  {"numEntries", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_23numEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_22numEntries},
  {"effNumEntries", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_25effNumEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_24effNumEntries},
  {"sumW", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_27sumW, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_26sumW},
  {"sumW2", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_29sumW2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_28sumW2},
  {"xMean", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_31xMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_30xMean},
  {"xVariance", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_33xVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_32xVariance},
  {"xStdDev", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_35xStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_34xStdDev},
  {"xStdErr", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_37xStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_36xStdErr},
  {"xRMS", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_39xRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_38xRMS},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_41scaleW, METH_O, __pyx_doc_4yoda_4core_9Profile1D_40scaleW},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_43scaleY, METH_O, __pyx_doc_4yoda_4core_9Profile1D_42scaleY},
  {"binIndexAt", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_45binIndexAt, METH_O, __pyx_doc_4yoda_4core_9Profile1D_44binIndexAt},
  {"binAt", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_47binAt, METH_O, __pyx_doc_4yoda_4core_9Profile1D_46binAt},
  {"addBin", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_49addBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_48addBin},
  {"addBins", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_51addBins, METH_O, __pyx_doc_4yoda_4core_9Profile1D_50addBins},
  {"mergeBins", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_53mergeBins, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_52mergeBins},
  {"rebinBy", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_55rebinBy, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_54rebinBy},
  {"rebinTo", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_57rebinTo, METH_O, __pyx_doc_4yoda_4core_9Profile1D_56rebinTo},
  {"rebin", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_59rebin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_58rebin},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_61mkScatter, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile1D_60mkScatter},
  {"divideBy", (PyCFunction)__pyx_pw_4yoda_4core_9Profile1D_63divideBy, METH_O, __pyx_doc_4yoda_4core_9Profile1D_62divideBy},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Profile1D[] = {
  {(char *)"totalDbn", __pyx_getprop_4yoda_4core_9Profile1D_totalDbn, 0, (char *)"() -> Dbn2D\n        The Dbn2D representing the total distribution.", 0},
  {(char *)"underflow", __pyx_getprop_4yoda_4core_9Profile1D_underflow, 0, (char *)"() -> Dbn2D\n        The Dbn2D representing the underflow distribution.", 0},
  {(char *)"overflow", __pyx_getprop_4yoda_4core_9Profile1D_overflow, 0, (char *)"() -> Dbn2D\n        The Dbn2D representing the overflow distribution.", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_9Profile1D_xMin, 0, (char *)"Low x edge of the histo.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_9Profile1D_xMax, 0, (char *)"High x edge of the histo.", 0},
  {(char *)"xEdges", __pyx_getprop_4yoda_4core_9Profile1D_xEdges, 0, (char *)"All x edges of the histo.", 0},
  {(char *)"numBins", __pyx_getprop_4yoda_4core_9Profile1D_numBins, 0, (char *)"() -> int\n        Number of bins (not including overflows).", 0},
  {(char *)"bins", __pyx_getprop_4yoda_4core_9Profile1D_bins, 0, (char *)"Access the ordered bins list.", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Profile1D = {
  __pyx_pw_4yoda_4core_9Profile1D_69__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_9Profile1D_71__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_9Profile1D_73__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_9Profile1D_65__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_9Profile1D_67__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Profile1D = {
  __pyx_pw_4yoda_4core_9Profile1D_9__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Profile1D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Profile1D = {
  __pyx_pw_4yoda_4core_9Profile1D_9__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_9Profile1D_11__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Profile1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Profile1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Profile1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_9Profile1D_13__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Profile1D, /*tp_as_number*/
  &__pyx_tp_as_sequence_Profile1D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Profile1D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Profile1D(*args, **kwargs)\n\n    1D profile histogram, used to measure mean values of a y variable, binned in x.\n\n    Complete histogram binning is supported, including uniform/regular binning,\n    variable-width binning, unbinned gaps in the covered range, and\n    under/overflows. Rebinning by integer factors, or by explicit merging of\n    contiguous bins is also supported.\n\n    Rescaling of weights and/or the x axis is permitted in-place: the result is\n    still a valid Histo1D. Binning-compatible 1D histograms may be divided,\n    resulting in a Scatter2D since further fills would not be meaningful.\n\n    Several sets of arguments are tried by the constructor in the following\n    order.\n\n    Profile1D(path=\"\", title=\"\").\n      Construct a histogram with optional path and title but no bins.\n\n    Profile1D(nbins, low, high, path=\"\", title=\"\")\n      Construct a histogram with optional path and title, and nbins bins\n      uniformly distributed between low and high.\n\n    Profile1D(B, path=\"\", title=\"\").\n      Construct a histogram with optional path and title, from an\n      iterator of bins, B.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Profile1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Profile1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_9Profile1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Profile1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn2D __pyx_vtable_4yoda_4core_Bin2D_Dbn2D;

static PyObject *__pyx_tp_new_4yoda_4core_Bin2D_Dbn2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Bin2D_Dbn2D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xyEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xWidth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xWidth_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yWidth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yWidth_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyWidths(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyWidths_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6yFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xyFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5yMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6xyMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9xVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9yVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_10xyVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7yStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7xStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7yStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_8xyStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4xRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_4yRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5xyRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5sumWY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWXY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWX2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWY2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_6sumWY2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Bin2D_Dbn2D[] = {
  {"adjacentTo", (PyCFunction)__pyx_pw_4yoda_4core_11Bin2D_Dbn2D_5adjacentTo, METH_O, __pyx_doc_4yoda_4core_11Bin2D_Dbn2D_4adjacentTo},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Bin2D_Dbn2D[] = {
  {(char *)"xEdges", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xEdges, 0, (char *)"\n        The lower and upper x edges.\n        ", 0},
  {(char *)"yEdges", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yEdges, 0, (char *)"\n        The lower and upper y edges.\n        ", 0},
  {(char *)"xyEdges", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyEdges, 0, (char *)"\n        The lower and upper x,y edge pairs.\n        ", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMin, 0, (char *)"Low edge in x.", 0},
  {(char *)"yMin", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMin, 0, (char *)"Low edge in y.", 0},
  {(char *)"xyMin", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMin, 0, (char *)"Low edges in x,y.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMax, 0, (char *)"High edge in x.", 0},
  {(char *)"yMax", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMax, 0, (char *)"High edge in y.", 0},
  {(char *)"xyMax", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMax, 0, (char *)"High edges in x,y.", 0},
  {(char *)"xMid", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMid, 0, (char *)"Geometric centre of the bin in x", 0},
  {(char *)"yMid", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMid, 0, (char *)"Geometric centre of the bin in y", 0},
  {(char *)"xyMid", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMid, 0, (char *)"Geometric centre of the bin", 0},
  {(char *)"xWidth", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xWidth, 0, (char *)"Width of the bin in x", 0},
  {(char *)"yWidth", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yWidth, 0, (char *)"Width of the bin in y", 0},
  {(char *)"xyWidths", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyWidths, 0, (char *)"The widths of this bin in the x- and y-dimensions.", 0},
  {(char *)"xFocus", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xFocus, 0, (char *)"Focus of the bin in x", 0},
  {(char *)"yFocus", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yFocus, 0, (char *)"Focus of the bin in y", 0},
  {(char *)"xyFocus", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyFocus, 0, (char *)"The focus of the bin in the x- and y-dimensions", 0},
  {(char *)"xMean", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xMean, 0, (char *)0, 0},
  {(char *)"yMean", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yMean, 0, (char *)0, 0},
  {(char *)"xyMean", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyMean, 0, (char *)0, 0},
  {(char *)"xVariance", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xVariance, 0, (char *)0, 0},
  {(char *)"yVariance", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yVariance, 0, (char *)0, 0},
  {(char *)"xyVariance", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyVariance, 0, (char *)0, 0},
  {(char *)"xStdDev", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xStdDev, 0, (char *)0, 0},
  {(char *)"yStdDev", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yStdDev, 0, (char *)0, 0},
  {(char *)"xyStdDev", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyStdDev, 0, (char *)0, 0},
  {(char *)"xStdErr", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xStdErr, 0, (char *)0, 0},
  {(char *)"yStdErr", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yStdErr, 0, (char *)0, 0},
  {(char *)"xyStdErr", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyStdErr, 0, (char *)0, 0},
  {(char *)"xRMS", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xRMS, 0, (char *)0, 0},
  {(char *)"yRMS", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_yRMS, 0, (char *)0, 0},
  {(char *)"xyRMS", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_xyRMS, 0, (char *)0, 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWX, 0, (char *)0, 0},
  {(char *)"sumWY", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWY, 0, (char *)0, 0},
  {(char *)"sumWXY", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWXY, 0, (char *)0, 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWX2, 0, (char *)0, 0},
  {(char *)"sumWY2", __pyx_getprop_4yoda_4core_11Bin2D_Dbn2D_sumWY2, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Bin2D_Dbn2D = {
  __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_7__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_9__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Bin2D_Dbn2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Bin2D_Dbn2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Bin2D_Dbn2D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Bin2D_Dbn2D(xlow, xhigh, ylow, yhigh)\n2D Bin class templated on a Dbn2D", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Bin2D_Dbn2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Bin2D_Dbn2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_11Bin2D_Dbn2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Bin2D_Dbn2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Bin2D_Dbn3D __pyx_vtable_4yoda_4core_Bin2D_Dbn3D;

static PyObject *__pyx_tp_new_4yoda_4core_Bin2D_Dbn3D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Bin2D_Dbn3D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyEdges(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xyEdges_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyMid_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xWidth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xWidth_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yWidth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yWidth_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyWidths(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyWidths_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6yFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyFocus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xyFocus_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5yMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6xyMean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9xVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9yVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyVariance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_10xyVariance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7yStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyStdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyStdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7xStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7yStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyStdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_8xyStdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4xRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_4yRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyRMS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5xyRMS_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5sumWX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5sumWY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWXY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWX2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWX2_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWY2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_6sumWY2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Bin2D_Dbn3D[] = {
  {"adjacentTo", (PyCFunction)__pyx_pw_4yoda_4core_11Bin2D_Dbn3D_5adjacentTo, METH_O, __pyx_doc_4yoda_4core_11Bin2D_Dbn3D_4adjacentTo},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Bin2D_Dbn3D[] = {
  {(char *)"xEdges", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xEdges, 0, (char *)"\n        The lower and upper x edges.\n        ", 0},
  {(char *)"yEdges", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yEdges, 0, (char *)"\n        The lower and upper y edges.\n        ", 0},
  {(char *)"xyEdges", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyEdges, 0, (char *)"\n        The lower and upper x,y edge pairs.\n        ", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMin, 0, (char *)"Low edge in x.", 0},
  {(char *)"yMin", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMin, 0, (char *)"Low edge in y.", 0},
  {(char *)"xyMin", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMin, 0, (char *)"Low edges in x,y.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMax, 0, (char *)"High edge in x.", 0},
  {(char *)"yMax", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMax, 0, (char *)"High edge in y.", 0},
  {(char *)"xyMax", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMax, 0, (char *)"High edges in x,y.", 0},
  {(char *)"xMid", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMid, 0, (char *)"Geometric centre of the bin in x", 0},
  {(char *)"yMid", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMid, 0, (char *)"Geometric centre of the bin in y", 0},
  {(char *)"xyMid", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMid, 0, (char *)"Geometric centre of the bin", 0},
  {(char *)"xWidth", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xWidth, 0, (char *)"Width of the bin in x", 0},
  {(char *)"yWidth", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yWidth, 0, (char *)"Width of the bin in y", 0},
  {(char *)"xyWidths", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyWidths, 0, (char *)"The widths of this bin in the x- and y-dimensions.", 0},
  {(char *)"xFocus", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xFocus, 0, (char *)"Focus of the bin in x", 0},
  {(char *)"yFocus", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yFocus, 0, (char *)"Focus of the bin in y", 0},
  {(char *)"xyFocus", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyFocus, 0, (char *)"The focus of the bin in the x- and y-dimensions", 0},
  {(char *)"xMean", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xMean, 0, (char *)0, 0},
  {(char *)"yMean", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yMean, 0, (char *)0, 0},
  {(char *)"xyMean", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyMean, 0, (char *)0, 0},
  {(char *)"xVariance", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xVariance, 0, (char *)0, 0},
  {(char *)"yVariance", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yVariance, 0, (char *)0, 0},
  {(char *)"xyVariance", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyVariance, 0, (char *)0, 0},
  {(char *)"xStdDev", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xStdDev, 0, (char *)0, 0},
  {(char *)"yStdDev", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yStdDev, 0, (char *)0, 0},
  {(char *)"xyStdDev", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyStdDev, 0, (char *)0, 0},
  {(char *)"xStdErr", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xStdErr, 0, (char *)0, 0},
  {(char *)"yStdErr", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yStdErr, 0, (char *)0, 0},
  {(char *)"xyStdErr", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyStdErr, 0, (char *)0, 0},
  {(char *)"xRMS", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xRMS, 0, (char *)0, 0},
  {(char *)"yRMS", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_yRMS, 0, (char *)0, 0},
  {(char *)"xyRMS", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_xyRMS, 0, (char *)0, 0},
  {(char *)"sumWX", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWX, 0, (char *)0, 0},
  {(char *)"sumWY", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWY, 0, (char *)0, 0},
  {(char *)"sumWXY", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWXY, 0, (char *)0, 0},
  {(char *)"sumWX2", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWX2, 0, (char *)0, 0},
  {(char *)"sumWY2", __pyx_getprop_4yoda_4core_11Bin2D_Dbn3D_sumWY2, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Bin2D_Dbn3D = {
  __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_7__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_9__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_Bin2D_Dbn3D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Bin2D_Dbn3D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Bin2D_Dbn3D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Bin2D_Dbn3D(xlow, xhigh, ylow, yhigh)\n2D Bin class templated on a Dbn3D", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Bin2D_Dbn3D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Bin2D_Dbn3D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_11Bin2D_Dbn3D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Bin2D_Dbn3D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_ProfileBin2D __pyx_vtable_4yoda_4core_ProfileBin2D;

static PyObject *__pyx_tp_new_4yoda_4core_ProfileBin2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_ProfileBin2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin2D_Dbn3D(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_ProfileBin2D *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_ProfileBin2D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_mean(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_4mean_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_stdDev(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_6stdDev_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_variance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_8variance_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_stdErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_6stdErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_rms(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_3rms_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_sumWZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_5sumWZ_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_12ProfileBin2D_sumWZ2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_12ProfileBin2D_6sumWZ2_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_ProfileBin2D[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_ProfileBin2D[] = {
  {(char *)"mean", __pyx_getprop_4yoda_4core_12ProfileBin2D_mean, 0, (char *)0, 0},
  {(char *)"stdDev", __pyx_getprop_4yoda_4core_12ProfileBin2D_stdDev, 0, (char *)0, 0},
  {(char *)"variance", __pyx_getprop_4yoda_4core_12ProfileBin2D_variance, 0, (char *)0, 0},
  {(char *)"stdErr", __pyx_getprop_4yoda_4core_12ProfileBin2D_stdErr, 0, (char *)0, 0},
  {(char *)"rms", __pyx_getprop_4yoda_4core_12ProfileBin2D_rms, 0, (char *)0, 0},
  {(char *)"sumWZ", __pyx_getprop_4yoda_4core_12ProfileBin2D_sumWZ, 0, (char *)0, 0},
  {(char *)"sumWZ2", __pyx_getprop_4yoda_4core_12ProfileBin2D_sumWZ2, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ProfileBin2D = {
  __pyx_pw_4yoda_4core_12ProfileBin2D_3__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_12ProfileBin2D_5__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_ProfileBin2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.ProfileBin2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_ProfileBin2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_12ProfileBin2D_7__repr__, /*tp_repr*/
  &__pyx_tp_as_number_ProfileBin2D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "ProfileBin2D(xlow, xhigh, ylow, yhigh)", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_ProfileBin2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_ProfileBin2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_12ProfileBin2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_ProfileBin2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_HistoBin2D __pyx_vtable_4yoda_4core_HistoBin2D;

static PyObject *__pyx_tp_new_4yoda_4core_HistoBin2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_HistoBin2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Bin2D_Dbn2D(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_HistoBin2D *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_HistoBin2D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin2D_volume(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin2D_6volume_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin2D_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin2D_6height_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin2D_volumeErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin2D_9volumeErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin2D_heightErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin2D_9heightErr_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_10HistoBin2D_relErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_10HistoBin2D_6relErr_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_HistoBin2D[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_HistoBin2D[] = {
  {(char *)"volume", __pyx_getprop_4yoda_4core_10HistoBin2D_volume, 0, (char *)0, 0},
  {(char *)"height", __pyx_getprop_4yoda_4core_10HistoBin2D_height, 0, (char *)0, 0},
  {(char *)"volumeErr", __pyx_getprop_4yoda_4core_10HistoBin2D_volumeErr, 0, (char *)0, 0},
  {(char *)"heightErr", __pyx_getprop_4yoda_4core_10HistoBin2D_heightErr, 0, (char *)0, 0},
  {(char *)"relErr", __pyx_getprop_4yoda_4core_10HistoBin2D_relErr, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_HistoBin2D = {
  __pyx_pw_4yoda_4core_10HistoBin2D_3__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_10HistoBin2D_5__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_4yoda_4core_HistoBin2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.HistoBin2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_HistoBin2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Bin, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_10HistoBin2D_7__repr__, /*tp_repr*/
  &__pyx_tp_as_number_HistoBin2D, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "HistoBin2D(xlow, xhigh, ylow, yhigh)", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Bin, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Bin, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_HistoBin2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_HistoBin2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_10HistoBin2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_HistoBin2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Histo2D __pyx_vtable_4yoda_4core_Histo2D;

static PyObject *__pyx_tp_new_4yoda_4core_Histo2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Histo2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Histo2D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Histo2D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Histo2D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_totalDbn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_8totalDbn_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_yMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_4yMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_yMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_4yMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_numBins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_7numBins_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_numBinsX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_8numBinsX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_numBinsY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_8numBinsY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Histo2D_bins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Histo2D_4bins_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Histo2D[] = {
  {"__init2", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_3__init2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_2__init2},
  {"__init4", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_5__init4, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_4__init4},
  {"__init8", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_7__init8, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_6__init8},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_15reset, METH_NOARGS, __pyx_doc_4yoda_4core_7Histo2D_14reset},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_17clone, METH_NOARGS, __pyx_doc_4yoda_4core_7Histo2D_16clone},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_19fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_18fill},
  {"fillBin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_21fillBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_20fillBin},
  {"integral", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_23integral, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_22integral},
  {"numEntries", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_25numEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_24numEntries},
  {"effNumEntries", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_27effNumEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_26effNumEntries},
  {"sumW", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_29sumW, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_28sumW},
  {"sumW2", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_31sumW2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_30sumW2},
  {"xMean", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_33xMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_32xMean},
  {"yMean", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_35yMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_34yMean},
  {"xyMean", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_37xyMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_36xyMean},
  {"xVariance", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_39xVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_38xVariance},
  {"yVariance", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_41yVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_40yVariance},
  {"xyVariance", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_43xyVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_42xyVariance},
  {"xStdDev", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_45xStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_44xStdDev},
  {"yStdDev", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_47yStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_46yStdDev},
  {"xyStdDev", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_49xyStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_48xyStdDev},
  {"xStdErr", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_51xStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_50xStdErr},
  {"yStdErr", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_53yStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_52yStdErr},
  {"xyStdErr", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_55xyStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_54xyStdErr},
  {"xRMS", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_57xRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_56xRMS},
  {"yRMS", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_59yRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_58yRMS},
  {"xyRMS", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_61xyRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_60xyRMS},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_63scaleW, METH_O, __pyx_doc_4yoda_4core_7Histo2D_62scaleW},
  {"normalize", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_65normalize, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_64normalize},
  {"bin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_67bin, METH_O, __pyx_doc_4yoda_4core_7Histo2D_66bin},
  {"binIndexAt", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_69binIndexAt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_68binIndexAt},
  {"binAt", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_71binAt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_70binAt},
  {"addBin", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_73addBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_72addBin},
  {"addBins", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_75addBins, METH_O, __pyx_doc_4yoda_4core_7Histo2D_74addBins},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_77mkScatter, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_76mkScatter},
  {"divideBy", (PyCFunction)__pyx_pw_4yoda_4core_7Histo2D_79divideBy, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Histo2D_78divideBy},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Histo2D[] = {
  {(char *)"totalDbn", __pyx_getprop_4yoda_4core_7Histo2D_totalDbn, 0, (char *)"() -> Dbn2D\n        The Dbn2D representing the total distribution.", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_7Histo2D_xMin, 0, (char *)"Low x edge of the histo.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_7Histo2D_xMax, 0, (char *)"High x edge of the histo.", 0},
  {(char *)"yMin", __pyx_getprop_4yoda_4core_7Histo2D_yMin, 0, (char *)"Low y edge of the histo.", 0},
  {(char *)"yMax", __pyx_getprop_4yoda_4core_7Histo2D_yMax, 0, (char *)"High y edge of the histo.", 0},
  {(char *)"numBins", __pyx_getprop_4yoda_4core_7Histo2D_numBins, 0, (char *)"() -> int\n        Number of bins (not including overflows).", 0},
  {(char *)"numBinsX", __pyx_getprop_4yoda_4core_7Histo2D_numBinsX, 0, (char *)"() -> int\n        Number of bins (edges) along the x axis.", 0},
  {(char *)"numBinsY", __pyx_getprop_4yoda_4core_7Histo2D_numBinsY, 0, (char *)"() -> int\n        Number of bins (edges) along the y axis.", 0},
  {(char *)"bins", __pyx_getprop_4yoda_4core_7Histo2D_bins, 0, (char *)"Access the ordered bins list.", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Histo2D = {
  __pyx_pw_4yoda_4core_7Histo2D_85__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_7Histo2D_87__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_7Histo2D_89__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_7Histo2D_81__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_7Histo2D_83__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Histo2D = {
  __pyx_pw_4yoda_4core_7Histo2D_9__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Histo2D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Histo2D = {
  __pyx_pw_4yoda_4core_7Histo2D_9__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_7Histo2D_11__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Histo2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Histo2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Histo2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_7Histo2D_13__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Histo2D, /*tp_as_number*/
  &__pyx_tp_as_sequence_Histo2D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Histo2D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Histo2D(*args, **kwargs)\n\n    2D histogram.\n\n    Complete histogramming is supported, including uniform/regular binning,\n    variable-width bininng, unbinned gaps in the covered range, and outflows\n    (under/overflows around all edges and corners).\n\n    Rebinning by integer factors, or by explicit merging of contiguous bins is\n    also supported, but in development.\n\n    Rescaling of weights and/or the x axis is permitted in-place: the\n    result is still a valid Histo2D. Binning-compatible 2D histograms\n    may be divided, resulting in a Scatter3D since further fills would\n    not be meaningful.\n\n    Several sets of arguments are tried by the constructor in the\n    following order.\n\n    Histo2D(path=\"\", title=\"\").\n      Construct a histogram with optional path and title but no bins.\n\n    Histo2D(nxbins, xlow, xhigh, nybins, ylow, yhigh, path=\"\", title=\"\").\n      Construct a histogram with nxbins on the x axis and nybins on the y\n      axis, distributed linearly between the respective low--high limits.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Histo2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Histo2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_7Histo2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Histo2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Profile2D __pyx_vtable_4yoda_4core_Profile2D;

static PyObject *__pyx_tp_new_4yoda_4core_Profile2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Profile2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Profile2D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Profile2D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Profile2D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_totalDbn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_8totalDbn_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_yMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_4yMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_yMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_4yMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_numBins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_7numBins_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_numBinsX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_8numBinsX_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_numBinsY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_8numBinsY_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Profile2D_bins(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Profile2D_4bins_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Profile2D[] = {
  {"__init2", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_3__init2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_2__init2},
  {"__init4", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_5__init4, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_4__init4},
  {"__init8", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_7__init8, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_6__init8},
  {"reset", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_15reset, METH_NOARGS, __pyx_doc_4yoda_4core_9Profile2D_14reset},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_17clone, METH_NOARGS, __pyx_doc_4yoda_4core_9Profile2D_16clone},
  {"fill", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_19fill, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_18fill},
  {"fillBin", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_21fillBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_20fillBin},
  {"numEntries", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_23numEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_22numEntries},
  {"effNumEntries", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_25effNumEntries, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_24effNumEntries},
  {"sumW", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_27sumW, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_26sumW},
  {"sumW2", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_29sumW2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_28sumW2},
  {"xMean", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_31xMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_30xMean},
  {"yMean", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_33yMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_32yMean},
  {"xyMean", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_35xyMean, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_34xyMean},
  {"xVariance", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_37xVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_36xVariance},
  {"yVariance", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_39yVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_38yVariance},
  {"xyVariance", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_41xyVariance, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_40xyVariance},
  {"xStdDev", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_43xStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_42xStdDev},
  {"yStdDev", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_45yStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_44yStdDev},
  {"xyStdDev", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_47xyStdDev, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_46xyStdDev},
  {"xStdErr", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_49xStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_48xStdErr},
  {"yStdErr", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_51yStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_50yStdErr},
  {"xyStdErr", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_53xyStdErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_52xyStdErr},
  {"xRMS", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_55xRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_54xRMS},
  {"yRMS", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_57yRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_56yRMS},
  {"xyRMS", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_59xyRMS, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_58xyRMS},
  {"scaleW", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_61scaleW, METH_O, __pyx_doc_4yoda_4core_9Profile2D_60scaleW},
  {"scaleZ", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_63scaleZ, METH_O, __pyx_doc_4yoda_4core_9Profile2D_62scaleZ},
  {"bin", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_65bin, METH_O, __pyx_doc_4yoda_4core_9Profile2D_64bin},
  {"binIndexAt", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_67binIndexAt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_66binIndexAt},
  {"binAt", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_69binAt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_68binAt},
  {"addBin", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_71addBin, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_70addBin},
  {"addBins", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_73addBins, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_72addBins},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_75mkScatter, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Profile2D_74mkScatter},
  {"divideBy", (PyCFunction)__pyx_pw_4yoda_4core_9Profile2D_77divideBy, METH_O, __pyx_doc_4yoda_4core_9Profile2D_76divideBy},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Profile2D[] = {
  {(char *)"totalDbn", __pyx_getprop_4yoda_4core_9Profile2D_totalDbn, 0, (char *)"() -> Dbn3D\n        The Dbn3D representing the total distribution.", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_9Profile2D_xMin, 0, (char *)"Low x edge of the histo.", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_9Profile2D_xMax, 0, (char *)"High x edge of the histo.", 0},
  {(char *)"yMin", __pyx_getprop_4yoda_4core_9Profile2D_yMin, 0, (char *)"Low y edge of the histo.", 0},
  {(char *)"yMax", __pyx_getprop_4yoda_4core_9Profile2D_yMax, 0, (char *)"High y edge of the histo.", 0},
  {(char *)"numBins", __pyx_getprop_4yoda_4core_9Profile2D_numBins, 0, (char *)"() -> int\n        Number of bins (not including overflows).", 0},
  {(char *)"numBinsX", __pyx_getprop_4yoda_4core_9Profile2D_numBinsX, 0, (char *)"() -> int\n        Number of bins (edges) along the x axis.", 0},
  {(char *)"numBinsY", __pyx_getprop_4yoda_4core_9Profile2D_numBinsY, 0, (char *)"() -> int\n        Number of bins (edges) along the y axis.", 0},
  {(char *)"bins", __pyx_getprop_4yoda_4core_9Profile2D_bins, 0, (char *)"Access the ordered bins list.", 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Profile2D = {
  __pyx_pw_4yoda_4core_9Profile2D_83__add__, /*nb_add*/
  __pyx_pw_4yoda_4core_9Profile2D_85__sub__, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  __pyx_pw_4yoda_4core_9Profile2D_87__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_4yoda_4core_9Profile2D_79__iadd__, /*nb_inplace_add*/
  __pyx_pw_4yoda_4core_9Profile2D_81__isub__, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Profile2D = {
  __pyx_pw_4yoda_4core_9Profile2D_9__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Profile2D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Profile2D = {
  __pyx_pw_4yoda_4core_9Profile2D_9__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_9Profile2D_11__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Profile2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Profile2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Profile2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_9Profile2D_13__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Profile2D, /*tp_as_number*/
  &__pyx_tp_as_sequence_Profile2D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Profile2D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Profile2D(*args, **kwargs)\n\n    2D profile histogram, used to measure mean values of a z variable, binned in x and y.\n\n    Complete histogramming is supported, including uniform/regular binning,\n    variable-width bininng, unbinned gaps in the covered range, and outflows\n    (under/overflows around all edges and corners).\n\n    Rebinning by integer factors, or by explicit merging of contiguous bins is\n    also supported, but in development.\n\n    Rescaling of weights and/or the x axis is permitted in-place: the\n    result is still a valid Histo2D. Binning-compatible 1D histograms\n    may be divided, resulting in a Scatter3D since further fills would\n    not be meaningful.\n\n    Several sets of arguments are tried by the constructor in the\n    following order.\n\n    Histo2D(path=\"\", title=\"\").\n      Construct a histogram with optional path and title but no bins.\n\n    Histo2D(nxbins, xlow, xhigh, nybins, ylow, yhigh, path=\"\", title=\"\").\n      Construct a histogram with nxbins on the x axis and nybins on the y\n      axis, distributed linearly between the respective low--high limits.\n\n    NOT YET FINISHED: please contact the YODA authors if you require extra functionality.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Profile2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Profile2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_9Profile2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Profile2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Point __pyx_vtable_4yoda_4core_Point;

static PyObject *__pyx_tp_new_4yoda_4core_Point(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Point *p;
  PyObject *o = __pyx_ptype_4yoda_4util_Base->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Point *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Point;
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core_Point(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yoda_4core_5Point_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_4yoda_4util_Base)) __pyx_ptype_4yoda_4util_Base->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_4yoda_4core_Point);
}

static int __pyx_tp_traverse_4yoda_4core_Point(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_4yoda_4util_Base)) ? ((__pyx_ptype_4yoda_4util_Base->tp_traverse) ? __pyx_ptype_4yoda_4util_Base->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yoda_4core_Point)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_4yoda_4core_Point(PyObject *o) {
  if (likely(__pyx_ptype_4yoda_4util_Base)) { if (__pyx_ptype_4yoda_4util_Base->tp_clear) __pyx_ptype_4yoda_4util_Base->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yoda_4core_Point);
  return 0;
}

static PyObject *__pyx_getprop_4yoda_4core_5Point_dim(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_5Point_3dim_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Point[] = {
  {"val", (PyCFunction)__pyx_pw_4yoda_4core_5Point_3val, METH_O, __pyx_doc_4yoda_4core_5Point_2val},
  {"setVal", (PyCFunction)__pyx_pw_4yoda_4core_5Point_5setVal, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Point_4setVal},
  {"errs", (PyCFunction)__pyx_pw_4yoda_4core_5Point_7errs, METH_O, __pyx_doc_4yoda_4core_5Point_6errs},
  {"setErr", (PyCFunction)__pyx_pw_4yoda_4core_5Point_9setErr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Point_8setErr},
  {"setErrs", (PyCFunction)__pyx_pw_4yoda_4core_5Point_11setErrs, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Point_10setErrs},
  {"errMinus", (PyCFunction)__pyx_pw_4yoda_4core_5Point_13errMinus, METH_O, __pyx_doc_4yoda_4core_5Point_12errMinus},
  {"setErrMinus", (PyCFunction)__pyx_pw_4yoda_4core_5Point_15setErrMinus, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Point_14setErrMinus},
  {"errPlus", (PyCFunction)__pyx_pw_4yoda_4core_5Point_17errPlus, METH_O, __pyx_doc_4yoda_4core_5Point_16errPlus},
  {"setErrPlus", (PyCFunction)__pyx_pw_4yoda_4core_5Point_19setErrPlus, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Point_18setErrPlus},
  {"errAvg", (PyCFunction)__pyx_pw_4yoda_4core_5Point_21errAvg, METH_O, __pyx_doc_4yoda_4core_5Point_20errAvg},
  {"set", (PyCFunction)__pyx_pw_4yoda_4core_5Point_23set, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_5Point_22set},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Point[] = {
  {(char *)"dim", __pyx_getprop_4yoda_4core_5Point_dim, 0, (char *)"None -> int\n        Space dimension of the point (should match containing Scatter)", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yoda_4core_Point = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Point", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Point), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Point, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A generic point with errors, used by the Scatter classes.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Point, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Point, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Point, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Point, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Point, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Point1D __pyx_vtable_4yoda_4core_Point1D;

static PyObject *__pyx_tp_new_4yoda_4core_Point1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Point1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Point(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Point1D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Point1D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_7Point1D_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point1D_1x_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point1D_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point1D_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point1D_xErrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point1D_5xErrs_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point1D_xErrs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point1D_5xErrs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point1D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point1D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point1D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point1D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point1D_xErrAvg(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point1D_7xErrAvg_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Point1D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_7Point1D_3copy, METH_NOARGS, __pyx_doc_4yoda_4core_7Point1D_2copy},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_7Point1D_5scaleX, METH_O, __pyx_doc_4yoda_4core_7Point1D_4scaleX},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Point1D[] = {
  {(char *)"x", __pyx_getprop_4yoda_4core_7Point1D_x, __pyx_setprop_4yoda_4core_7Point1D_x, (char *)"x coordinate", 0},
  {(char *)"xErrs", __pyx_getprop_4yoda_4core_7Point1D_xErrs, __pyx_setprop_4yoda_4core_7Point1D_xErrs, (char *)"The x errors", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_7Point1D_xMin, 0, (char *)"The minimum x position, i.e. lowest error", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_7Point1D_xMax, 0, (char *)"The maximum x position, i.e. highest error", 0},
  {(char *)"xErrAvg", __pyx_getprop_4yoda_4core_7Point1D_xErrAvg, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yoda_4core_Point1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Point1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Point1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Point, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_7Point1D_7__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Point1D(x=0, xerrs=0)\n\n    A 1D point with errors, used by the Scatter1D class.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Point, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Point, /*tp_clear*/
  __pyx_pw_4yoda_4core_7Point1D_9__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Point1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Point1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_7Point1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Point1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Point2D __pyx_vtable_4yoda_4core_Point2D;

static PyObject *__pyx_tp_new_4yoda_4core_Point2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Point2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Point(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Point2D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Point2D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_1x_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point2D_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point2D_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_1y_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point2D_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point2D_1y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_xy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_2xy_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point2D_xy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point2D_2xy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_xErrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_5xErrs_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point2D_xErrs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point2D_5xErrs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_yErrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_5yErrs_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point2D_yErrs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point2D_5yErrs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_yMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_4yMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_yMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_4yMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_xErrAvg(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_7xErrAvg_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point2D_yErrAvg(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point2D_7yErrAvg_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Point2D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_7Point2D_3copy, METH_NOARGS, __pyx_doc_4yoda_4core_7Point2D_2copy},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_7Point2D_5scaleX, METH_O, __pyx_doc_4yoda_4core_7Point2D_4scaleX},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_7Point2D_7scaleY, METH_O, __pyx_doc_4yoda_4core_7Point2D_6scaleY},
  {"scaleXY", (PyCFunction)__pyx_pw_4yoda_4core_7Point2D_9scaleXY, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Point2D_8scaleXY},
  {"scale", (PyCFunction)__pyx_pw_4yoda_4core_7Point2D_11scale, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Point2D_10scale},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Point2D[] = {
  {(char *)"x", __pyx_getprop_4yoda_4core_7Point2D_x, __pyx_setprop_4yoda_4core_7Point2D_x, (char *)"x coordinate", 0},
  {(char *)"y", __pyx_getprop_4yoda_4core_7Point2D_y, __pyx_setprop_4yoda_4core_7Point2D_y, (char *)"y coordinate", 0},
  {(char *)"xy", __pyx_getprop_4yoda_4core_7Point2D_xy, __pyx_setprop_4yoda_4core_7Point2D_xy, (char *)"x and y coordinates as a tuple", 0},
  {(char *)"xErrs", __pyx_getprop_4yoda_4core_7Point2D_xErrs, __pyx_setprop_4yoda_4core_7Point2D_xErrs, (char *)"The x errors", 0},
  {(char *)"yErrs", __pyx_getprop_4yoda_4core_7Point2D_yErrs, __pyx_setprop_4yoda_4core_7Point2D_yErrs, (char *)"The y errors", 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_7Point2D_xMin, 0, (char *)"The minimum x position, i.e. lowest error", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_7Point2D_xMax, 0, (char *)"The maximum x position, i.e. highest error", 0},
  {(char *)"yMin", __pyx_getprop_4yoda_4core_7Point2D_yMin, 0, (char *)"The minimum y position, i.e. lowest error", 0},
  {(char *)"yMax", __pyx_getprop_4yoda_4core_7Point2D_yMax, 0, (char *)"The maximum y position, i.e. highest error", 0},
  {(char *)"xErrAvg", __pyx_getprop_4yoda_4core_7Point2D_xErrAvg, 0, (char *)0, 0},
  {(char *)"yErrAvg", __pyx_getprop_4yoda_4core_7Point2D_yErrAvg, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yoda_4core_Point2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Point2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Point2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Point, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_7Point2D_13__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Point2D(x=0, y=0, xerrs=0, yerrs=0)\n\n    A 2D point with errors, used by the Scatter2D class.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Point, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Point, /*tp_clear*/
  __pyx_pw_4yoda_4core_7Point2D_15__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Point2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Point2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_7Point2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Point2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Point3D __pyx_vtable_4yoda_4core_Point3D;

static PyObject *__pyx_tp_new_4yoda_4core_Point3D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Point3D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_Point(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Point3D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Point3D;
  return o;
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_1x_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_1y_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_1y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_1z_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_1z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_xyz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_3xyz_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_xyz(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_3xyz_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_xErrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_5xErrs_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_xErrs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_5xErrs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_yErrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_5yErrs_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_yErrs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_5yErrs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_zErrs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_5zErrs_1__get__(o);
}

static int __pyx_setprop_4yoda_4core_7Point3D_zErrs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4yoda_4core_7Point3D_5zErrs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_xMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_4xMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_xMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_4xMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_yMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_4yMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_yMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_4yMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_zMin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_4zMin_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_zMax(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_4zMax_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_xErrAvg(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_7xErrAvg_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_yErrAvg(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_7yErrAvg_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_7Point3D_zErrAvg(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_7Point3D_7zErrAvg_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Point3D[] = {
  {"copy", (PyCFunction)__pyx_pw_4yoda_4core_7Point3D_3copy, METH_NOARGS, __pyx_doc_4yoda_4core_7Point3D_2copy},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_7Point3D_5scaleX, METH_O, __pyx_doc_4yoda_4core_7Point3D_4scaleX},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_7Point3D_7scaleY, METH_O, __pyx_doc_4yoda_4core_7Point3D_6scaleY},
  {"scaleZ", (PyCFunction)__pyx_pw_4yoda_4core_7Point3D_9scaleZ, METH_O, __pyx_doc_4yoda_4core_7Point3D_8scaleZ},
  {"scaleXYZ", (PyCFunction)__pyx_pw_4yoda_4core_7Point3D_11scaleXYZ, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Point3D_10scaleXYZ},
  {"scaleXYZ", (PyCFunction)__pyx_pw_4yoda_4core_7Point3D_13scaleXYZ, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_7Point3D_12scaleXYZ},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Point3D[] = {
  {(char *)"x", __pyx_getprop_4yoda_4core_7Point3D_x, __pyx_setprop_4yoda_4core_7Point3D_x, (char *)"x coordinate", 0},
  {(char *)"y", __pyx_getprop_4yoda_4core_7Point3D_y, __pyx_setprop_4yoda_4core_7Point3D_y, (char *)"y coordinate", 0},
  {(char *)"z", __pyx_getprop_4yoda_4core_7Point3D_z, __pyx_setprop_4yoda_4core_7Point3D_z, (char *)"y coordinate", 0},
  {(char *)"xyz", __pyx_getprop_4yoda_4core_7Point3D_xyz, __pyx_setprop_4yoda_4core_7Point3D_xyz, (char *)0, 0},
  {(char *)"xErrs", __pyx_getprop_4yoda_4core_7Point3D_xErrs, __pyx_setprop_4yoda_4core_7Point3D_xErrs, (char *)0, 0},
  {(char *)"yErrs", __pyx_getprop_4yoda_4core_7Point3D_yErrs, __pyx_setprop_4yoda_4core_7Point3D_yErrs, (char *)0, 0},
  {(char *)"zErrs", __pyx_getprop_4yoda_4core_7Point3D_zErrs, __pyx_setprop_4yoda_4core_7Point3D_zErrs, (char *)0, 0},
  {(char *)"xMin", __pyx_getprop_4yoda_4core_7Point3D_xMin, 0, (char *)"The minimum x position, i.e. lowest error", 0},
  {(char *)"xMax", __pyx_getprop_4yoda_4core_7Point3D_xMax, 0, (char *)"The maximum x position, i.e. highest error", 0},
  {(char *)"yMin", __pyx_getprop_4yoda_4core_7Point3D_yMin, 0, (char *)"The minimum y position, i.e. lowest error", 0},
  {(char *)"yMax", __pyx_getprop_4yoda_4core_7Point3D_yMax, 0, (char *)"The maximum y position, i.e. highest error", 0},
  {(char *)"zMin", __pyx_getprop_4yoda_4core_7Point3D_zMin, 0, (char *)"The minimum z position, i.e. lowest error", 0},
  {(char *)"zMax", __pyx_getprop_4yoda_4core_7Point3D_zMax, 0, (char *)"The maximum z position, i.e. highest error", 0},
  {(char *)"xErrAvg", __pyx_getprop_4yoda_4core_7Point3D_xErrAvg, 0, (char *)0, 0},
  {(char *)"yErrAvg", __pyx_getprop_4yoda_4core_7Point3D_yErrAvg, 0, (char *)0, 0},
  {(char *)"zErrAvg", __pyx_getprop_4yoda_4core_7Point3D_zErrAvg, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yoda_4core_Point3D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Point3D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Point3D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_Point, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_7Point3D_15__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Point3D(x=0, y=0, z=0, xerrs=0, yerrs=0, zerrs=0)\n\n    A 3D point with errors, used by the Scatter3D class.\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_Point, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_Point, /*tp_clear*/
  __pyx_pw_4yoda_4core_7Point3D_17__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Point3D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Point3D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_7Point3D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Point3D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Scatter1D __pyx_vtable_4yoda_4core_Scatter1D;

static PyObject *__pyx_tp_new_4yoda_4core_Scatter1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Scatter1D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Scatter1D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Scatter1D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Scatter1D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_9Scatter1D_numPoints(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Scatter1D_9numPoints_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Scatter1D_points(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Scatter1D_6points_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Scatter1D[] = {
  {"__init_2", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_3__init_2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter1D_2__init_2},
  {"__init_3", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_5__init_3, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter1D_4__init_3},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_7clone, METH_NOARGS, __pyx_doc_4yoda_4core_9Scatter1D_6clone},
  {"point", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_13point, METH_O, __pyx_doc_4yoda_4core_9Scatter1D_12point},
  {"addPoint", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_17addPoint, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter1D_16addPoint},
  {"__addPoint_explicit", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_19__addPoint_explicit, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter1D_18__addPoint_explicit},
  {"__addPoint_point", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_21__addPoint_point, METH_O, __pyx_doc_4yoda_4core_9Scatter1D_20__addPoint_point},
  {"addPoints", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_23addPoints, METH_O, __pyx_doc_4yoda_4core_9Scatter1D_22addPoints},
  {"combineWith", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_25combineWith, METH_O, __pyx_doc_4yoda_4core_9Scatter1D_24combineWith},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_27mkScatter, METH_NOARGS, __pyx_doc_4yoda_4core_9Scatter1D_26mkScatter},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_29scaleX, METH_O, __pyx_doc_4yoda_4core_9Scatter1D_28scaleX},
  {"transformX", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter1D_31transformX, METH_O, __pyx_doc_4yoda_4core_9Scatter1D_30transformX},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Scatter1D[] = {
  {(char *)"numPoints", __pyx_getprop_4yoda_4core_9Scatter1D_numPoints, 0, (char *)"() -> int\n        Number of points in this scatter.", 0},
  {(char *)"points", __pyx_getprop_4yoda_4core_9Scatter1D_points, 0, (char *)"Access the ordered list of points.", 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Scatter1D = {
  __pyx_pw_4yoda_4core_9Scatter1D_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Scatter1D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Scatter1D = {
  __pyx_pw_4yoda_4core_9Scatter1D_11__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_9Scatter1D_15__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Scatter1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Scatter1D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Scatter1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_9Scatter1D_9__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Scatter1D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Scatter1D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Scatter1D(*args, **kwargs)\n\n    1D scatter plot, i.e. a collection of Point1D objects with positions and errors.\n\n    Constructor calling idioms:\n\n    Scatter1D(path=\"\", title=\"\")\n      Create a new empty scatter, with optional path and title.\n\n    Scatter1D(points, path=\"\", title=\"\"):\n      Create a new empty scatter from an iterable of points, with optional path\n      and title.\n\n    TODO: more documentation!\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Scatter1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Scatter1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_9Scatter1D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Scatter1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Scatter2D __pyx_vtable_4yoda_4core_Scatter2D;

static PyObject *__pyx_tp_new_4yoda_4core_Scatter2D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Scatter2D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Scatter2D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Scatter2D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Scatter2D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_9Scatter2D_numPoints(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Scatter2D_9numPoints_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Scatter2D_points(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Scatter2D_6points_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Scatter2D[] = {
  {"__init_2", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_3__init_2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter2D_2__init_2},
  {"__init_3", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_5__init_3, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter2D_4__init_3},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_7clone, METH_NOARGS, __pyx_doc_4yoda_4core_9Scatter2D_6clone},
  {"point", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_13point, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_12point},
  {"addPoint", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_17addPoint, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter2D_16addPoint},
  {"__addPoint_explicit", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_19__addPoint_explicit, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter2D_18__addPoint_explicit},
  {"__addPoint_point", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_21__addPoint_point, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_20__addPoint_point},
  {"addPoints", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_23addPoints, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_22addPoints},
  {"combineWith", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_25combineWith, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_24combineWith},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_27mkScatter, METH_NOARGS, __pyx_doc_4yoda_4core_9Scatter2D_26mkScatter},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_29scaleX, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_28scaleX},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_31scaleY, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_30scaleY},
  {"scaleXY", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_33scaleXY, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter2D_32scaleXY},
  {"scale", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_35scale, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter2D_34scale},
  {"transformX", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_37transformX, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_36transformX},
  {"transformY", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter2D_39transformY, METH_O, __pyx_doc_4yoda_4core_9Scatter2D_38transformY},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Scatter2D[] = {
  {(char *)"numPoints", __pyx_getprop_4yoda_4core_9Scatter2D_numPoints, 0, (char *)"() -> int\n        Number of points in this scatter.", 0},
  {(char *)"points", __pyx_getprop_4yoda_4core_9Scatter2D_points, 0, (char *)"Access the ordered list of points.", 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Scatter2D = {
  __pyx_pw_4yoda_4core_9Scatter2D_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Scatter2D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Scatter2D = {
  __pyx_pw_4yoda_4core_9Scatter2D_11__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_9Scatter2D_15__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Scatter2D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Scatter2D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Scatter2D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_9Scatter2D_9__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Scatter2D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Scatter2D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Scatter2D(*args, **kwargs)\n\n    2D scatter plot, i.e. a collection of Point2D objects with positions and errors.\n\n    Constructor calling idioms:\n\n    Scatter2D(path=\"\", title=\"\")\n      Create a new empty scatter, with optional path and title.\n\n    Scatter2D(points, path=\"\", title=\"\"):\n      Create a new empty scatter from an iterable of points, with optional path\n      and title.\n\n    TODO: more documentation!\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Scatter2D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Scatter2D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_9Scatter2D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Scatter2D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yoda_4core_Scatter3D __pyx_vtable_4yoda_4core_Scatter3D;

static PyObject *__pyx_tp_new_4yoda_4core_Scatter3D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yoda_4core_Scatter3D *p;
  PyObject *o = __pyx_tp_new_4yoda_4core_AnalysisObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yoda_4core_Scatter3D *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yoda_4util_Base*)__pyx_vtabptr_4yoda_4core_Scatter3D;
  return o;
}
static PyObject *__pyx_sq_item_4yoda_4core_Scatter3D(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_4yoda_4core_9Scatter3D_numPoints(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Scatter3D_9numPoints_1__get__(o);
}

static PyObject *__pyx_getprop_4yoda_4core_9Scatter3D_points(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4yoda_4core_9Scatter3D_6points_1__get__(o);
}

static PyMethodDef __pyx_methods_4yoda_4core_Scatter3D[] = {
  {"__init_2", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_3__init_2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter3D_2__init_2},
  {"__init_3", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_5__init_3, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter3D_4__init_3},
  {"clone", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_7clone, METH_NOARGS, __pyx_doc_4yoda_4core_9Scatter3D_6clone},
  {"point", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_13point, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_12point},
  {"addPoint", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_17addPoint, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter3D_16addPoint},
  {"__addPoint_explicit", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_19__addPoint_explicit, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter3D_18__addPoint_explicit},
  {"__addPoint_point", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_21__addPoint_point, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_20__addPoint_point},
  {"addPoints", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_23addPoints, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_22addPoints},
  {"combineWith", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_25combineWith, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_24combineWith},
  {"mkScatter", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_27mkScatter, METH_NOARGS, __pyx_doc_4yoda_4core_9Scatter3D_26mkScatter},
  {"scaleX", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_29scaleX, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_28scaleX},
  {"scaleY", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_31scaleY, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_30scaleY},
  {"scaleZ", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_33scaleZ, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_32scaleZ},
  {"scaleXYZ", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_35scaleXYZ, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter3D_34scaleXYZ},
  {"scale", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_37scale, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4yoda_4core_9Scatter3D_36scale},
  {"transformX", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_39transformX, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_38transformX},
  {"transformY", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_41transformY, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_40transformY},
  {"transformZ", (PyCFunction)__pyx_pw_4yoda_4core_9Scatter3D_43transformZ, METH_O, __pyx_doc_4yoda_4core_9Scatter3D_42transformZ},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4yoda_4core_Scatter3D[] = {
  {(char *)"numPoints", __pyx_getprop_4yoda_4core_9Scatter3D_numPoints, 0, (char *)"() -> int\n        Number of points in this scatter.", 0},
  {(char *)"points", __pyx_getprop_4yoda_4core_9Scatter3D_points, 0, (char *)"Access the ordered list of points.", 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Scatter3D = {
  __pyx_pw_4yoda_4core_9Scatter3D_11__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4yoda_4core_Scatter3D, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Scatter3D = {
  __pyx_pw_4yoda_4core_9Scatter3D_11__len__, /*mp_length*/
  __pyx_pw_4yoda_4core_9Scatter3D_15__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_4yoda_4core_Scatter3D = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.Scatter3D", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core_Scatter3D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core_AnalysisObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_4yoda_4core_9Scatter3D_9__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Scatter3D, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Scatter3D, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Scatter3D(*args, **kwargs)\n\n    3D scatter plot, i.e. a collection of Point3D objects with positions and errors.\n\n    Constructor calling idioms:\n\n    Scatter3D(path=\"\", title=\"\")\n      Create a new empty scatter, with optional path and title.\n\n    Scatter3D(points, path=\"\", title=\"\"):\n      Create a new empty scatter from an iterable of points, with optional path\n      and title.\n\n    TODO: more documentation!\n    ", /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core_AnalysisObject, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core_AnalysisObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yoda_4core_Scatter3D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4yoda_4core_Scatter3D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yoda_4core_9Scatter3D_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core_Scatter3D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *__pyx_freelist_4yoda_4core___pyx_scope_struct____init3[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct____init3 = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct____init3(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct____init3 > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct____init3[--__pyx_freecount_4yoda_4core___pyx_scope_struct____init3];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct____init3(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_bins_or_edges);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct____init3 < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct____init3[__pyx_freecount_4yoda_4core___pyx_scope_struct____init3++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct____init3(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *)o;
  if (p->__pyx_v_bins_or_edges) {
    e = (*v)(p->__pyx_v_bins_or_edges, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct____init3(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *)o;
  tmp = ((PyObject*)p->__pyx_v_bins_or_edges);
  p->__pyx_v_bins_or_edges = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct____init3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct____init3", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct____init3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct____init3, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct____init3, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct____init3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *__pyx_freelist_4yoda_4core___pyx_scope_struct_1_genexpr[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct_1_genexpr = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct_1_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct_1_genexpr[--__pyx_freecount_4yoda_4core___pyx_scope_struct_1_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_1_genexpr(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_x);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct_1_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct_1_genexpr[__pyx_freecount_4yoda_4core___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_1_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_x) {
    e = (*v)(p->__pyx_v_x, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct_1_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct____init3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_x);
  p->__pyx_v_x = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct_1_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_1_genexpr, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct_1_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *__pyx_freelist_4yoda_4core___pyx_scope_struct_2___init3[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct_2___init3 = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_2___init3(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct_2___init3 > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct_2___init3[--__pyx_freecount_4yoda_4core___pyx_scope_struct_2___init3];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_2___init3(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_bins_or_edges);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct_2___init3 < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct_2___init3[__pyx_freecount_4yoda_4core___pyx_scope_struct_2___init3++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_2___init3(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *)o;
  if (p->__pyx_v_bins_or_edges) {
    e = (*v)(p->__pyx_v_bins_or_edges, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct_2___init3(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *)o;
  tmp = ((PyObject*)p->__pyx_v_bins_or_edges);
  p->__pyx_v_bins_or_edges = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct_2___init3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct_2___init3", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_2___init3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_2___init3, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct_2___init3, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct_2___init3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *__pyx_freelist_4yoda_4core___pyx_scope_struct_3_genexpr[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct_3_genexpr = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_3_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct_3_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct_3_genexpr[--__pyx_freecount_4yoda_4core___pyx_scope_struct_3_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_3_genexpr(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_x);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct_3_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct_3_genexpr[__pyx_freecount_4yoda_4core___pyx_scope_struct_3_genexpr++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_3_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_x) {
    e = (*v)(p->__pyx_v_x, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct_3_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_2___init3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_x);
  p->__pyx_v_x = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct_3_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct_3_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_3_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_3_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_3_genexpr, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct_3_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct_3_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *__pyx_freelist_4yoda_4core___pyx_scope_struct_4__pattern_check[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct_4__pattern_check = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_4__pattern_check(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct_4__pattern_check > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct_4__pattern_check[--__pyx_freecount_4yoda_4core___pyx_scope_struct_4__pattern_check];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_4__pattern_check(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_name);
  Py_CLEAR(p->__pyx_v_patterns);
  Py_CLEAR(p->__pyx_v_re);
  Py_CLEAR(p->__pyx_v_unpatterns);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct_4__pattern_check < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct_4__pattern_check[__pyx_freecount_4yoda_4core___pyx_scope_struct_4__pattern_check++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_4__pattern_check(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)o;
  if (p->__pyx_v_name) {
    e = (*v)(p->__pyx_v_name, a); if (e) return e;
  }
  if (p->__pyx_v_patterns) {
    e = (*v)(p->__pyx_v_patterns, a); if (e) return e;
  }
  if (p->__pyx_v_re) {
    e = (*v)(p->__pyx_v_re, a); if (e) return e;
  }
  if (p->__pyx_v_unpatterns) {
    e = (*v)(p->__pyx_v_unpatterns, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct_4__pattern_check(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)o;
  tmp = ((PyObject*)p->__pyx_v_name);
  p->__pyx_v_name = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_patterns);
  p->__pyx_v_patterns = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_re);
  p->__pyx_v_re = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_unpatterns);
  p->__pyx_v_unpatterns = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct_4__pattern_check = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct_4__pattern_check", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_4__pattern_check, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_4__pattern_check, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct_4__pattern_check, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct_4__pattern_check, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *__pyx_freelist_4yoda_4core___pyx_scope_struct_5_genexpr[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct_5_genexpr = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_5_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct_5_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct_5_genexpr[--__pyx_freecount_4yoda_4core___pyx_scope_struct_5_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_5_genexpr(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_patt);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct_5_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct_5_genexpr[__pyx_freecount_4yoda_4core___pyx_scope_struct_5_genexpr++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_5_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_patt) {
    e = (*v)(p->__pyx_v_patt, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct_5_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_patt);
  p->__pyx_v_patt = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct_5_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct_5_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_5_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_5_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_5_genexpr, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct_5_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct_5_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *__pyx_freelist_4yoda_4core___pyx_scope_struct_6_genexpr[8];
static int __pyx_freecount_4yoda_4core___pyx_scope_struct_6_genexpr = 0;

static PyObject *__pyx_tp_new_4yoda_4core___pyx_scope_struct_6_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4yoda_4core___pyx_scope_struct_6_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr)))) {
    o = (PyObject*)__pyx_freelist_4yoda_4core___pyx_scope_struct_6_genexpr[--__pyx_freecount_4yoda_4core___pyx_scope_struct_6_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_6_genexpr(PyObject *o) {
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_patt);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4yoda_4core___pyx_scope_struct_6_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr)))) {
    __pyx_freelist_4yoda_4core___pyx_scope_struct_6_genexpr[__pyx_freecount_4yoda_4core___pyx_scope_struct_6_genexpr++] = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_6_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject*)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_patt) {
    e = (*v)(p->__pyx_v_patt, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yoda_4core___pyx_scope_struct_6_genexpr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *p = (struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_4yoda_4core___pyx_scope_struct_4__pattern_check *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_patt);
  p->__pyx_v_patt = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4yoda_4core___pyx_scope_struct_6_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "yoda.core.__pyx_scope_struct_6_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_4yoda_4core___pyx_scope_struct_6_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yoda_4core___pyx_scope_struct_6_genexpr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yoda_4core___pyx_scope_struct_6_genexpr, /*tp_traverse*/
  __pyx_tp_clear_4yoda_4core___pyx_scope_struct_6_genexpr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yoda_4core___pyx_scope_struct_6_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "core",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_0_2e, __pyx_k_0_2e, sizeof(__pyx_k_0_2e), 0, 0, 1, 0},
  {&__pyx_n_s_CFUNCTYPE, __pyx_k_CFUNCTYPE, sizeof(__pyx_k_CFUNCTYPE), 0, 0, 1, 1},
  {&__pyx_kp_s_Callback_is_not_of_type_double_d, __pyx_k_Callback_is_not_of_type_double_d, sizeof(__pyx_k_Callback_is_not_of_type_double_d), 0, 0, 1, 0},
  {&__pyx_kp_s_Dbn0D_val_g_err_g, __pyx_k_Dbn0D_val_g_err_g, sizeof(__pyx_k_Dbn0D_val_g_err_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Dbn1D_mean_s_stddev_s, __pyx_k_Dbn1D_mean_s_stddev_s, sizeof(__pyx_k_Dbn1D_mean_s_stddev_s), 0, 0, 1, 0},
  {&__pyx_kp_s_Dbn2D_mean_s_stdDev_s, __pyx_k_Dbn2D_mean_s_stdDev_s, sizeof(__pyx_k_Dbn2D_mean_s_stdDev_s), 0, 0, 1, 0},
  {&__pyx_kp_s_Dbn3D_mean_s_stddev_s, __pyx_k_Dbn3D_mean_s_stddev_s, sizeof(__pyx_k_Dbn3D_mean_s_stddev_s), 0, 0, 1, 0},
  {&__pyx_kp_s_HistoBin2D_g_g_g_g, __pyx_k_HistoBin2D_g_g_g_g, sizeof(__pyx_k_HistoBin2D_g_g_g_g), 0, 0, 1, 0},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
  {&__pyx_kp_s_Null_pointer_referenced_perhaps, __pyx_k_Null_pointer_referenced_perhaps, sizeof(__pyx_k_Null_pointer_referenced_perhaps), 0, 0, 1, 0},
  {&__pyx_kp_s_Point1D_x_g, __pyx_k_Point1D_x_g, sizeof(__pyx_k_Point1D_x_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Point2D_x_g_y_g, __pyx_k_Point2D_x_g_y_g, sizeof(__pyx_k_Point2D_x_g_y_g), 0, 0, 1, 0},
  {&__pyx_kp_s_Point3D_x_g_y_g_z_g, __pyx_k_Point3D_x_g_y_g_z_g, sizeof(__pyx_k_Point3D_x_g_y_g_z_g), 0, 0, 1, 0},
  {&__pyx_kp_s_ProfileBin2D_g_g_g_g, __pyx_k_ProfileBin2D_g_g_g_g, sizeof(__pyx_k_ProfileBin2D_g_g_g_g), 0, 0, 1, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_StringIO, __pyx_k_StringIO, sizeof(__pyx_k_StringIO), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_XY, __pyx_k_XY, sizeof(__pyx_k_XY), 0, 0, 1, 1},
  {&__pyx_n_s_XYZ, __pyx_k_XYZ, sizeof(__pyx_k_XYZ), 0, 0, 1, 1},
  {&__pyx_kp_s__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 0, 1, 0},
  {&__pyx_n_s__12, __pyx_k__12, sizeof(__pyx_k__12), 0, 0, 1, 1},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_addBins, __pyx_k_addBins, sizeof(__pyx_k_addBins), 0, 0, 1, 1},
  {&__pyx_n_s_addBins_bins, __pyx_k_addBins_bins, sizeof(__pyx_k_addBins_bins), 0, 0, 1, 1},
  {&__pyx_n_s_addBins_edges, __pyx_k_addBins_edges, sizeof(__pyx_k_addBins_edges), 0, 0, 1, 1},
  {&__pyx_n_s_addBins_points, __pyx_k_addBins_points, sizeof(__pyx_k_addBins_points), 0, 0, 1, 1},
  {&__pyx_n_s_addBins_tuples, __pyx_k_addBins_tuples, sizeof(__pyx_k_addBins_tuples), 0, 0, 1, 1},
  {&__pyx_n_s_addPoint, __pyx_k_addPoint, sizeof(__pyx_k_addPoint), 0, 0, 1, 1},
  {&__pyx_n_s_addPoint_explicit, __pyx_k_addPoint_explicit, sizeof(__pyx_k_addPoint_explicit), 0, 0, 1, 1},
  {&__pyx_n_s_addPoint_point, __pyx_k_addPoint_point, sizeof(__pyx_k_addPoint_point), 0, 0, 1, 1},
  {&__pyx_n_s_addPoints, __pyx_k_addPoints, sizeof(__pyx_k_addPoints), 0, 0, 1, 1},
  {&__pyx_n_s_addressof, __pyx_k_addressof, sizeof(__pyx_k_addressof), 0, 0, 1, 1},
  {&__pyx_n_s_ana_objs, __pyx_k_ana_objs, sizeof(__pyx_k_ana_objs), 0, 0, 1, 1},
  {&__pyx_n_s_ao, __pyx_k_ao, sizeof(__pyx_k_ao), 0, 0, 1, 1},
  {&__pyx_n_s_ao1, __pyx_k_ao1, sizeof(__pyx_k_ao1), 0, 0, 1, 1},
  {&__pyx_n_s_ao2, __pyx_k_ao2, sizeof(__pyx_k_ao2), 0, 0, 1, 1},
  {&__pyx_n_s_aobjects, __pyx_k_aobjects, sizeof(__pyx_k_aobjects), 0, 0, 1, 1},
  {&__pyx_n_s_aolist, __pyx_k_aolist, sizeof(__pyx_k_aolist), 0, 0, 1, 1},
  {&__pyx_n_s_arg, __pyx_k_arg, sizeof(__pyx_k_arg), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_asdict, __pyx_k_asdict, sizeof(__pyx_k_asdict), 0, 0, 1, 1},
  {&__pyx_n_s_attrgetter, __pyx_k_attrgetter, sizeof(__pyx_k_attrgetter), 0, 0, 1, 1},
  {&__pyx_n_s_autostr, __pyx_k_autostr, sizeof(__pyx_k_autostr), 0, 0, 1, 1},
  {&__pyx_n_s_autotype, __pyx_k_autotype, sizeof(__pyx_k_autotype), 0, 0, 1, 1},
  {&__pyx_n_s_ax, __pyx_k_ax, sizeof(__pyx_k_ax), 0, 0, 1, 1},
  {&__pyx_n_s_ay, __pyx_k_ay, sizeof(__pyx_k_ay), 0, 0, 1, 1},
  {&__pyx_n_s_az, __pyx_k_az, sizeof(__pyx_k_az), 0, 0, 1, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_n_s_begin, __pyx_k_begin, sizeof(__pyx_k_begin), 0, 0, 1, 1},
  {&__pyx_n_s_bin, __pyx_k_bin, sizeof(__pyx_k_bin), 0, 0, 1, 1},
  {&__pyx_n_s_binIndexAt, __pyx_k_binIndexAt, sizeof(__pyx_k_binIndexAt), 0, 0, 1, 1},
  {&__pyx_n_s_binedges, __pyx_k_binedges, sizeof(__pyx_k_binedges), 0, 0, 1, 1},
  {&__pyx_n_s_bins, __pyx_k_bins, sizeof(__pyx_k_bins), 0, 0, 1, 1},
  {&__pyx_n_s_bins_or_edges, __pyx_k_bins_or_edges, sizeof(__pyx_k_bins_or_edges), 0, 0, 1, 1},
  {&__pyx_n_s_cStringIO, __pyx_k_cStringIO, sizeof(__pyx_k_cStringIO), 0, 0, 1, 1},
  {&__pyx_n_s_c_double, __pyx_k_c_double, sizeof(__pyx_k_c_double), 0, 0, 1, 1},
  {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_compile, __pyx_k_compile, sizeof(__pyx_k_compile), 0, 0, 1, 1},
  {&__pyx_n_s_correlation, __pyx_k_correlation, sizeof(__pyx_k_correlation), 0, 0, 1, 1},
  {&__pyx_n_s_covariance, __pyx_k_covariance, sizeof(__pyx_k_covariance), 0, 0, 1, 1},
  {&__pyx_n_s_ctypes, __pyx_k_ctypes, sizeof(__pyx_k_ctypes), 0, 0, 1, 1},
  {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
  {&__pyx_n_s_divide, __pyx_k_divide, sizeof(__pyx_k_divide), 0, 0, 1, 1},
  {&__pyx_n_s_divideBy, __pyx_k_divideBy, sizeof(__pyx_k_divideBy), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_edges, __pyx_k_edges, sizeof(__pyx_k_edges), 0, 0, 1, 1},
  {&__pyx_n_s_efficiency, __pyx_k_efficiency, sizeof(__pyx_k_efficiency), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_err, __pyx_k_err, sizeof(__pyx_k_err), 0, 0, 1, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_n_s_file_or_filename, __pyx_k_file_or_filename, sizeof(__pyx_k_file_or_filename), 0, 0, 1, 1},
  {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_high, __pyx_k_high, sizeof(__pyx_k_high), 0, 0, 1, 1},
  {&__pyx_kp_s_home_andy_proj_hep_yoda_16_pyex, __pyx_k_home_andy_proj_hep_yoda_16_pyex, sizeof(__pyx_k_home_andy_proj_hep_yoda_16_pyex), 0, 0, 1, 0},
  {&__pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_k_home_andy_proj_hep_yoda_16_pyex_2, sizeof(__pyx_k_home_andy_proj_hep_yoda_16_pyex_2), 0, 0, 1, 0},
  {&__pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_k_home_andy_proj_hep_yoda_16_pyex_3, sizeof(__pyx_k_home_andy_proj_hep_yoda_16_pyex_3), 0, 0, 1, 0},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_ia, __pyx_k_ia, sizeof(__pyx_k_ia), 0, 0, 1, 1},
  {&__pyx_n_s_ib, __pyx_k_ib, sizeof(__pyx_k_ib), 0, 0, 1, 1},
  {&__pyx_n_s_imap, __pyx_k_imap, sizeof(__pyx_k_imap), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_includeoverflow, __pyx_k_includeoverflow, sizeof(__pyx_k_includeoverflow), 0, 0, 1, 1},
  {&__pyx_n_s_includeoverflows, __pyx_k_includeoverflows, sizeof(__pyx_k_includeoverflows), 0, 0, 1, 1},
  {&__pyx_n_s_includeunderflow, __pyx_k_includeunderflow, sizeof(__pyx_k_includeunderflow), 0, 0, 1, 1},
  {&__pyx_n_s_index_between, __pyx_k_index_between, sizeof(__pyx_k_index_between), 0, 0, 1, 1},
  {&__pyx_n_s_init2, __pyx_k_init2, sizeof(__pyx_k_init2), 0, 0, 1, 1},
  {&__pyx_n_s_init3, __pyx_k_init3, sizeof(__pyx_k_init3), 0, 0, 1, 1},
  {&__pyx_n_s_init3_locals_genexpr, __pyx_k_init3_locals_genexpr, sizeof(__pyx_k_init3_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_init4, __pyx_k_init4, sizeof(__pyx_k_init4), 0, 0, 1, 1},
  {&__pyx_n_s_init5, __pyx_k_init5, sizeof(__pyx_k_init5), 0, 0, 1, 1},
  {&__pyx_n_s_init8, __pyx_k_init8, sizeof(__pyx_k_init8), 0, 0, 1, 1},
  {&__pyx_n_s_init_2, __pyx_k_init_2, sizeof(__pyx_k_init_2), 0, 0, 1, 1},
  {&__pyx_n_s_init_3, __pyx_k_init_3, sizeof(__pyx_k_init_3), 0, 0, 1, 1},
  {&__pyx_n_s_iss, __pyx_k_iss, sizeof(__pyx_k_iss), 0, 0, 1, 1},
  {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
  {&__pyx_n_s_itertools, __pyx_k_itertools, sizeof(__pyx_k_itertools), 0, 0, 1, 1},
  {&__pyx_n_s_ix, __pyx_k_ix, sizeof(__pyx_k_ix), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_linspace, __pyx_k_linspace, sizeof(__pyx_k_linspace), 0, 0, 1, 1},
  {&__pyx_n_s_logspace, __pyx_k_logspace, sizeof(__pyx_k_logspace), 0, 0, 1, 1},
  {&__pyx_n_s_low, __pyx_k_low, sizeof(__pyx_k_low), 0, 0, 1, 1},
  {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_match, __pyx_k_match, sizeof(__pyx_k_match), 0, 0, 1, 1},
  {&__pyx_n_s_mean, __pyx_k_mean, sizeof(__pyx_k_mean), 0, 0, 1, 1},
  {&__pyx_n_s_mkScatter, __pyx_k_mkScatter, sizeof(__pyx_k_mkScatter), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_nbins, __pyx_k_nbins, sizeof(__pyx_k_nbins), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_normto, __pyx_k_normto, sizeof(__pyx_k_normto), 0, 0, 1, 1},
  {&__pyx_n_s_numBins, __pyx_k_numBins, sizeof(__pyx_k_numBins), 0, 0, 1, 1},
  {&__pyx_n_s_numPoints, __pyx_k_numPoints, sizeof(__pyx_k_numPoints), 0, 0, 1, 1},
  {&__pyx_n_s_nxbins, __pyx_k_nxbins, sizeof(__pyx_k_nxbins), 0, 0, 1, 1},
  {&__pyx_n_s_nybins, __pyx_k_nybins, sizeof(__pyx_k_nybins), 0, 0, 1, 1},
  {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {&__pyx_n_s_operator, __pyx_k_operator, sizeof(__pyx_k_operator), 0, 0, 1, 1},
  {&__pyx_n_s_oss, __pyx_k_oss, sizeof(__pyx_k_oss), 0, 0, 1, 1},
  {&__pyx_n_s_other, __pyx_k_other, sizeof(__pyx_k_other), 0, 0, 1, 1},
  {&__pyx_n_s_p1ptr, __pyx_k_p1ptr, sizeof(__pyx_k_p1ptr), 0, 0, 1, 1},
  {&__pyx_n_s_path, __pyx_k_path, sizeof(__pyx_k_path), 0, 0, 1, 1},
  {&__pyx_n_s_pattern_check, __pyx_k_pattern_check, sizeof(__pyx_k_pattern_check), 0, 0, 1, 1},
  {&__pyx_n_s_pattern_check_locals_genexpr, __pyx_k_pattern_check_locals_genexpr, sizeof(__pyx_k_pattern_check_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_patterns, __pyx_k_patterns, sizeof(__pyx_k_patterns), 0, 0, 1, 1},
  {&__pyx_n_s_point, __pyx_k_point, sizeof(__pyx_k_point), 0, 0, 1, 1},
  {&__pyx_n_s_points, __pyx_k_points, sizeof(__pyx_k_points), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_re, __pyx_k_re, sizeof(__pyx_k_re), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_readAIDA, __pyx_k_readAIDA, sizeof(__pyx_k_readAIDA), 0, 0, 1, 1},
  {&__pyx_n_s_readFLAT, __pyx_k_readFLAT, sizeof(__pyx_k_readFLAT), 0, 0, 1, 1},
  {&__pyx_n_s_readYODA, __pyx_k_readYODA, sizeof(__pyx_k_readYODA), 0, 0, 1, 1},
  {&__pyx_n_s_read_error_pair, __pyx_k_read_error_pair, sizeof(__pyx_k_read_error_pair), 0, 0, 1, 1},
  {&__pyx_n_s_read_symmetric, __pyx_k_read_symmetric, sizeof(__pyx_k_read_symmetric), 0, 0, 1, 1},
  {&__pyx_n_s_rebinBy, __pyx_k_rebinBy, sizeof(__pyx_k_rebinBy), 0, 0, 1, 1},
  {&__pyx_n_s_rebinTo, __pyx_k_rebinTo, sizeof(__pyx_k_rebinTo), 0, 0, 1, 1},
  {&__pyx_n_s_repeat, __pyx_k_repeat, sizeof(__pyx_k_repeat), 0, 0, 1, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_kp_s_s_s, __pyx_k_s_s, sizeof(__pyx_k_s_s), 0, 0, 1, 0},
  {&__pyx_kp_s_s_s_d_bins_sumw_0_2g, __pyx_k_s_s_d_bins_sumw_0_2g, sizeof(__pyx_k_s_s_d_bins_sumw_0_2g), 0, 0, 1, 0},
  {&__pyx_kp_s_s_s_d_bins_sumw_0_2g_xmean_s, __pyx_k_s_s_d_bins_sumw_0_2g_xmean_s, sizeof(__pyx_k_s_s_d_bins_sumw_0_2g_xmean_s), 0, 0, 1, 0},
  {&__pyx_kp_s_s_s_d_bins_sumw_2g, __pyx_k_s_s_d_bins_sumw_2g, sizeof(__pyx_k_s_s_d_bins_sumw_2g), 0, 0, 1, 0},
  {&__pyx_kp_s_s_s_d_points, __pyx_k_s_s_d_points, sizeof(__pyx_k_s_s_d_points), 0, 0, 1, 0},
  {&__pyx_kp_s_s_s_sumw_0_2g_err_s, __pyx_k_s_s_sumw_0_2g_err_s, sizeof(__pyx_k_s_s_sumw_0_2g_err_s), 0, 0, 1, 0},
  {&__pyx_kp_s_s_x_g_g, __pyx_k_s_x_g_g, sizeof(__pyx_k_s_x_g_g), 0, 0, 1, 0},
  {&__pyx_kp_s_s_x_g_g_y_g_g, __pyx_k_s_x_g_g_y_g_g, sizeof(__pyx_k_s_x_g_g_y_g_g), 0, 0, 1, 0},
  {&__pyx_n_s_sample, __pyx_k_sample, sizeof(__pyx_k_sample), 0, 0, 1, 1},
  {&__pyx_n_s_sample1, __pyx_k_sample1, sizeof(__pyx_k_sample1), 0, 0, 1, 1},
  {&__pyx_n_s_sample2, __pyx_k_sample2, sizeof(__pyx_k_sample2), 0, 0, 1, 1},
  {&__pyx_n_s_scaleXY, __pyx_k_scaleXY, sizeof(__pyx_k_scaleXY), 0, 0, 1, 1},
  {&__pyx_n_s_scaleXYZ, __pyx_k_scaleXYZ, sizeof(__pyx_k_scaleXYZ), 0, 0, 1, 1},
  {&__pyx_n_s_scaleZ, __pyx_k_scaleZ, sizeof(__pyx_k_scaleZ), 0, 0, 1, 1},
  {&__pyx_n_s_seek, __pyx_k_seek, sizeof(__pyx_k_seek), 0, 0, 1, 1},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_setErr, __pyx_k_setErr, sizeof(__pyx_k_setErr), 0, 0, 1, 1},
  {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
  {&__pyx_n_s_stdDev, __pyx_k_stdDev, sizeof(__pyx_k_stdDev), 0, 0, 1, 1},
  {&__pyx_n_s_stdin, __pyx_k_stdin, sizeof(__pyx_k_stdin), 0, 0, 1, 1},
  {&__pyx_n_s_stdout, __pyx_k_stdout, sizeof(__pyx_k_stdout), 0, 0, 1, 1},
  {&__pyx_n_s_str_from_file, __pyx_k_str_from_file, sizeof(__pyx_k_str_from_file), 0, 0, 1, 1},
  {&__pyx_n_s_str_to_file, __pyx_k_str_to_file, sizeof(__pyx_k_str_to_file), 0, 0, 1, 1},
  {&__pyx_n_s_strip, __pyx_k_strip, sizeof(__pyx_k_strip), 0, 0, 1, 1},
  {&__pyx_n_s_sumW, __pyx_k_sumW, sizeof(__pyx_k_sumW), 0, 0, 1, 1},
  {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_title, __pyx_k_title, sizeof(__pyx_k_title), 0, 0, 1, 1},
  {&__pyx_n_s_try_loop, __pyx_k_try_loop, sizeof(__pyx_k_try_loop), 0, 0, 1, 1},
  {&__pyx_n_s_unpatterns, __pyx_k_unpatterns, sizeof(__pyx_k_unpatterns), 0, 0, 1, 1},
  {&__pyx_n_s_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 0, 1, 1},
  {&__pyx_n_s_usefocus, __pyx_k_usefocus, sizeof(__pyx_k_usefocus), 0, 0, 1, 1},
  {&__pyx_n_s_usestddev, __pyx_k_usestddev, sizeof(__pyx_k_usestddev), 0, 0, 1, 1},
  {&__pyx_n_s_util, __pyx_k_util, sizeof(__pyx_k_util), 0, 0, 1, 1},
  {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
  {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_vec, __pyx_k_vec, sizeof(__pyx_k_vec), 0, 0, 1, 1},
  {&__pyx_n_s_version, __pyx_k_version, sizeof(__pyx_k_version), 0, 0, 1, 1},
  {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {&__pyx_n_s_weight, __pyx_k_weight, sizeof(__pyx_k_weight), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_writeAIDA, __pyx_k_writeAIDA, sizeof(__pyx_k_writeAIDA), 0, 0, 1, 1},
  {&__pyx_n_s_writeFLAT, __pyx_k_writeFLAT, sizeof(__pyx_k_writeFLAT), 0, 0, 1, 1},
  {&__pyx_n_s_writeYODA, __pyx_k_writeYODA, sizeof(__pyx_k_writeYODA), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_xEdges, __pyx_k_xEdges, sizeof(__pyx_k_xEdges), 0, 0, 1, 1},
  {&__pyx_n_s_xErrs, __pyx_k_xErrs, sizeof(__pyx_k_xErrs), 0, 0, 1, 1},
  {&__pyx_n_s_xFocus, __pyx_k_xFocus, sizeof(__pyx_k_xFocus), 0, 0, 1, 1},
  {&__pyx_n_s_xMax, __pyx_k_xMax, sizeof(__pyx_k_xMax), 0, 0, 1, 1},
  {&__pyx_n_s_xMean, __pyx_k_xMean, sizeof(__pyx_k_xMean), 0, 0, 1, 1},
  {&__pyx_n_s_xMid, __pyx_k_xMid, sizeof(__pyx_k_xMid), 0, 0, 1, 1},
  {&__pyx_n_s_xMin, __pyx_k_xMin, sizeof(__pyx_k_xMin), 0, 0, 1, 1},
  {&__pyx_n_s_xRMS, __pyx_k_xRMS, sizeof(__pyx_k_xRMS), 0, 0, 1, 1},
  {&__pyx_n_s_xStdDev, __pyx_k_xStdDev, sizeof(__pyx_k_xStdDev), 0, 0, 1, 1},
  {&__pyx_n_s_xStdErr, __pyx_k_xStdErr, sizeof(__pyx_k_xStdErr), 0, 0, 1, 1},
  {&__pyx_n_s_xVariance, __pyx_k_xVariance, sizeof(__pyx_k_xVariance), 0, 0, 1, 1},
  {&__pyx_n_s_xWidth, __pyx_k_xWidth, sizeof(__pyx_k_xWidth), 0, 0, 1, 1},
  {&__pyx_n_s_xcuts, __pyx_k_xcuts, sizeof(__pyx_k_xcuts), 0, 0, 1, 1},
  {&__pyx_n_s_xedges, __pyx_k_xedges, sizeof(__pyx_k_xedges), 0, 0, 1, 1},
  {&__pyx_n_s_xerrs, __pyx_k_xerrs, sizeof(__pyx_k_xerrs), 0, 0, 1, 1},
  {&__pyx_n_s_xhigh, __pyx_k_xhigh, sizeof(__pyx_k_xhigh), 0, 0, 1, 1},
  {&__pyx_n_s_xlow, __pyx_k_xlow, sizeof(__pyx_k_xlow), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {&__pyx_n_s_xyz, __pyx_k_xyz, sizeof(__pyx_k_xyz), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_yEdges, __pyx_k_yEdges, sizeof(__pyx_k_yEdges), 0, 0, 1, 1},
  {&__pyx_n_s_yErrs, __pyx_k_yErrs, sizeof(__pyx_k_yErrs), 0, 0, 1, 1},
  {&__pyx_n_s_yFocus, __pyx_k_yFocus, sizeof(__pyx_k_yFocus), 0, 0, 1, 1},
  {&__pyx_n_s_yMax, __pyx_k_yMax, sizeof(__pyx_k_yMax), 0, 0, 1, 1},
  {&__pyx_n_s_yMean, __pyx_k_yMean, sizeof(__pyx_k_yMean), 0, 0, 1, 1},
  {&__pyx_n_s_yMid, __pyx_k_yMid, sizeof(__pyx_k_yMid), 0, 0, 1, 1},
  {&__pyx_n_s_yMin, __pyx_k_yMin, sizeof(__pyx_k_yMin), 0, 0, 1, 1},
  {&__pyx_n_s_yRMS, __pyx_k_yRMS, sizeof(__pyx_k_yRMS), 0, 0, 1, 1},
  {&__pyx_n_s_yStdDev, __pyx_k_yStdDev, sizeof(__pyx_k_yStdDev), 0, 0, 1, 1},
  {&__pyx_n_s_yStdErr, __pyx_k_yStdErr, sizeof(__pyx_k_yStdErr), 0, 0, 1, 1},
  {&__pyx_n_s_yVariance, __pyx_k_yVariance, sizeof(__pyx_k_yVariance), 0, 0, 1, 1},
  {&__pyx_n_s_yWidth, __pyx_k_yWidth, sizeof(__pyx_k_yWidth), 0, 0, 1, 1},
  {&__pyx_n_s_ycuts, __pyx_k_ycuts, sizeof(__pyx_k_ycuts), 0, 0, 1, 1},
  {&__pyx_n_s_yedges, __pyx_k_yedges, sizeof(__pyx_k_yedges), 0, 0, 1, 1},
  {&__pyx_n_s_yerrs, __pyx_k_yerrs, sizeof(__pyx_k_yerrs), 0, 0, 1, 1},
  {&__pyx_n_s_yhigh, __pyx_k_yhigh, sizeof(__pyx_k_yhigh), 0, 0, 1, 1},
  {&__pyx_n_s_ylow, __pyx_k_ylow, sizeof(__pyx_k_ylow), 0, 0, 1, 1},
  {&__pyx_n_s_yoda_core, __pyx_k_yoda_core, sizeof(__pyx_k_yoda_core), 0, 0, 1, 1},
  {&__pyx_n_s_yoda_util, __pyx_k_yoda_util, sizeof(__pyx_k_yoda_util), 0, 0, 1, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {&__pyx_n_s_zErrs, __pyx_k_zErrs, sizeof(__pyx_k_zErrs), 0, 0, 1, 1},
  {&__pyx_n_s_zerrs, __pyx_k_zerrs, sizeof(__pyx_k_zerrs), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) __PYX_ERR(0, 256, __pyx_L1_error)
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) __PYX_ERR(0, 256, __pyx_L1_error)
  #endif
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 72, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(1, 121, __pyx_L1_error)
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) __PYX_ERR(2, 67, __pyx_L1_error)
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) __PYX_ERR(29, 9, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(29, 55, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(30, 68, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "include/AnalysisObject.pyx":69
 *         f = StringIO()
 *         writeFLAT([self], f)
 *         f.seek(0)             # <<<<<<<<<<<<<<
 *         return f.read().strip()
 * 
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple_)) __PYX_ERR(14, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "include/Histo1D.pyx":258
 * 
 *     def __addBins_bins(self, bins):
 *         self.__addBins_tuples(imap(attrgetter('xEdges'), bins))             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_points(self, points):
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_n_s_xEdges); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(15, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "include/Histo1D.pyx":261
 * 
 *     def __addBins_points(self, points):
 *         self.__addBins_tuples(imap(attrgetter('xWidth'), points))             # <<<<<<<<<<<<<<
 * 
 *     def __addBins_tuples(self, tuples):
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_n_s_xWidth); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(15, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "include/Scatter1D.pyx":121
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter1D_transformX(deref(self.s1ptr()), fptr)
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_Callback_is_not_of_type_double_d); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "include/Scatter2D.pyx":137
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter2D_transformX(deref(self.s2ptr()), fptr)
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_Callback_is_not_of_type_double_d); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(26, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "include/Scatter2D.pyx":148
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter2D_transformY(deref(self.s2ptr()), fptr)
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_Callback_is_not_of_type_double_d); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(26, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "include/Scatter3D.pyx":142
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformX(deref(self.s3ptr()), fptr)
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_Callback_is_not_of_type_double_d); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(27, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "include/Scatter3D.pyx":153
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformY(deref(self.s3ptr()), fptr)
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_Callback_is_not_of_type_double_d); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(27, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "include/Scatter3D.pyx":164
 *             callback = ctypes.CFUNCTYPE(ctypes.c_double, ctypes.c_double)(f)
 *         except:
 *             raise RuntimeError("Callback is not of type (double) -> double")             # <<<<<<<<<<<<<<
 *         fptr = (<c.dbl_dbl_fptr*><size_t>ctypes.addressof(callback))[0]
 *         c.Scatter3D_transformZ(deref(self.s3ptr()), fptr)
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_Callback_is_not_of_type_double_d); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(27, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "yoda/util.pxd":9
 *     cdef inline void* ptr(self) except NULL:
 *         if self._ptr == NULL:
 *             raise MemoryError('Null pointer referenced: perhaps the class is uninitialised.')             # <<<<<<<<<<<<<<
 *         return self._ptr
 * 
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_Null_pointer_referenced_perhaps); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(29, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "yoda/core.pyx":19
 * from operator import attrgetter
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     "Return YODA library version as a string"
 *     return c.version()
 */
  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex, __pyx_n_s_version, 19, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) __PYX_ERR(3, 19, __pyx_L1_error)

  /* "include/Functions.pyx":1
 * def mkScatter(ao, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *     """AnalysisObject -> Scatter{1,2,3}D
 *     Convert an AnalysisObject to a Scatter, using the logic of the bound mkScatter methods.
 */
  __pyx_tuple__14 = PyTuple_Pack(3, __pyx_n_s_ao, __pyx_n_s_usefocus, __pyx_n_s_usestddev); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(28, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_mkScatter, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) __PYX_ERR(28, 1, __pyx_L1_error)

  /* "include/Functions.pyx":16
 * 
 * 
 * def divide(ao1, ao2):             # <<<<<<<<<<<<<<
 *     """(AnalysisObject, AnalysisObject) -> Scatter{1,2,3}D
 *     Divide one AnalysisObject by another, producing a Scatter of appropriate dimension by using the logic of the bound divideBy methods."""
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_n_s_ao1, __pyx_n_s_ao2); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(28, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);
  __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__16, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_divide, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) __PYX_ERR(28, 16, __pyx_L1_error)

  /* "include/Functions.pyx":45
 * 
 * 
 * def linspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced between start and end, with the first and
 */
  __pyx_tuple__18 = PyTuple_Pack(3, __pyx_n_s_nbins, __pyx_n_s_start, __pyx_n_s_end); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(28, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_linspace, 45, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(28, 45, __pyx_L1_error)

  /* "include/Functions.pyx":52
 * 
 * 
 * def logspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced on the interval log(start..end), with
 */
  __pyx_tuple__20 = PyTuple_Pack(3, __pyx_n_s_nbins, __pyx_n_s_start, __pyx_n_s_end); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(28, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_logspace, 52, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(28, 52, __pyx_L1_error)

  /* "include/Functions.pyx":59
 * 
 * 
 * def index_between(x, binedges):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the index of the bin which would contain x, or -1 if there is no enclosing
 */
  __pyx_tuple__22 = PyTuple_Pack(2, __pyx_n_s_x, __pyx_n_s_binedges); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(28, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_index_between, 59, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(28, 59, __pyx_L1_error)

  /* "include/Functions.pyx":66
 * 
 * 
 * def mean(sample):             # <<<<<<<<<<<<<<
 *     """(list[float]) -> float
 *     Return the unweighted mean of the entries in the provided sample list."""
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_n_s_sample); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(28, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__24, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_mean, 66, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(28, 66, __pyx_L1_error)

  /* "include/Functions.pyx":72
 * 
 * 
 * def covariance(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(list[float], list[float]) -> float
 *     Return the unweighted covariance of the two provided sample lists."""
 */
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_n_s_sample1, __pyx_n_s_sample2); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(28, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);
  __pyx_codeobj__27 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__26, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_covariance, 72, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__27)) __PYX_ERR(28, 72, __pyx_L1_error)

  /* "include/Functions.pyx":78
 * 
 * 
 * def correlation(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the unweighted correlation of the two provided sample lists."""
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_n_s_sample1, __pyx_n_s_sample2); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(28, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__28, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_2, __pyx_n_s_correlation, 78, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(28, 78, __pyx_L1_error)

  /* "include/IO.pyx":13
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     import re
 *     if patterns:
 */
  __pyx_tuple__30 = PyTuple_Pack(7, __pyx_n_s_name_2, __pyx_n_s_patterns, __pyx_n_s_unpatterns, __pyx_n_s_re, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(2, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(3, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_pattern_check, 13, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(2, 13, __pyx_L1_error)

  /* "include/IO.pyx":61
 * ## Read a file's contents as a returned string
 * ## The file argument can either be a file object, filename, or special "-" reference to stdin
 * def _str_from_file(file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()
 */
  __pyx_tuple__32 = PyTuple_Pack(3, __pyx_n_s_file_or_filename, __pyx_n_s_s, __pyx_n_s_f); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(2, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_str_from_file, 61, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(2, 61, __pyx_L1_error)

  /* "include/IO.pyx":74
 * ## Write a string to a file
 * ## The file argument can either be a file object, filename, or special "-" reference to stdout
 * def _str_to_file(s, file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)
 */
  __pyx_tuple__34 = PyTuple_Pack(3, __pyx_n_s_s, __pyx_n_s_file_or_filename, __pyx_n_s_f); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(2, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_str_to_file, 74, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(2, 74, __pyx_L1_error)

  /* "include/IO.pyx":90
 * ##
 * 
 * def read(filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided filename, auto-determining the format
 */
  __pyx_tuple__36 = PyTuple_Pack(8, __pyx_n_s_filename, __pyx_n_s_asdict, __pyx_n_s_patterns, __pyx_n_s_unpatterns, __pyx_n_s_iss, __pyx_n_s_aobjects, __pyx_n_s_f, __pyx_n_s_s); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(2, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(4, 0, 8, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_read, 90, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(2, 90, __pyx_L1_error)

  /* "include/IO.pyx":113
 * 
 * 
 * def readYODA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided YODA-format file.
 */
  __pyx_tuple__38 = PyTuple_Pack(7, __pyx_n_s_file_or_filename, __pyx_n_s_asdict, __pyx_n_s_patterns, __pyx_n_s_unpatterns, __pyx_n_s_iss, __pyx_n_s_aobjects, __pyx_n_s_s); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(2, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(4, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_readYODA, 113, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(2, 113, __pyx_L1_error)

  /* "include/IO.pyx":134
 * 
 * 
 * def readFLAT(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided FLAT-format file.
 */
  __pyx_tuple__40 = PyTuple_Pack(7, __pyx_n_s_file_or_filename, __pyx_n_s_asdict, __pyx_n_s_patterns, __pyx_n_s_unpatterns, __pyx_n_s_iss, __pyx_n_s_aobjects, __pyx_n_s_s); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(2, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(4, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_readFLAT, 134, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(2, 134, __pyx_L1_error)

  /* "include/IO.pyx":154
 * 
 * 
 * def readAIDA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided AIDA-format file.
 */
  __pyx_tuple__42 = PyTuple_Pack(7, __pyx_n_s_file_or_filename, __pyx_n_s_asdict, __pyx_n_s_patterns, __pyx_n_s_unpatterns, __pyx_n_s_iss, __pyx_n_s_aobjects, __pyx_n_s_s); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(2, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(4, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_readAIDA, 154, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(2, 154, __pyx_L1_error)

  /* "include/IO.pyx":180
 * ##
 * 
 * def write(ana_objs, filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided filename,
 */
  __pyx_tuple__44 = PyTuple_Pack(6, __pyx_n_s_ana_objs, __pyx_n_s_filename, __pyx_n_s_oss, __pyx_n_s_vec, __pyx_n_s_a, __pyx_n_s_aolist); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(2, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_write, 180, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(2, 180, __pyx_L1_error)

  /* "include/IO.pyx":197
 * 
 * 
 * def writeYODA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in YODA format.
 */
  __pyx_tuple__46 = PyTuple_Pack(6, __pyx_n_s_ana_objs, __pyx_n_s_file_or_filename, __pyx_n_s_oss, __pyx_n_s_vec, __pyx_n_s_a, __pyx_n_s_aolist); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(2, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_writeYODA, 197, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(2, 197, __pyx_L1_error)

  /* "include/IO.pyx":213
 * 
 * 
 * def writeFLAT(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in FLAT format.
 */
  __pyx_tuple__48 = PyTuple_Pack(6, __pyx_n_s_ana_objs, __pyx_n_s_file_or_filename, __pyx_n_s_oss, __pyx_n_s_vec, __pyx_n_s_a, __pyx_n_s_aolist); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(2, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_writeFLAT, 213, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(2, 213, __pyx_L1_error)

  /* "include/IO.pyx":229
 * 
 * 
 * def writeAIDA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in AIDA format.
 */
  __pyx_tuple__50 = PyTuple_Pack(6, __pyx_n_s_ana_objs, __pyx_n_s_file_or_filename, __pyx_n_s_oss, __pyx_n_s_vec, __pyx_n_s_a, __pyx_n_s_aolist); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(2, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_andy_proj_hep_yoda_16_pyex_3, __pyx_n_s_writeAIDA, 229, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(3, 1, __pyx_L1_error);
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(3, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initcore(void); /*proto*/
PyMODINIT_FUNC initcore(void)
#else
PyMODINIT_FUNC PyInit_core(void); /*proto*/
PyMODINIT_FUNC PyInit_core(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_core(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(3, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("core", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(3, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(3, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(3, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_yoda__core) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(3, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "yoda.core")) {
      if (unlikely(PyDict_SetItemString(modules, "yoda.core", __pyx_m) < 0)) __PYX_ERR(3, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  YodaExc_Exception = Py_None; Py_INCREF(Py_None);
  YodaExc_BinningError = Py_None; Py_INCREF(Py_None);
  YodaExc_RangeError = Py_None; Py_INCREF(Py_None);
  YodaExc_LockError = Py_None; Py_INCREF(Py_None);
  YodaExc_GridError = Py_None; Py_INCREF(Py_None);
  YodaExc_LogicError = Py_None; Py_INCREF(Py_None);
  YodaExc_LowStatsError = Py_None; Py_INCREF(Py_None);
  YodaExc_WeightError = Py_None; Py_INCREF(Py_None);
  YodaExc_AnnotationError = Py_None; Py_INCREF(Py_None);
  YodaExc_ReadError = Py_None; Py_INCREF(Py_None);
  YodaExc_UserError = Py_None; Py_INCREF(Py_None);
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_ptype_4yoda_4util_Base = __Pyx_ImportType("yoda.util", "Base", sizeof(struct __pyx_obj_4yoda_4util_Base), 1); if (unlikely(!__pyx_ptype_4yoda_4util_Base)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_vtabptr_4yoda_4util_Base = (struct __pyx_vtabstruct_4yoda_4util_Base*)__Pyx_GetVtable(__pyx_ptype_4yoda_4util_Base->tp_dict); if (unlikely(!__pyx_vtabptr_4yoda_4util_Base)) __PYX_ERR(3, 1, __pyx_L1_error)
  __pyx_vtabptr_4yoda_4core_Dbn0D = &__pyx_vtable_4yoda_4core_Dbn0D;
  __pyx_vtable_4yoda_4core_Dbn0D.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_Dbn0D.d0ptr = (YODA::Dbn0D *(*)(struct __pyx_obj_4yoda_4core_Dbn0D *))__pyx_f_4yoda_4core_5Dbn0D_d0ptr;
  __pyx_vtable_4yoda_4core_Dbn0D._Dbn0D = (YODA::Dbn0D *(*)(struct __pyx_obj_4yoda_4core_Dbn0D *))__pyx_f_4yoda_4core_5Dbn0D__Dbn0D;
  __pyx_type_4yoda_4core_Dbn0D.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Dbn0D) < 0) __PYX_ERR(4, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Dbn0D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Dbn0D.tp_dict, __pyx_vtabptr_4yoda_4core_Dbn0D) < 0) __PYX_ERR(4, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Dbn0D", (PyObject *)&__pyx_type_4yoda_4core_Dbn0D) < 0) __PYX_ERR(4, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Dbn0D = &__pyx_type_4yoda_4core_Dbn0D;
  __pyx_vtabptr_4yoda_4core_Dbn1D = &__pyx_vtable_4yoda_4core_Dbn1D;
  __pyx_vtable_4yoda_4core_Dbn1D.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_Dbn1D.d1ptr = (YODA::Dbn1D *(*)(struct __pyx_obj_4yoda_4core_Dbn1D *))__pyx_f_4yoda_4core_5Dbn1D_d1ptr;
  __pyx_vtable_4yoda_4core_Dbn1D._Dbn1D = (YODA::Dbn1D *(*)(struct __pyx_obj_4yoda_4core_Dbn1D *))__pyx_f_4yoda_4core_5Dbn1D__Dbn1D;
  __pyx_type_4yoda_4core_Dbn1D.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Dbn1D) < 0) __PYX_ERR(5, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Dbn1D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Dbn1D.tp_dict, __pyx_vtabptr_4yoda_4core_Dbn1D) < 0) __PYX_ERR(5, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Dbn1D", (PyObject *)&__pyx_type_4yoda_4core_Dbn1D) < 0) __PYX_ERR(5, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Dbn1D = &__pyx_type_4yoda_4core_Dbn1D;
  __pyx_vtabptr_4yoda_4core_Dbn2D = &__pyx_vtable_4yoda_4core_Dbn2D;
  __pyx_vtable_4yoda_4core_Dbn2D.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_Dbn2D.d2ptr = (YODA::Dbn2D *(*)(struct __pyx_obj_4yoda_4core_Dbn2D *))__pyx_f_4yoda_4core_5Dbn2D_d2ptr;
  __pyx_vtable_4yoda_4core_Dbn2D._Dbn2D = (YODA::Dbn2D *(*)(struct __pyx_obj_4yoda_4core_Dbn2D *))__pyx_f_4yoda_4core_5Dbn2D__Dbn2D;
  __pyx_type_4yoda_4core_Dbn2D.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Dbn2D) < 0) __PYX_ERR(6, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Dbn2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Dbn2D.tp_dict, __pyx_vtabptr_4yoda_4core_Dbn2D) < 0) __PYX_ERR(6, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Dbn2D", (PyObject *)&__pyx_type_4yoda_4core_Dbn2D) < 0) __PYX_ERR(6, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Dbn2D = &__pyx_type_4yoda_4core_Dbn2D;
  __pyx_vtabptr_4yoda_4core_Dbn3D = &__pyx_vtable_4yoda_4core_Dbn3D;
  __pyx_vtable_4yoda_4core_Dbn3D.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_Dbn3D.d3ptr = (YODA::Dbn3D *(*)(struct __pyx_obj_4yoda_4core_Dbn3D *))__pyx_f_4yoda_4core_5Dbn3D_d3ptr;
  __pyx_vtable_4yoda_4core_Dbn3D._Dbn3D = (YODA::Dbn3D *(*)(struct __pyx_obj_4yoda_4core_Dbn3D *))__pyx_f_4yoda_4core_5Dbn3D__Dbn3D;
  __pyx_type_4yoda_4core_Dbn3D.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Dbn3D) < 0) __PYX_ERR(7, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Dbn3D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Dbn3D.tp_dict, __pyx_vtabptr_4yoda_4core_Dbn3D) < 0) __PYX_ERR(7, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Dbn3D", (PyObject *)&__pyx_type_4yoda_4core_Dbn3D) < 0) __PYX_ERR(7, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Dbn3D = &__pyx_type_4yoda_4core_Dbn3D;
  __pyx_vtabptr_4yoda_4core_AnalysisObject = &__pyx_vtable_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_AnalysisObject.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_AnalysisObject.aoptr = (YODA::AnalysisObject *(*)(struct __pyx_obj_4yoda_4core_AnalysisObject *))__pyx_f_4yoda_4core_14AnalysisObject_aoptr;
  __pyx_vtable_4yoda_4core_AnalysisObject._AnalysisObject = (YODA::AnalysisObject *(*)(struct __pyx_obj_4yoda_4core_AnalysisObject *))__pyx_f_4yoda_4core_14AnalysisObject__AnalysisObject;
  __pyx_type_4yoda_4core_AnalysisObject.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_AnalysisObject) < 0) __PYX_ERR(14, 2, __pyx_L1_error)
  __pyx_type_4yoda_4core_AnalysisObject.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_AnalysisObject.tp_dict, __pyx_vtabptr_4yoda_4core_AnalysisObject) < 0) __PYX_ERR(14, 2, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "AnalysisObject", (PyObject *)&__pyx_type_4yoda_4core_AnalysisObject) < 0) __PYX_ERR(14, 2, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_AnalysisObject = &__pyx_type_4yoda_4core_AnalysisObject;
  __pyx_vtabptr_4yoda_4core_Counter = &__pyx_vtable_4yoda_4core_Counter;
  __pyx_vtable_4yoda_4core_Counter.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Counter.cptr = (YODA::Counter *(*)(struct __pyx_obj_4yoda_4core_Counter *))__pyx_f_4yoda_4core_7Counter_cptr;
  __pyx_vtable_4yoda_4core_Counter._Counter = (YODA::Counter *(*)(struct __pyx_obj_4yoda_4core_Counter *))__pyx_f_4yoda_4core_7Counter__Counter;
  __pyx_type_4yoda_4core_Counter.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Counter) < 0) __PYX_ERR(8, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Counter.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Counter.tp_dict, __pyx_vtabptr_4yoda_4core_Counter) < 0) __PYX_ERR(8, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Counter", (PyObject *)&__pyx_type_4yoda_4core_Counter) < 0) __PYX_ERR(8, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Counter = &__pyx_type_4yoda_4core_Counter;
  __pyx_vtabptr_4yoda_4core_Bin = &__pyx_vtable_4yoda_4core_Bin;
  __pyx_vtable_4yoda_4core_Bin.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_Bin.bptr = (YODA::Bin *(*)(struct __pyx_obj_4yoda_4core_Bin *))__pyx_f_4yoda_4core_3Bin_bptr;
  __pyx_type_4yoda_4core_Bin.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Bin) < 0) __PYX_ERR(9, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Bin.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Bin.tp_dict, __pyx_vtabptr_4yoda_4core_Bin) < 0) __PYX_ERR(9, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Bin", (PyObject *)&__pyx_type_4yoda_4core_Bin) < 0) __PYX_ERR(9, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Bin = &__pyx_type_4yoda_4core_Bin;
  __pyx_vtabptr_4yoda_4core_Bin1D_Dbn1D = &__pyx_vtable_4yoda_4core_Bin1D_Dbn1D;
  __pyx_vtable_4yoda_4core_Bin1D_Dbn1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin;
  __pyx_vtable_4yoda_4core_Bin1D_Dbn1D.b1ptr = (__pyx_t_4yoda_12declarations_Bin1D_Dbn1D *(*)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *))__pyx_f_4yoda_4core_11Bin1D_Dbn1D_b1ptr;
  __pyx_vtable_4yoda_4core_Bin1D_Dbn1D._Bin1D = (__pyx_t_4yoda_12declarations_Bin1D_Dbn1D *(*)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn1D *))__pyx_f_4yoda_4core_11Bin1D_Dbn1D__Bin1D;
  __pyx_type_4yoda_4core_Bin1D_Dbn1D.tp_base = __pyx_ptype_4yoda_4core_Bin;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Bin1D_Dbn1D) < 0) __PYX_ERR(10, 8, __pyx_L1_error)
  __pyx_type_4yoda_4core_Bin1D_Dbn1D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Bin1D_Dbn1D.tp_dict, __pyx_vtabptr_4yoda_4core_Bin1D_Dbn1D) < 0) __PYX_ERR(10, 8, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Bin1D_Dbn1D", (PyObject *)&__pyx_type_4yoda_4core_Bin1D_Dbn1D) < 0) __PYX_ERR(10, 8, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Bin1D_Dbn1D = &__pyx_type_4yoda_4core_Bin1D_Dbn1D;
  __pyx_vtabptr_4yoda_4core_Bin1D_Dbn2D = &__pyx_vtable_4yoda_4core_Bin1D_Dbn2D;
  __pyx_vtable_4yoda_4core_Bin1D_Dbn2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin;
  __pyx_vtable_4yoda_4core_Bin1D_Dbn2D.b1ptr = (__pyx_t_4yoda_12declarations_Bin1D_Dbn2D *(*)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *))__pyx_f_4yoda_4core_11Bin1D_Dbn2D_b1ptr;
  __pyx_vtable_4yoda_4core_Bin1D_Dbn2D._Bin1D = (__pyx_t_4yoda_12declarations_Bin1D_Dbn2D *(*)(struct __pyx_obj_4yoda_4core_Bin1D_Dbn2D *))__pyx_f_4yoda_4core_11Bin1D_Dbn2D__Bin1D;
  __pyx_type_4yoda_4core_Bin1D_Dbn2D.tp_base = __pyx_ptype_4yoda_4core_Bin;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Bin1D_Dbn2D) < 0) __PYX_ERR(11, 8, __pyx_L1_error)
  __pyx_type_4yoda_4core_Bin1D_Dbn2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Bin1D_Dbn2D.tp_dict, __pyx_vtabptr_4yoda_4core_Bin1D_Dbn2D) < 0) __PYX_ERR(11, 8, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Bin1D_Dbn2D", (PyObject *)&__pyx_type_4yoda_4core_Bin1D_Dbn2D) < 0) __PYX_ERR(11, 8, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Bin1D_Dbn2D = &__pyx_type_4yoda_4core_Bin1D_Dbn2D;
  __pyx_vtabptr_4yoda_4core_HistoBin1D = &__pyx_vtable_4yoda_4core_HistoBin1D;
  __pyx_vtable_4yoda_4core_HistoBin1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin1D_Dbn1D;
  __pyx_vtable_4yoda_4core_HistoBin1D.hb1ptr = (YODA::HistoBin1D *(*)(struct __pyx_obj_4yoda_4core_HistoBin1D *))__pyx_f_4yoda_4core_10HistoBin1D_hb1ptr;
  __pyx_vtable_4yoda_4core_HistoBin1D._HistoBin1D = (YODA::HistoBin1D *(*)(struct __pyx_obj_4yoda_4core_HistoBin1D *))__pyx_f_4yoda_4core_10HistoBin1D__HistoBin1D;
  __pyx_type_4yoda_4core_HistoBin1D.tp_base = __pyx_ptype_4yoda_4core_Bin1D_Dbn1D;
  if (PyType_Ready(&__pyx_type_4yoda_4core_HistoBin1D) < 0) __PYX_ERR(12, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_HistoBin1D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_HistoBin1D.tp_dict, __pyx_vtabptr_4yoda_4core_HistoBin1D) < 0) __PYX_ERR(12, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "HistoBin1D", (PyObject *)&__pyx_type_4yoda_4core_HistoBin1D) < 0) __PYX_ERR(12, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_HistoBin1D = &__pyx_type_4yoda_4core_HistoBin1D;
  __pyx_vtabptr_4yoda_4core_ProfileBin1D = &__pyx_vtable_4yoda_4core_ProfileBin1D;
  __pyx_vtable_4yoda_4core_ProfileBin1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin1D_Dbn2D;
  __pyx_vtable_4yoda_4core_ProfileBin1D.pb1ptr = (YODA::ProfileBin1D *(*)(struct __pyx_obj_4yoda_4core_ProfileBin1D *))__pyx_f_4yoda_4core_12ProfileBin1D_pb1ptr;
  __pyx_vtable_4yoda_4core_ProfileBin1D._ProfileBin1D = (YODA::ProfileBin1D *(*)(struct __pyx_obj_4yoda_4core_ProfileBin1D *))__pyx_f_4yoda_4core_12ProfileBin1D__ProfileBin1D;
  __pyx_type_4yoda_4core_ProfileBin1D.tp_base = __pyx_ptype_4yoda_4core_Bin1D_Dbn2D;
  if (PyType_Ready(&__pyx_type_4yoda_4core_ProfileBin1D) < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_ProfileBin1D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_ProfileBin1D.tp_dict, __pyx_vtabptr_4yoda_4core_ProfileBin1D) < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "ProfileBin1D", (PyObject *)&__pyx_type_4yoda_4core_ProfileBin1D) < 0) __PYX_ERR(13, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_ProfileBin1D = &__pyx_type_4yoda_4core_ProfileBin1D;
  __pyx_vtabptr_4yoda_4core_Histo1D = &__pyx_vtable_4yoda_4core_Histo1D;
  __pyx_vtable_4yoda_4core_Histo1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Histo1D.h1ptr = (YODA::Histo1D *(*)(struct __pyx_obj_4yoda_4core_Histo1D *))__pyx_f_4yoda_4core_7Histo1D_h1ptr;
  __pyx_type_4yoda_4core_Histo1D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Histo1D) < 0) __PYX_ERR(15, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Histo1D.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Histo1D, "__len__"); if (unlikely(!wrapper)) __PYX_ERR(15, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_7Histo1D_8__len__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_7Histo1D_8__len__.doc = __pyx_doc_4yoda_4core_7Histo1D_8__len__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_7Histo1D_8__len__;
    }
  }
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Histo1D, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(15, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_7Histo1D_10__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_7Histo1D_10__getitem__.doc = __pyx_doc_4yoda_4core_7Histo1D_10__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_7Histo1D_10__getitem__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Histo1D.tp_dict, __pyx_vtabptr_4yoda_4core_Histo1D) < 0) __PYX_ERR(15, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Histo1D", (PyObject *)&__pyx_type_4yoda_4core_Histo1D) < 0) __PYX_ERR(15, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Histo1D = &__pyx_type_4yoda_4core_Histo1D;
  __pyx_vtabptr_4yoda_4core_Profile1D = &__pyx_vtable_4yoda_4core_Profile1D;
  __pyx_vtable_4yoda_4core_Profile1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Profile1D.p1ptr = (YODA::Profile1D *(*)(struct __pyx_obj_4yoda_4core_Profile1D *))__pyx_f_4yoda_4core_9Profile1D_p1ptr;
  __pyx_type_4yoda_4core_Profile1D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Profile1D) < 0) __PYX_ERR(16, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Profile1D.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Profile1D, "__len__"); if (unlikely(!wrapper)) __PYX_ERR(16, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_9Profile1D_8__len__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_9Profile1D_8__len__.doc = __pyx_doc_4yoda_4core_9Profile1D_8__len__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_9Profile1D_8__len__;
    }
  }
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Profile1D, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(16, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_9Profile1D_10__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_9Profile1D_10__getitem__.doc = __pyx_doc_4yoda_4core_9Profile1D_10__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_9Profile1D_10__getitem__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Profile1D.tp_dict, __pyx_vtabptr_4yoda_4core_Profile1D) < 0) __PYX_ERR(16, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Profile1D", (PyObject *)&__pyx_type_4yoda_4core_Profile1D) < 0) __PYX_ERR(16, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Profile1D = &__pyx_type_4yoda_4core_Profile1D;
  __pyx_vtabptr_4yoda_4core_Bin2D_Dbn2D = &__pyx_vtable_4yoda_4core_Bin2D_Dbn2D;
  __pyx_vtable_4yoda_4core_Bin2D_Dbn2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin;
  __pyx_vtable_4yoda_4core_Bin2D_Dbn2D.b2ptr = (__pyx_t_4yoda_12declarations_Bin2D_Dbn2D *(*)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *))__pyx_f_4yoda_4core_11Bin2D_Dbn2D_b2ptr;
  __pyx_vtable_4yoda_4core_Bin2D_Dbn2D._Bin2D = (__pyx_t_4yoda_12declarations_Bin2D_Dbn2D *(*)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn2D *))__pyx_f_4yoda_4core_11Bin2D_Dbn2D__Bin2D;
  __pyx_type_4yoda_4core_Bin2D_Dbn2D.tp_base = __pyx_ptype_4yoda_4core_Bin;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Bin2D_Dbn2D) < 0) __PYX_ERR(17, 9, __pyx_L1_error)
  __pyx_type_4yoda_4core_Bin2D_Dbn2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Bin2D_Dbn2D.tp_dict, __pyx_vtabptr_4yoda_4core_Bin2D_Dbn2D) < 0) __PYX_ERR(17, 9, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Bin2D_Dbn2D", (PyObject *)&__pyx_type_4yoda_4core_Bin2D_Dbn2D) < 0) __PYX_ERR(17, 9, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Bin2D_Dbn2D = &__pyx_type_4yoda_4core_Bin2D_Dbn2D;
  __pyx_vtabptr_4yoda_4core_Bin2D_Dbn3D = &__pyx_vtable_4yoda_4core_Bin2D_Dbn3D;
  __pyx_vtable_4yoda_4core_Bin2D_Dbn3D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin;
  __pyx_vtable_4yoda_4core_Bin2D_Dbn3D.b2ptr = (__pyx_t_4yoda_12declarations_Bin2D_Dbn3D *(*)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *))__pyx_f_4yoda_4core_11Bin2D_Dbn3D_b2ptr;
  __pyx_vtable_4yoda_4core_Bin2D_Dbn3D._Bin2D = (__pyx_t_4yoda_12declarations_Bin2D_Dbn3D *(*)(struct __pyx_obj_4yoda_4core_Bin2D_Dbn3D *))__pyx_f_4yoda_4core_11Bin2D_Dbn3D__Bin2D;
  __pyx_type_4yoda_4core_Bin2D_Dbn3D.tp_base = __pyx_ptype_4yoda_4core_Bin;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Bin2D_Dbn3D) < 0) __PYX_ERR(18, 9, __pyx_L1_error)
  __pyx_type_4yoda_4core_Bin2D_Dbn3D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Bin2D_Dbn3D.tp_dict, __pyx_vtabptr_4yoda_4core_Bin2D_Dbn3D) < 0) __PYX_ERR(18, 9, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Bin2D_Dbn3D", (PyObject *)&__pyx_type_4yoda_4core_Bin2D_Dbn3D) < 0) __PYX_ERR(18, 9, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Bin2D_Dbn3D = &__pyx_type_4yoda_4core_Bin2D_Dbn3D;
  __pyx_vtabptr_4yoda_4core_ProfileBin2D = &__pyx_vtable_4yoda_4core_ProfileBin2D;
  __pyx_vtable_4yoda_4core_ProfileBin2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin2D_Dbn3D;
  __pyx_vtable_4yoda_4core_ProfileBin2D.pb2ptr = (YODA::ProfileBin2D *(*)(struct __pyx_obj_4yoda_4core_ProfileBin2D *))__pyx_f_4yoda_4core_12ProfileBin2D_pb2ptr;
  __pyx_vtable_4yoda_4core_ProfileBin2D._ProfileBin2D = (YODA::ProfileBin2D *(*)(struct __pyx_obj_4yoda_4core_ProfileBin2D *))__pyx_f_4yoda_4core_12ProfileBin2D__ProfileBin2D;
  __pyx_type_4yoda_4core_ProfileBin2D.tp_base = __pyx_ptype_4yoda_4core_Bin2D_Dbn3D;
  if (PyType_Ready(&__pyx_type_4yoda_4core_ProfileBin2D) < 0) __PYX_ERR(19, 2, __pyx_L1_error)
  __pyx_type_4yoda_4core_ProfileBin2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_ProfileBin2D.tp_dict, __pyx_vtabptr_4yoda_4core_ProfileBin2D) < 0) __PYX_ERR(19, 2, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "ProfileBin2D", (PyObject *)&__pyx_type_4yoda_4core_ProfileBin2D) < 0) __PYX_ERR(19, 2, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_ProfileBin2D = &__pyx_type_4yoda_4core_ProfileBin2D;
  __pyx_vtabptr_4yoda_4core_HistoBin2D = &__pyx_vtable_4yoda_4core_HistoBin2D;
  __pyx_vtable_4yoda_4core_HistoBin2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Bin2D_Dbn2D;
  __pyx_vtable_4yoda_4core_HistoBin2D.hb2ptr = (YODA::HistoBin2D *(*)(struct __pyx_obj_4yoda_4core_HistoBin2D *))__pyx_f_4yoda_4core_10HistoBin2D_hb2ptr;
  __pyx_vtable_4yoda_4core_HistoBin2D._HistoBin2D = (YODA::HistoBin2D *(*)(struct __pyx_obj_4yoda_4core_HistoBin2D *))__pyx_f_4yoda_4core_10HistoBin2D__HistoBin2D;
  __pyx_type_4yoda_4core_HistoBin2D.tp_base = __pyx_ptype_4yoda_4core_Bin2D_Dbn2D;
  if (PyType_Ready(&__pyx_type_4yoda_4core_HistoBin2D) < 0) __PYX_ERR(20, 2, __pyx_L1_error)
  __pyx_type_4yoda_4core_HistoBin2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_HistoBin2D.tp_dict, __pyx_vtabptr_4yoda_4core_HistoBin2D) < 0) __PYX_ERR(20, 2, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "HistoBin2D", (PyObject *)&__pyx_type_4yoda_4core_HistoBin2D) < 0) __PYX_ERR(20, 2, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_HistoBin2D = &__pyx_type_4yoda_4core_HistoBin2D;
  __pyx_vtabptr_4yoda_4core_Histo2D = &__pyx_vtable_4yoda_4core_Histo2D;
  __pyx_vtable_4yoda_4core_Histo2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Histo2D.h2ptr = (YODA::Histo2D *(*)(struct __pyx_obj_4yoda_4core_Histo2D *))__pyx_f_4yoda_4core_7Histo2D_h2ptr;
  __pyx_type_4yoda_4core_Histo2D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Histo2D) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Histo2D.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Histo2D, "__len__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_7Histo2D_8__len__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_7Histo2D_8__len__.doc = __pyx_doc_4yoda_4core_7Histo2D_8__len__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_7Histo2D_8__len__;
    }
  }
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Histo2D, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_7Histo2D_10__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_7Histo2D_10__getitem__.doc = __pyx_doc_4yoda_4core_7Histo2D_10__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_7Histo2D_10__getitem__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Histo2D.tp_dict, __pyx_vtabptr_4yoda_4core_Histo2D) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Histo2D", (PyObject *)&__pyx_type_4yoda_4core_Histo2D) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Histo2D = &__pyx_type_4yoda_4core_Histo2D;
  __pyx_vtabptr_4yoda_4core_Profile2D = &__pyx_vtable_4yoda_4core_Profile2D;
  __pyx_vtable_4yoda_4core_Profile2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Profile2D.p2ptr = (YODA::Profile2D *(*)(struct __pyx_obj_4yoda_4core_Profile2D *))__pyx_f_4yoda_4core_9Profile2D_p2ptr;
  __pyx_type_4yoda_4core_Profile2D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Profile2D) < 0) __PYX_ERR(21, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Profile2D.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_4yoda_4core_Profile2D, "__getitem__"); if (unlikely(!wrapper)) __PYX_ERR(21, 1, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yoda_4core_9Profile2D_10__getitem__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yoda_4core_9Profile2D_10__getitem__.doc = __pyx_doc_4yoda_4core_9Profile2D_10__getitem__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yoda_4core_9Profile2D_10__getitem__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Profile2D.tp_dict, __pyx_vtabptr_4yoda_4core_Profile2D) < 0) __PYX_ERR(21, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Profile2D", (PyObject *)&__pyx_type_4yoda_4core_Profile2D) < 0) __PYX_ERR(21, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Profile2D = &__pyx_type_4yoda_4core_Profile2D;
  __pyx_vtabptr_4yoda_4core_Point = &__pyx_vtable_4yoda_4core_Point;
  __pyx_vtable_4yoda_4core_Point.__pyx_base = *__pyx_vtabptr_4yoda_4util_Base;
  __pyx_vtable_4yoda_4core_Point.pptr = (YODA::Point *(*)(struct __pyx_obj_4yoda_4core_Point *))__pyx_f_4yoda_4core_5Point_pptr;
  __pyx_type_4yoda_4core_Point.tp_base = __pyx_ptype_4yoda_4util_Base;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Point) < 0) __PYX_ERR(22, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Point.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Point.tp_dict, __pyx_vtabptr_4yoda_4core_Point) < 0) __PYX_ERR(22, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Point", (PyObject *)&__pyx_type_4yoda_4core_Point) < 0) __PYX_ERR(22, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Point = &__pyx_type_4yoda_4core_Point;
  __pyx_vtabptr_4yoda_4core_Point1D = &__pyx_vtable_4yoda_4core_Point1D;
  __pyx_vtable_4yoda_4core_Point1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Point;
  __pyx_vtable_4yoda_4core_Point1D.p1ptr = (YODA::Point1D *(*)(struct __pyx_obj_4yoda_4core_Point1D *))__pyx_f_4yoda_4core_7Point1D_p1ptr;
  __pyx_type_4yoda_4core_Point1D.tp_base = __pyx_ptype_4yoda_4core_Point;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Point1D) < 0) __PYX_ERR(23, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Point1D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Point1D.tp_dict, __pyx_vtabptr_4yoda_4core_Point1D) < 0) __PYX_ERR(23, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Point1D", (PyObject *)&__pyx_type_4yoda_4core_Point1D) < 0) __PYX_ERR(23, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Point1D = &__pyx_type_4yoda_4core_Point1D;
  __pyx_vtabptr_4yoda_4core_Point2D = &__pyx_vtable_4yoda_4core_Point2D;
  __pyx_vtable_4yoda_4core_Point2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Point;
  __pyx_vtable_4yoda_4core_Point2D.p2ptr = (YODA::Point2D *(*)(struct __pyx_obj_4yoda_4core_Point2D *))__pyx_f_4yoda_4core_7Point2D_p2ptr;
  __pyx_type_4yoda_4core_Point2D.tp_base = __pyx_ptype_4yoda_4core_Point;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Point2D) < 0) __PYX_ERR(24, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Point2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Point2D.tp_dict, __pyx_vtabptr_4yoda_4core_Point2D) < 0) __PYX_ERR(24, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Point2D", (PyObject *)&__pyx_type_4yoda_4core_Point2D) < 0) __PYX_ERR(24, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Point2D = &__pyx_type_4yoda_4core_Point2D;
  __pyx_vtabptr_4yoda_4core_Point3D = &__pyx_vtable_4yoda_4core_Point3D;
  __pyx_vtable_4yoda_4core_Point3D.__pyx_base = *__pyx_vtabptr_4yoda_4core_Point;
  __pyx_vtable_4yoda_4core_Point3D.p3ptr = (YODA::Point3D *(*)(struct __pyx_obj_4yoda_4core_Point3D *))__pyx_f_4yoda_4core_7Point3D_p3ptr;
  __pyx_type_4yoda_4core_Point3D.tp_base = __pyx_ptype_4yoda_4core_Point;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Point3D) < 0) __PYX_ERR(25, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Point3D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Point3D.tp_dict, __pyx_vtabptr_4yoda_4core_Point3D) < 0) __PYX_ERR(25, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Point3D", (PyObject *)&__pyx_type_4yoda_4core_Point3D) < 0) __PYX_ERR(25, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Point3D = &__pyx_type_4yoda_4core_Point3D;
  __pyx_vtabptr_4yoda_4core_Scatter1D = &__pyx_vtable_4yoda_4core_Scatter1D;
  __pyx_vtable_4yoda_4core_Scatter1D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Scatter1D.s1ptr = (YODA::Scatter1D *(*)(struct __pyx_obj_4yoda_4core_Scatter1D *))__pyx_f_4yoda_4core_9Scatter1D_s1ptr;
  __pyx_type_4yoda_4core_Scatter1D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Scatter1D) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Scatter1D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Scatter1D.tp_dict, __pyx_vtabptr_4yoda_4core_Scatter1D) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Scatter1D", (PyObject *)&__pyx_type_4yoda_4core_Scatter1D) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Scatter1D = &__pyx_type_4yoda_4core_Scatter1D;
  __pyx_vtabptr_4yoda_4core_Scatter2D = &__pyx_vtable_4yoda_4core_Scatter2D;
  __pyx_vtable_4yoda_4core_Scatter2D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Scatter2D.s2ptr = (YODA::Scatter2D *(*)(struct __pyx_obj_4yoda_4core_Scatter2D *))__pyx_f_4yoda_4core_9Scatter2D_s2ptr;
  __pyx_type_4yoda_4core_Scatter2D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Scatter2D) < 0) __PYX_ERR(26, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Scatter2D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Scatter2D.tp_dict, __pyx_vtabptr_4yoda_4core_Scatter2D) < 0) __PYX_ERR(26, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Scatter2D", (PyObject *)&__pyx_type_4yoda_4core_Scatter2D) < 0) __PYX_ERR(26, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Scatter2D = &__pyx_type_4yoda_4core_Scatter2D;
  __pyx_vtabptr_4yoda_4core_Scatter3D = &__pyx_vtable_4yoda_4core_Scatter3D;
  __pyx_vtable_4yoda_4core_Scatter3D.__pyx_base = *__pyx_vtabptr_4yoda_4core_AnalysisObject;
  __pyx_vtable_4yoda_4core_Scatter3D.s3ptr = (YODA::Scatter3D *(*)(struct __pyx_obj_4yoda_4core_Scatter3D *))__pyx_f_4yoda_4core_9Scatter3D_s3ptr;
  __pyx_type_4yoda_4core_Scatter3D.tp_base = __pyx_ptype_4yoda_4core_AnalysisObject;
  if (PyType_Ready(&__pyx_type_4yoda_4core_Scatter3D) < 0) __PYX_ERR(27, 1, __pyx_L1_error)
  __pyx_type_4yoda_4core_Scatter3D.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yoda_4core_Scatter3D.tp_dict, __pyx_vtabptr_4yoda_4core_Scatter3D) < 0) __PYX_ERR(27, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Scatter3D", (PyObject *)&__pyx_type_4yoda_4core_Scatter3D) < 0) __PYX_ERR(27, 1, __pyx_L1_error)
  __pyx_ptype_4yoda_4core_Scatter3D = &__pyx_type_4yoda_4core_Scatter3D;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct____init3) < 0) __PYX_ERR(15, 40, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct____init3.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct____init3 = &__pyx_type_4yoda_4core___pyx_scope_struct____init3;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(15, 45, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct_1_genexpr.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct_1_genexpr = &__pyx_type_4yoda_4core___pyx_scope_struct_1_genexpr;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct_2___init3) < 0) __PYX_ERR(16, 41, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct_2___init3.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct_2___init3 = &__pyx_type_4yoda_4core___pyx_scope_struct_2___init3;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(16, 46, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct_3_genexpr.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct_3_genexpr = &__pyx_type_4yoda_4core___pyx_scope_struct_3_genexpr;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct_4__pattern_check) < 0) __PYX_ERR(2, 13, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct_4__pattern_check.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct_4__pattern_check = &__pyx_type_4yoda_4core___pyx_scope_struct_4__pattern_check;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct_5_genexpr) < 0) __PYX_ERR(2, 19, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct_5_genexpr.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct_5_genexpr = &__pyx_type_4yoda_4core___pyx_scope_struct_5_genexpr;
  if (PyType_Ready(&__pyx_type_4yoda_4core___pyx_scope_struct_6_genexpr) < 0) __PYX_ERR(2, 25, __pyx_L1_error)
  __pyx_type_4yoda_4core___pyx_scope_struct_6_genexpr.tp_print = 0;
  __pyx_ptype_4yoda_4core___pyx_scope_struct_6_genexpr = &__pyx_type_4yoda_4core___pyx_scope_struct_6_genexpr;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(31, 9, __pyx_L1_error)
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  #endif

  /* "yoda/core.pyx":13
 * cimport yoda.declarations as c
 * cimport yoda.util as cutil
 * import yoda.util as util             # <<<<<<<<<<<<<<
 * 
 * ## Pure Python imports
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s__12);
  __Pyx_GIVEREF(__pyx_n_s__12);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__12);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_yoda_util, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_util, __pyx_t_2) < 0) __PYX_ERR(3, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yoda/core.pyx":16
 * 
 * ## Pure Python imports
 * from itertools import repeat, imap             # <<<<<<<<<<<<<<
 * from operator import attrgetter
 * 
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_repeat);
  __Pyx_GIVEREF(__pyx_n_s_repeat);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_repeat);
  __Pyx_INCREF(__pyx_n_s_imap);
  __Pyx_GIVEREF(__pyx_n_s_imap);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_imap);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_itertools, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_repeat); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_repeat, __pyx_t_2) < 0) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_imap); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_imap, __pyx_t_2) < 0) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yoda/core.pyx":17
 * ## Pure Python imports
 * from itertools import repeat, imap
 * from operator import attrgetter             # <<<<<<<<<<<<<<
 * 
 * def version():
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_attrgetter);
  __Pyx_GIVEREF(__pyx_n_s_attrgetter);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_attrgetter);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_operator, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_attrgetter); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_attrgetter, __pyx_t_1) < 0) __PYX_ERR(3, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yoda/core.pyx":19
 * from operator import attrgetter
 * 
 * def version():             # <<<<<<<<<<<<<<
 *     "Return YODA library version as a string"
 *     return c.version()
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_1version, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_version, __pyx_t_2) < 0) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Errors.pyx":11
 * cdef public:
 *     # Master exception
 *     object YodaExc_Exception = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.Exception", <object> NULL, <object> NULL)
 * 
 */
  __pyx_t_2 = PyErr_NewException(((char *)"yoda.Exception"), ((PyObject *)NULL), ((PyObject *)NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(32, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XGOTREF(YodaExc_Exception);
  __Pyx_DECREF_SET(YodaExc_Exception, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "include/Errors.pyx":16
 *     # Inherited exceptions
 *     object YodaExc_BinningError = PyErr_NewException(
 *         "yoda.BinningError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_RangeError = PyErr_NewException(
 *         "yoda.RangeError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_2 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_2);

  /* "include/Errors.pyx":15
 * 
 *     # Inherited exceptions
 *     object YodaExc_BinningError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.BinningError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_RangeError = PyErr_NewException(
 */
  __pyx_t_1 = PyErr_NewException(((char *)"yoda.BinningError"), __pyx_t_2, ((PyObject *)NULL)); if (unlikely(!__pyx_t_1)) __PYX_ERR(32, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(YodaExc_BinningError);
  __Pyx_DECREF_SET(YodaExc_BinningError, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Errors.pyx":18
 *         "yoda.BinningError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_RangeError = PyErr_NewException(
 *         "yoda.RangeError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_LockError = PyErr_NewException(
 *         "yoda.LockError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_1 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_1);

  /* "include/Errors.pyx":17
 *     object YodaExc_BinningError = PyErr_NewException(
 *         "yoda.BinningError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_RangeError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.RangeError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LockError = PyErr_NewException(
 */
  __pyx_t_2 = PyErr_NewException(((char *)"yoda.RangeError"), __pyx_t_1, ((PyObject *)NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(32, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(YodaExc_RangeError);
  __Pyx_DECREF_SET(YodaExc_RangeError, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "include/Errors.pyx":20
 *         "yoda.RangeError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LockError = PyErr_NewException(
 *         "yoda.LockError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_GridError = PyErr_NewException(
 *         "yoda.GridError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_2 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_2);

  /* "include/Errors.pyx":19
 *     object YodaExc_RangeError = PyErr_NewException(
 *         "yoda.RangeError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LockError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.LockError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_GridError = PyErr_NewException(
 */
  __pyx_t_1 = PyErr_NewException(((char *)"yoda.LockError"), __pyx_t_2, ((PyObject *)NULL)); if (unlikely(!__pyx_t_1)) __PYX_ERR(32, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(YodaExc_LockError);
  __Pyx_DECREF_SET(YodaExc_LockError, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Errors.pyx":22
 *         "yoda.LockError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_GridError = PyErr_NewException(
 *         "yoda.GridError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_LogicError = PyErr_NewException(
 *         "yoda.LogicError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_1 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_1);

  /* "include/Errors.pyx":21
 *     object YodaExc_LockError = PyErr_NewException(
 *         "yoda.LockError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_GridError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.GridError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LogicError = PyErr_NewException(
 */
  __pyx_t_2 = PyErr_NewException(((char *)"yoda.GridError"), __pyx_t_1, ((PyObject *)NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(32, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(YodaExc_GridError);
  __Pyx_DECREF_SET(YodaExc_GridError, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "include/Errors.pyx":24
 *         "yoda.GridError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LogicError = PyErr_NewException(
 *         "yoda.LogicError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_LowStatsError = PyErr_NewException(
 *         "yoda.LowStatsError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_2 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_2);

  /* "include/Errors.pyx":23
 *     object YodaExc_GridError = PyErr_NewException(
 *         "yoda.GridError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LogicError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.LogicError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LowStatsError = PyErr_NewException(
 */
  __pyx_t_1 = PyErr_NewException(((char *)"yoda.LogicError"), __pyx_t_2, ((PyObject *)NULL)); if (unlikely(!__pyx_t_1)) __PYX_ERR(32, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(YodaExc_LogicError);
  __Pyx_DECREF_SET(YodaExc_LogicError, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Errors.pyx":26
 *         "yoda.LogicError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LowStatsError = PyErr_NewException(
 *         "yoda.LowStatsError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_WeightError = PyErr_NewException(
 *         "yoda.WeightError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_1 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_1);

  /* "include/Errors.pyx":25
 *     object YodaExc_LogicError = PyErr_NewException(
 *         "yoda.LogicError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_LowStatsError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.LowStatsError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_WeightError = PyErr_NewException(
 */
  __pyx_t_2 = PyErr_NewException(((char *)"yoda.LowStatsError"), __pyx_t_1, ((PyObject *)NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(32, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(YodaExc_LowStatsError);
  __Pyx_DECREF_SET(YodaExc_LowStatsError, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "include/Errors.pyx":28
 *         "yoda.LowStatsError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_WeightError = PyErr_NewException(
 *         "yoda.WeightError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_AnnotationError = PyErr_NewException(
 *         "yoda.AnnotationError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_2 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_2);

  /* "include/Errors.pyx":27
 *     object YodaExc_LowStatsError = PyErr_NewException(
 *         "yoda.LowStatsError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_WeightError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.WeightError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_AnnotationError = PyErr_NewException(
 */
  __pyx_t_1 = PyErr_NewException(((char *)"yoda.WeightError"), __pyx_t_2, ((PyObject *)NULL)); if (unlikely(!__pyx_t_1)) __PYX_ERR(32, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(YodaExc_WeightError);
  __Pyx_DECREF_SET(YodaExc_WeightError, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Errors.pyx":30
 *         "yoda.WeightError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_AnnotationError = PyErr_NewException(
 *         "yoda.AnnotationError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_ReadError = PyErr_NewException(
 *         "yoda.ReadError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_1 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_1);

  /* "include/Errors.pyx":29
 *     object YodaExc_WeightError = PyErr_NewException(
 *         "yoda.WeightError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_AnnotationError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.AnnotationError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_ReadError = PyErr_NewException(
 */
  __pyx_t_2 = PyErr_NewException(((char *)"yoda.AnnotationError"), __pyx_t_1, ((PyObject *)NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(32, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(YodaExc_AnnotationError);
  __Pyx_DECREF_SET(YodaExc_AnnotationError, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "include/Errors.pyx":32
 *         "yoda.AnnotationError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_ReadError = PyErr_NewException(
 *         "yoda.ReadError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 *     object YodaExc_UserError = PyErr_NewException(
 *         "yoda.UserError", YodaExc_Exception, <object> NULL)
 */
  __pyx_t_2 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_2);

  /* "include/Errors.pyx":31
 *     object YodaExc_AnnotationError = PyErr_NewException(
 *         "yoda.AnnotationError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_ReadError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.ReadError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_UserError = PyErr_NewException(
 */
  __pyx_t_1 = PyErr_NewException(((char *)"yoda.ReadError"), __pyx_t_2, ((PyObject *)NULL)); if (unlikely(!__pyx_t_1)) __PYX_ERR(32, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(YodaExc_ReadError);
  __Pyx_DECREF_SET(YodaExc_ReadError, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "include/Errors.pyx":34
 *         "yoda.ReadError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_UserError = PyErr_NewException(
 *         "yoda.UserError", YodaExc_Exception, <object> NULL)             # <<<<<<<<<<<<<<
 * 
 * # Note that these don't appear in python space due to the cdef. What we will
 */
  __pyx_t_1 = YodaExc_Exception;
  __Pyx_INCREF(__pyx_t_1);

  /* "include/Errors.pyx":33
 *     object YodaExc_ReadError = PyErr_NewException(
 *         "yoda.ReadError", YodaExc_Exception, <object> NULL)
 *     object YodaExc_UserError = PyErr_NewException(             # <<<<<<<<<<<<<<
 *         "yoda.UserError", YodaExc_Exception, <object> NULL)
 * 
 */
  __pyx_t_2 = PyErr_NewException(((char *)"yoda.UserError"), __pyx_t_1, ((PyObject *)NULL)); if (unlikely(!__pyx_t_2)) __PYX_ERR(32, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XGOTREF(YodaExc_UserError);
  __Pyx_DECREF_SET(YodaExc_UserError, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "include/Functions.pyx":1
 * def mkScatter(ao, usefocus=False, usestddev=False):             # <<<<<<<<<<<<<<
 *     """AnalysisObject -> Scatter{1,2,3}D
 *     Convert an AnalysisObject to a Scatter, using the logic of the bound mkScatter methods.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_3mkScatter, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_mkScatter, __pyx_t_2) < 0) __PYX_ERR(28, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":16
 * 
 * 
 * def divide(ao1, ao2):             # <<<<<<<<<<<<<<
 *     """(AnalysisObject, AnalysisObject) -> Scatter{1,2,3}D
 *     Divide one AnalysisObject by another, producing a Scatter of appropriate dimension by using the logic of the bound divideBy methods."""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_5divide, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_divide, __pyx_t_2) < 0) __PYX_ERR(28, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":45
 * 
 * 
 * def linspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced between start and end, with the first and
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_7linspace, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_linspace, __pyx_t_2) < 0) __PYX_ERR(28, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":52
 * 
 * 
 * def logspace(nbins, start, end):             # <<<<<<<<<<<<<<
 *     """(int, float, float) -> list[float]
 *     Make a list of n+1 bin edges linearly spaced on the interval log(start..end), with
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_9logspace, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_logspace, __pyx_t_2) < 0) __PYX_ERR(28, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":59
 * 
 * 
 * def index_between(x, binedges):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the index of the bin which would contain x, or -1 if there is no enclosing
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_11index_between, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_index_between, __pyx_t_2) < 0) __PYX_ERR(28, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":66
 * 
 * 
 * def mean(sample):             # <<<<<<<<<<<<<<
 *     """(list[float]) -> float
 *     Return the unweighted mean of the entries in the provided sample list."""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_13mean, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_mean, __pyx_t_2) < 0) __PYX_ERR(28, 66, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":72
 * 
 * 
 * def covariance(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(list[float], list[float]) -> float
 *     Return the unweighted covariance of the two provided sample lists."""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_15covariance, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_covariance, __pyx_t_2) < 0) __PYX_ERR(28, 72, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/Functions.pyx":78
 * 
 * 
 * def correlation(sample1, sample2):             # <<<<<<<<<<<<<<
 *     """(float, list[float]) -> int
 *     Return the unweighted correlation of the two provided sample lists."""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_17correlation, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(28, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_correlation, __pyx_t_2) < 0) __PYX_ERR(28, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":10
 * """
 * 
 * import sys             # <<<<<<<<<<<<<<
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_sys, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_2) < 0) __PYX_ERR(2, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":13
 * 
 * ## Check if a string matches any of the given patterns, and that it doesn't match any unpatterns (for path filtering)
 * def _pattern_check(name, patterns, unpatterns):             # <<<<<<<<<<<<<<
 *     import re
 *     if patterns:
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_19_pattern_check, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pattern_check, __pyx_t_2) < 0) __PYX_ERR(2, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":61
 * ## Read a file's contents as a returned string
 * ## The file argument can either be a file object, filename, or special "-" reference to stdin
 * def _str_from_file(file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'read'):
 *         s = file_or_filename.read()
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_21_str_from_file, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_str_from_file, __pyx_t_2) < 0) __PYX_ERR(2, 61, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":74
 * ## Write a string to a file
 * ## The file argument can either be a file object, filename, or special "-" reference to stdout
 * def _str_to_file(s, file_or_filename):             # <<<<<<<<<<<<<<
 *     if hasattr(file_or_filename, 'write'):
 *         file_or_filename.write(s)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_23_str_to_file, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_str_to_file, __pyx_t_2) < 0) __PYX_ERR(2, 74, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":90
 * ##
 * 
 * def read(filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided filename, auto-determining the format
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_25read, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_read, __pyx_t_2) < 0) __PYX_ERR(2, 90, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":113
 * 
 * 
 * def readYODA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided YODA-format file.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_27readYODA, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readYODA, __pyx_t_2) < 0) __PYX_ERR(2, 113, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":134
 * 
 * 
 * def readFLAT(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided FLAT-format file.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_29readFLAT, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readFLAT, __pyx_t_2) < 0) __PYX_ERR(2, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":154
 * 
 * 
 * def readAIDA(file_or_filename, asdict=True, patterns=None, unpatterns=None):             # <<<<<<<<<<<<<<
 *     """
 *     Read data objects from the provided AIDA-format file.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_31readAIDA, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readAIDA, __pyx_t_2) < 0) __PYX_ERR(2, 154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":180
 * ##
 * 
 * def write(ana_objs, filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided filename,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_33write, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_write, __pyx_t_2) < 0) __PYX_ERR(2, 180, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":197
 * 
 * 
 * def writeYODA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in YODA format.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_35writeYODA, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_writeYODA, __pyx_t_2) < 0) __PYX_ERR(2, 197, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":213
 * 
 * 
 * def writeFLAT(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in FLAT format.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_37writeFLAT, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_writeFLAT, __pyx_t_2) < 0) __PYX_ERR(2, 213, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "include/IO.pyx":229
 * 
 * 
 * def writeAIDA(ana_objs, file_or_filename):             # <<<<<<<<<<<<<<
 *     """
 *     Write data objects to the provided file in AIDA format.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yoda_4core_39writeAIDA, NULL, __pyx_n_s_yoda_core); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_writeAIDA, __pyx_t_2) < 0) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yoda/core.pyx":1
 * #cython: embedsignature=True             # <<<<<<<<<<<<<<
 * 
 * ## System / stdlib imports
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(3, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_int")
 * cdef vector[X] __pyx_convert_vector_from_py_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init yoda.core", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init yoda.core");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyErrFetchRestore */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* KeywordStringCheck */
static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* ArgTypeTest */
static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* GetModuleGlobalName */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* PyObjectCallMethO */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
  #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* SaveResetException */
    #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
    #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
#endif
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* Import */
      static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
      static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* PyObjectCallNoArg */
      #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* None */
        static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* RaiseTooManyValuesToUnpack */
        static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
        static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
        static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
        static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* GetItemInt */
        static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyErrExceptionMatches */
        #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    return PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* ExtTypeTest */
        static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* RaiseException */
        #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* GetAttr */
          static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_COMPILING_IN_CPYTHON
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* Globals */
          static PyObject* __Pyx_Globals(void) {
    Py_ssize_t i;
    PyObject *names;
    PyObject *globals = __pyx_d;
    Py_INCREF(globals);
    names = PyObject_Dir(__pyx_m);
    if (!names)
        goto bad;
    for (i = PyList_GET_SIZE(names)-1; i >= 0; i--) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject* name = PySequence_ITEM(names, i);
        if (!name)
            goto bad;
#else
        PyObject* name = PyList_GET_ITEM(names, i);
#endif
        if (!PyDict_Contains(globals, name)) {
            PyObject* value = __Pyx_GetAttr(__pyx_m, name);
            if (!value) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                goto bad;
            }
            if (PyDict_SetItem(globals, name, value) < 0) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                Py_DECREF(value);
                goto bad;
            }
        }
#if CYTHON_COMPILING_IN_PYPY
        Py_DECREF(name);
#endif
    }
    Py_DECREF(names);
    return globals;
bad:
    Py_XDECREF(names);
    Py_XDECREF(globals);
    return NULL;
}

/* BytesEquals */
          static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
          static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* CallNextTpDealloc */
          static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

/* CallNextTpTraverse */
          static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
          static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* GetVTable */
          static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* SetVTable */
          static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* CodeObjectCache */
          static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
          #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
          #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
          static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_long(unsigned long value) {
    const unsigned long neg_one = (unsigned long) -1, const_zero = (unsigned long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(unsigned long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
          static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
          static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
          static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
          static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
          static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntFromPy */
          static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FetchCommonType */
          static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* SwapException */
          #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* PyObjectCallMethod1 */
          static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

/* CoroutineBase */
          #include <structmember.h>
#include <frameobject.h>
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
#if PY_VERSION_HEX >= 0x030300A0
        if (ev && Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
#endif
        if (!ev || !PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            if (!ev) {
                Py_INCREF(Py_None);
                ev = Py_None;
            } else if (PyTuple_Check(ev)) {
                if (PyTuple_GET_SIZE(ev) >= 1) {
                    PyObject *value;
#if CYTHON_COMPILING_IN_CPYTHON
                    value = PySequence_ITEM(ev, 0);
#else
                    value = PyTuple_GET_ITEM(ev, 0);
                    Py_INCREF(value);
#endif
                    Py_DECREF(ev);
                    ev = value;
                } else {
                    Py_INCREF(Py_None);
                    Py_DECREF(ev);
                    ev = Py_None;
                }
            }
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = ev;
            return 0;
        }
    } else if (!PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
#endif
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__pyx_CoroutineObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
int __Pyx_Coroutine_CheckRunning(__pyx_CoroutineObject *gen) {
    if (unlikely(gen->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return 1;
    }
    return 0;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value) {
    PyObject *retval;
    __Pyx_PyThreadState_declare
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    __Pyx_PyThreadState_assign
    if (value) {
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(__pyx_tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = __pyx_tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval) {
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_CLEAR(f->f_back);
        }
#endif
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject *retval) {
    if (unlikely(!retval && !PyErr_Occurred())) {
        PyErr_SetNone(PyExc_StopIteration);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen_FetchStopIterationValue(&val);
    ret = __Pyx_Coroutine_SendEx(gen, val);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value);
    }
    return __Pyx_Coroutine_MethodReturn(retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (!raised_exception
        || raised_exception == PyExc_StopIteration
        || raised_exception == PyExc_GeneratorExit
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_GeneratorExit)
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_StopIteration))
    {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    PyObject *yf = gen->yieldfrom;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit)) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
            goto throw_here;
        }
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            ret = PyObject_CallObject(meth, args);
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
}
static int __Pyx_Coroutine_traverse(PyObject *self, visitproc visit, void *arg) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label > 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label <= 0)
        return ;
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Coroutine_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self)
{
    Py_INCREF(self->gi_name);
    return self->gi_name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self)
{
    Py_INCREF(self->gi_qualname);
    return self->gi_qualname;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
              static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
              #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (!abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_VERSION_HEX >= 0x03030000) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_VERSION_HEX >= 0x03030000) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if (0) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
              static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if PY_VERSION_HEX >= 0x030400a1
    __Pyx_Coroutine_del,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = PyObject_GenericGetAttr;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
              static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
              #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
              #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
              static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
