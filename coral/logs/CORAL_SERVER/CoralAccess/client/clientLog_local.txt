Thu Oct 13 12:20:40.396528000 CEST 2011
CMTCONFIG is i686-slc5-gcc43-dbg
Using LCG:    61a
Using LCGCMT: /afs/cern.ch/sw/lcg/app/releases/LCGCMT/LCGCMT_61a
Using Boost:  /afs/cern.ch/sw/lcg/external/Boost/1.44.0_python2.6/i686-slc5-gcc43-opt
Using Python: /afs/cern.ch/sw/lcg/external/Python/2.6.5/i686-slc5-gcc43-opt
Using CORAL:  /afs/cern.ch/sw/lcg/app/releases/CORAL/CORAL_2_3_18/src
Using ROOT:   
Using COOL:   
*******************************************************************
python ./CoralAccess/testCoralServer.py local 1ses defOut
+++ CORALSERVER TEST +++ Got the PyCoral connection service
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService2 factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection sharing is enabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection pool cleanup period (default value) is 10 seconds
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Creating a ConnectionPool
+++ CORALSERVER TEST +++ Connection service has been configured
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} The connection pool automatic cleanup thread is currently explicitly disabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IRelationalService: CORAL/Services/RelationalService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/RelationalService factory from RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "coral" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "frontier" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "mysql" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "oracle" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "sqlite" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "coral" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "frontier" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "mysql" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "oracle" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "sqlite" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::ILookupService: CORAL/Services/XMLLookupService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLLookupService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLLookupService factory from XMLLookupService library
Data source lookup using /afs/cern.ch/sw/lcg/app/pool/db/dblookup.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/RelationalPlugins/oracle factory from OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IAuthenticationService: CORAL/Services/XMLAuthenticationService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLAuthenticationService factory from XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/XMLAuthenticationService} Authentication using /afs/cern.ch/sw/lcg/app/pool/db/authentication.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN has been connected
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Fetched tables in the schema
+++ CORALSERVER TEST +++ Connect R/W to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in update mode
+++ CORALSERVER TEST +++ Got a R/W session
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Create table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Fill table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Got the table
+++ CORALSERVER TEST +++ Got the table data editor
+++ CORALSERVER TEST +++ Formatted buffer: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Formatted the output buffer
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Execute test query for the 1st time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Retrieved 20 rows
OK
+++ CORALSERVER TEST +++ Release the cursor
+++ CORALSERVER TEST +++ Release the query
+++ CORALSERVER TEST +++ Execute test query for the 2nd time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Retrieved 20 rows
OK
+++ CORALSERVER TEST +++ Release the cursor
+++ CORALSERVER TEST +++ Release the query
+++ CORALSERVER TEST +++ Sleep a bit
+++ CORALSERVER TEST +++ Slept a bit
+++ CORALSERVER TEST +++ Exiting
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be disconnected
 == =TIMER (CLIENT) 0.55user 0.07system 5.33elapsed 11%CPU
*******************************************************************
Thu Oct 13 12:20:49.821046000 CEST 2011
python ./CoralAccess/testCoralServer.py local 1ses noDefOut
+++ CORALSERVER TEST +++ Got the PyCoral connection service
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService2 factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection sharing is enabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection pool cleanup period (default value) is 10 seconds
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Creating a ConnectionPool
+++ CORALSERVER TEST +++ Connection service has been configured
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} The connection pool automatic cleanup thread is currently explicitly disabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IRelationalService: CORAL/Services/RelationalService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/RelationalService factory from RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "coral" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "frontier" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "mysql" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "oracle" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "sqlite" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "coral" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "frontier" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "mysql" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "oracle" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "sqlite" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::ILookupService: CORAL/Services/XMLLookupService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLLookupService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLLookupService factory from XMLLookupService library
Data source lookup using /afs/cern.ch/sw/lcg/app/pool/db/dblookup.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/RelationalPlugins/oracle factory from OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IAuthenticationService: CORAL/Services/XMLAuthenticationService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLAuthenticationService factory from XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/XMLAuthenticationService} Authentication using /afs/cern.ch/sw/lcg/app/pool/db/authentication.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN has been connected
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Fetched tables in the schema
+++ CORALSERVER TEST +++ Connect R/W to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in update mode
+++ CORALSERVER TEST +++ Got a R/W session
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Create table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Fill table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Got the table
+++ CORALSERVER TEST +++ Got the table data editor
+++ CORALSERVER TEST +++ Formatted buffer: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Formatted the output buffer
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Execute test query for the 1st time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Retrieved 20 rows
OK
+++ CORALSERVER TEST +++ Release the cursor
+++ CORALSERVER TEST +++ Release the query
+++ CORALSERVER TEST +++ Execute test query for the 2nd time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Retrieved 20 rows
OK
+++ CORALSERVER TEST +++ Release the cursor
+++ CORALSERVER TEST +++ Release the query
+++ CORALSERVER TEST +++ Sleep a bit
+++ CORALSERVER TEST +++ Slept a bit
+++ CORALSERVER TEST +++ Exiting
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be disconnected
 == =TIMER (CLIENT) 0.52user 0.04system 5.01elapsed 11%CPU
*******************************************************************
Thu Oct 13 12:20:54.862089000 CEST 2011
python ./CoralAccess/testCoralServer.py local 2ses defOut
+++ CORALSERVER TEST +++ Got the PyCoral connection service
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService2 factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection sharing is enabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection pool cleanup period (default value) is 10 seconds
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Creating a ConnectionPool
+++ CORALSERVER TEST +++ Connection service has been configured
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} The connection pool automatic cleanup thread is currently explicitly disabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IRelationalService: CORAL/Services/RelationalService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/RelationalService factory from RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "coral" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "frontier" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "mysql" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "oracle" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "sqlite" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "coral" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "frontier" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "mysql" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "oracle" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "sqlite" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::ILookupService: CORAL/Services/XMLLookupService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLLookupService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLLookupService factory from XMLLookupService library
Data source lookup using /afs/cern.ch/sw/lcg/app/pool/db/dblookup.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/RelationalPlugins/oracle factory from OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IAuthenticationService: CORAL/Services/XMLAuthenticationService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLAuthenticationService factory from XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/XMLAuthenticationService} Authentication using /afs/cern.ch/sw/lcg/app/pool/db/authentication.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN has been connected
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Fetched tables in the schema
+++ CORALSERVER TEST +++ Connect R/W to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in update mode
+++ CORALSERVER TEST +++ Got a R/W session
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Create table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Fill table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Got the table
+++ CORALSERVER TEST +++ Got the table data editor
+++ CORALSERVER TEST +++ Formatted buffer: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Formatted the output buffer
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a 2nd session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
+++ CORALSERVER TEST +++ Execute test query for the 1st time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Execute test query for the 2nd time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Sleep a bit
+++ CORALSERVER TEST +++ Slept a bit
+++ CORALSERVER TEST +++ Exiting
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be disconnected
 == =TIMER (CLIENT) 0.52user 0.05system 5.05elapsed 11%CPU
*******************************************************************
Thu Oct 13 12:20:59.939777000 CEST 2011
python ./CoralAccess/testCoralServer.py local 2ses noDefOut
+++ CORALSERVER TEST +++ Got the PyCoral connection service
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService2 factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection sharing is enabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection pool cleanup period (default value) is 10 seconds
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Creating a ConnectionPool
+++ CORALSERVER TEST +++ Connection service has been configured
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} The connection pool automatic cleanup thread is currently explicitly disabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IRelationalService: CORAL/Services/RelationalService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/RelationalService factory from RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "coral" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "frontier" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "mysql" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "oracle" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "sqlite" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "coral" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "frontier" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "mysql" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "oracle" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "sqlite" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::ILookupService: CORAL/Services/XMLLookupService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLLookupService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLLookupService factory from XMLLookupService library
Data source lookup using /afs/cern.ch/sw/lcg/app/pool/db/dblookup.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/RelationalPlugins/oracle factory from OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IAuthenticationService: CORAL/Services/XMLAuthenticationService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLAuthenticationService factory from XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/XMLAuthenticationService} Authentication using /afs/cern.ch/sw/lcg/app/pool/db/authentication.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN has been connected
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Fetched tables in the schema
+++ CORALSERVER TEST +++ Connect R/W to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in update mode
+++ CORALSERVER TEST +++ Got a R/W session
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Create table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Fill table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Got the table
+++ CORALSERVER TEST +++ Got the table data editor
+++ CORALSERVER TEST +++ Formatted buffer: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Formatted the output buffer
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a 2nd session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
+++ CORALSERVER TEST +++ Execute test query for the 1st time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Execute test query for the 2nd time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Sleep a bit
+++ CORALSERVER TEST +++ Slept a bit
+++ CORALSERVER TEST +++ Exiting
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be disconnected
 == =TIMER (CLIENT) 0.52user 0.04system 4.94elapsed 11%CPU
*******************************************************************
Thu Oct 13 12:21:04.910766000 CEST 2011
python ./CoralAccess/testCoralServer.py local 2sesAll defOut
+++ CORALSERVER TEST +++ Got the PyCoral connection service
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService2 factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection sharing is enabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection pool cleanup period (default value) is 10 seconds
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Creating a ConnectionPool
+++ CORALSERVER TEST +++ Connection service has been configured
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} The connection pool automatic cleanup thread is currently explicitly disabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IRelationalService: CORAL/Services/RelationalService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/RelationalService factory from RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "coral" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "frontier" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "mysql" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "oracle" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "sqlite" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "coral" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "frontier" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "mysql" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "oracle" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "sqlite" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::ILookupService: CORAL/Services/XMLLookupService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLLookupService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLLookupService factory from XMLLookupService library
Data source lookup using /afs/cern.ch/sw/lcg/app/pool/db/dblookup.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/RelationalPlugins/oracle factory from OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IAuthenticationService: CORAL/Services/XMLAuthenticationService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLAuthenticationService factory from XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/XMLAuthenticationService} Authentication using /afs/cern.ch/sw/lcg/app/pool/db/authentication.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN has been connected
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Fetched tables in the schema
+++ CORALSERVER TEST +++ Connect R/W to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in update mode
+++ CORALSERVER TEST +++ Got a R/W session
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Create table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Fill table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Got the table
+++ CORALSERVER TEST +++ Got the table data editor
+++ CORALSERVER TEST +++ Formatted buffer: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Formatted the output buffer
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a 2nd session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
+++ CORALSERVER TEST +++ Execute test query for the 1st time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Execute test query for the 2nd time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Defined the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Sleep a bit
+++ CORALSERVER TEST +++ Slept a bit
+++ CORALSERVER TEST +++ Exiting
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be disconnected
 == =TIMER (CLIENT) 0.52user 0.03system 5.03elapsed 11%CPU
*******************************************************************
Thu Oct 13 12:21:09.971690000 CEST 2011
python ./CoralAccess/testCoralServer.py local 2sesAll noDefOut
+++ CORALSERVER TEST +++ Got the PyCoral connection service
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/ConnectionService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/ConnectionService2 factory from ConnectionService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection sharing is enabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection pool cleanup period (default value) is 10 seconds
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Creating a ConnectionPool
+++ CORALSERVER TEST +++ Connection service has been configured
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} The connection pool automatic cleanup thread is currently explicitly disabled
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IRelationalService: CORAL/Services/RelationalService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/RelationalService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/RelationalService factory from RelationalService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "coral" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "frontier" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "mysql" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "oracle" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Found plugin for RDBMS technology "sqlite" with native implementation
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "coral" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "frontier" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "mysql" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "oracle" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/RelationalService} Default implementation for RDBMS technology "sqlite" is native
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::ILookupService: CORAL/Services/XMLLookupService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLLookupService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLLookupService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLLookupService factory from XMLLookupService library
Data source lookup using /afs/cern.ch/sw/lcg/app/pool/db/dblookup.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/RelationalPlugins/oracle component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/RelationalPlugins/oracle factory from OracleAccess library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Loading default plugin for coral::IAuthenticationService: CORAL/Services/XMLAuthenticationService
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager creating CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager needs to load CORAL/Services/XMLAuthenticationService component
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {PluginManager} PluginManager loaded CORAL/Services/XMLAuthenticationService factory from XMLAuthenticationService library
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/XMLAuthenticationService} Authentication using /afs/cern.ch/sw/lcg/app/pool/db/authentication.xml file
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN has been connected
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Fetched tables in the schema
+++ CORALSERVER TEST +++ Connect R/W to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in update mode
+++ CORALSERVER TEST +++ Got a R/W session
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ Create table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Fill table CORALSERVER_TEST
+++ CORALSERVER TEST +++ Got the table
+++ CORALSERVER TEST +++ Got the table data editor
+++ CORALSERVER TEST +++ Formatted buffer: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Formatted the output buffer
+++ CORALSERVER TEST +++ Connect R/O to: COOL-Oracle-lcgnight
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a R/O session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/RelationalPlugins/oracle} CORAL_ORA_SKIP_TRANS_READONLY is not set: this session will use OCI serializable read-only transactions
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} New user session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN started on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN to service "lcg_cool_nightly" for user "lcg_cool_nightly" in read-only mode
+++ CORALSERVER TEST +++ Got a 2nd session
+++ CORALSERVER TEST +++ Got a schema
+++ CORALSERVER TEST +++ ------------------------------------------------------
+++ CORALSERVER TEST +++ Execute test query for the 1st time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Execute test query for the 2nd time
+++ CORALSERVER TEST +++ Got a query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a 2nd query
+++ CORALSERVER TEST +++ Did NOT define the output
+++ CORALSERVER TEST +++ Got a cursor
+++ CORALSERVER TEST +++ Got a 2nd cursor
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 0], [x (float) : 0]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 1], [x (float) : 1.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 2], [x (float) : 2.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 3], [x (float) : 3.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 4], [x (float) : 4.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 5], [x (float) : 5.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 6], [x (float) : 6.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 7], [x (float) : 7.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 8], [x (float) : 8.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 9], [x (float) : 9.9]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 10], [x (float) : 11]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 11], [x (float) : 12.1]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 12], [x (float) : 13.2]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 13], [x (float) : 14.3]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 14], [x (float) : 15.4]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 15], [x (float) : 16.5]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 16], [x (float) : 17.6]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 17], [x (float) : 18.7]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 18], [x (float) : 19.8]
+++ CORALSERVER TEST +++ Cursor #1: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #2: current row: [ID (int) : 19], [x (float) : 20.9]
+++ CORALSERVER TEST +++ Cursor #1 - retrieved 20 rows
+++ CORALSERVER TEST +++ Cursor #2 - retrieved 20 rows
OK
OK
+++ CORALSERVER TEST +++ Sleep a bit
+++ CORALSERVER TEST +++ Slept a bit
+++ CORALSERVER TEST +++ Exiting
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} User session with sessionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be ended on connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN
YYYY-MMM-DD hh:mm:ss.nnn [INF] {CORAL/Services/ConnectionService} Connection to service "lcg_cool_nightly" with connectionID=NNNNNN-NNNN-NNNN-NNNN-NNNNNNNNNNNN will be disconnected
 == =TIMER (CLIENT) 0.53user 0.05system 5.08elapsed 11%CPU
*******************************************************************
Thu Oct 13 12:21:15.084794000 CEST 2011
