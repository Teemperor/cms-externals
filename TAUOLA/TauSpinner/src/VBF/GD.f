C  JK. done 20.11.2014
c------------------begin subprocess initiated by GD----------

      SUBROUTINE  GD(P,I3,I4,H1,H2,KEY,ANS)
      IMPLICIT NONE
 
      INTEGER I3,I4,   H1,H2,   KEY
      REAL*8 P(0:3,6), ANS, ANS1, ANS2
      REAL*8  PP(0:3,6)

C      I3=0,21 GLOUN             I4=0,1    ! only gd->gd
      
      ANS=0.D0

      IF(KEY.EQ.1) THEN
         ANS=0.D0
      ELSE IF(KEY.EQ.0) THEN 
         PP(0:3,1) = P(0:3,1)
         PP(0:3,2) = P(0:3,2)
         PP(0:3,5) = P(0:3,5)
         PP(0:3,6) = P(0:3,6)

         PP(0:3,3) = P(0:3,4)
         PP(0:3,4) = P(0:3,3)

         IF(I3.EQ.21 .AND. I4.EQ.1)  CALL GD_GD_NOH(P,H1,H2,ANS)
         IF(I3.EQ.1  .AND. I4.EQ.21) CALL GD_GD_NOH(PP,H1,H2,ANS)
         IF(I3.EQ.21 .AND. I4.EQ.3)  CALL GD_GD_NOH(P,H1,H2,ANS)
         IF(I3.EQ.3  .AND. I4.EQ.21) CALL GD_GD_NOH(PP,H1,H2,ANS)
         IF(I3.EQ.21 .AND. I4.EQ.5)  CALL GD_GD_NOH(P,H1,H2,ANS)
         IF(I3.EQ.5  .AND. I4.EQ.21) CALL GD_GD_NOH(PP,H1,H2,ANS)

         IF(I3.EQ.0  .AND. I4.EQ.0) THEN
            CALL GD_GD_NOH(P,H1,H2,ANS1)
            CALL GD_GD_NOH(PP,H1,H2,ANS2)
            ANS=ANS1+ANS2
         ENDIF
      ELSE 
         WRITE(*,*) 'NOT FINISHED'
         STOP
      ENDIF
      END SUBROUTINE GD

c ------- no subprocesses for gluon-d->jjH

c --------------- begin subprocesses initiated by gloun-d, no Higgs 

      SUBROUTINE GD_GD_NOH(P,H1,H2,ANS)
C     
C     Generated by MadGraph 5 v. 1.5.15, 2013-12-11
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     MadGraph StandAlone Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: g d > g d ta+ ta- / h QED=4
C     Process: g s > g s ta+ ta- / h QED=4
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=6)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=64)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
      INTEGER H1,H2
C     
C     LOCAL VARIABLES 
C     
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 MATRIX_GD_GD_NOH
      INTEGER IHEL,IDEN, I
      INTEGER JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB)
      DATA NTRY/0/
      DATA GOODHEL/NCOMB*.FALSE./
      DATA (NHEL(I,   1),I=1,6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(I,   2),I=1,6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(I,   3),I=1,6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(I,   4),I=1,6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(I,   5),I=1,6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(I,   6),I=1,6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(I,   7),I=1,6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(I,   8),I=1,6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(I,   9),I=1,6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(I,  10),I=1,6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,  11),I=1,6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(I,  12),I=1,6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(I,  13),I=1,6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(I,  14),I=1,6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(I,  15),I=1,6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(I,  16),I=1,6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(I,  17),I=1,6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,  18),I=1,6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(I,  19),I=1,6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(I,  20),I=1,6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(I,  21),I=1,6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(I,  22),I=1,6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(I,  23),I=1,6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(I,  24),I=1,6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(I,  25),I=1,6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(I,  26),I=1,6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(I,  27),I=1,6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(I,  28),I=1,6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(I,  29),I=1,6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,  30),I=1,6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(I,  31),I=1,6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(I,  32),I=1,6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(I,  33),I=1,6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(I,  34),I=1,6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(I,  35),I=1,6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(I,  36),I=1,6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(I,  37),I=1,6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(I,  38),I=1,6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(I,  39),I=1,6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(I,  40),I=1,6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(I,  41),I=1,6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(I,  42),I=1,6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,  43),I=1,6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(I,  44),I=1,6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(I,  45),I=1,6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(I,  46),I=1,6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(I,  47),I=1,6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(I,  48),I=1,6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(I,  49),I=1,6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,  50),I=1,6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(I,  51),I=1,6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(I,  52),I=1,6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(I,  53),I=1,6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(I,  54),I=1,6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(I,  55),I=1,6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(I,  56),I=1,6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(I,  57),I=1,6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(I,  58),I=1,6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(I,  59),I=1,6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(I,  60),I=1,6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(I,  61),I=1,6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,  62),I=1,6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(I,  63),I=1,6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(I,  64),I=1,6) / 1, 1, 1, 1, 1, 1/
      DATA IDEN/96/
C     ----------
C     BEGIN CODE
C     ----------
      DO IHEL=1,NEXTERNAL
        JC(IHEL) = +1
      ENDDO
      ANS = 0D0
      DO IHEL=1,NCOMB
          T=MATRIX_GD_GD_NOH(P ,H1,H2,NHEL(1,IHEL),JC(1))
          ANS=ANS+T
      ENDDO
      ANS=ANS/DBLE(IDEN)
      END


      REAL*8 FUNCTION MATRIX_GD_GD_NOH(P,H1,H2,NHEL,IC)
C     
C     Generated by MadGraph 5 v. 1.5.15, 2013-12-11
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: g d > g d ta+ ta- / h QED=4
C     Process: g s > g s ta+ ta- / h QED=4
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=16)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=6)
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER (NWAVEFUNCS=10, NCOLOR=2)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0D0, 0D0), (1D0, 0D0)/
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'
C     
C     COLOR DATA
C     
      DATA DENOM(1)/3/
      DATA (CF(I,  1),I=  1,  2) /   16,   -2/
C     1 T(1,3,4,2)
      DATA DENOM(2)/3/
      DATA (CF(I,  2),I=  1,  2) /   -2,   16/
C     1 T(3,1,4,2)

      INTEGER H1,H2
      REAL*8 MATRIX
      MATRIX_GD_GD_NOH=0.D0
      IF(H1.EQ.0. OR .H1.EQ.NHEL(5)) THEN
      IF(H2.EQ.0. OR .H2.EQ.NHEL(6)) THEN

C     ----------
C     BEGIN CODE
C     ----------
      CALL VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
      CALL IXXXXX(P(0,2),ZERO,NHEL(2),+1*IC(2),W(1,2))
      CALL VXXXXX(P(0,3),ZERO,NHEL(3),+1*IC(3),W(1,3))
      CALL OXXXXX(P(0,4),ZERO,NHEL(4),+1*IC(4),W(1,4))
      CALL IXXXXX(P(0,5),MTA,NHEL(5),-1*IC(5),W(1,5))
      CALL OXXXXX(P(0,6),MTA,NHEL(6),+1*IC(6),W(1,6))
      CALL VVV1P0_1(W(1,1),W(1,3),GC_10,ZERO,ZERO,W(1,7))
      CALL FFV1P0_3(W(1,5),W(1,6),GC_3,ZERO,ZERO,W(1,8))
      CALL FFV1_1(W(1,4),W(1,7),GC_11,ZERO,ZERO,W(1,9))
C     Amplitude(s) for diagram number 1
      CALL FFV1_0(W(1,2),W(1,9),W(1,8),GC_1,AMP(1))
      CALL FFV1_2(W(1,2),W(1,7),GC_11,ZERO,ZERO,W(1,10))
C     Amplitude(s) for diagram number 2
      CALL FFV1_0(W(1,10),W(1,4),W(1,8),GC_1,AMP(2))
      CALL FFV2_4_3(W(1,5),W(1,6),GC_50,GC_59,MZ,WZ,W(1,7))
C     Amplitude(s) for diagram number 3
      CALL FFV2_3_0(W(1,2),W(1,9),W(1,7),GC_50,GC_58,AMP(3))
C     Amplitude(s) for diagram number 4
      CALL FFV2_3_0(W(1,10),W(1,4),W(1,7),GC_50,GC_58,AMP(4))
      CALL FFV1_1(W(1,4),W(1,1),GC_11,ZERO,ZERO,W(1,10))
      CALL FFV1_2(W(1,2),W(1,3),GC_11,ZERO,ZERO,W(1,9))
C     Amplitude(s) for diagram number 5
      CALL FFV1_0(W(1,9),W(1,10),W(1,8),GC_1,AMP(5))
C     Amplitude(s) for diagram number 6
      CALL FFV2_3_0(W(1,9),W(1,10),W(1,7),GC_50,GC_58,AMP(6))
      CALL FFV1_1(W(1,10),W(1,3),GC_11,ZERO,ZERO,W(1,6))
C     Amplitude(s) for diagram number 7
      CALL FFV1_0(W(1,2),W(1,6),W(1,8),GC_1,AMP(7))
C     Amplitude(s) for diagram number 8
      CALL FFV2_3_0(W(1,2),W(1,6),W(1,7),GC_50,GC_58,AMP(8))
      CALL FFV1_2(W(1,2),W(1,1),GC_11,ZERO,ZERO,W(1,6))
      CALL FFV1_1(W(1,4),W(1,3),GC_11,ZERO,ZERO,W(1,10))
C     Amplitude(s) for diagram number 9
      CALL FFV1_0(W(1,6),W(1,10),W(1,8),GC_1,AMP(9))
C     Amplitude(s) for diagram number 10
      CALL FFV2_3_0(W(1,6),W(1,10),W(1,7),GC_50,GC_58,AMP(10))
      CALL FFV1_2(W(1,6),W(1,3),GC_11,ZERO,ZERO,W(1,5))
C     Amplitude(s) for diagram number 11
      CALL FFV1_0(W(1,5),W(1,4),W(1,8),GC_1,AMP(11))
C     Amplitude(s) for diagram number 12
      CALL FFV2_3_0(W(1,5),W(1,4),W(1,7),GC_50,GC_58,AMP(12))
      CALL FFV1_1(W(1,10),W(1,1),GC_11,ZERO,ZERO,W(1,5))
C     Amplitude(s) for diagram number 13
      CALL FFV1_0(W(1,2),W(1,5),W(1,8),GC_1,AMP(13))
C     Amplitude(s) for diagram number 14
      CALL FFV2_3_0(W(1,2),W(1,5),W(1,7),GC_50,GC_58,AMP(14))
      CALL FFV1_2(W(1,9),W(1,1),GC_11,ZERO,ZERO,W(1,5))
C     Amplitude(s) for diagram number 15
      CALL FFV1_0(W(1,5),W(1,4),W(1,8),GC_1,AMP(15))
C     Amplitude(s) for diagram number 16
      CALL FFV2_3_0(W(1,5),W(1,4),W(1,7),GC_50,GC_58,AMP(16))
      JAMP(1)=-IMAG1*AMP(1)-IMAG1*AMP(2)-IMAG1*AMP(3)-IMAG1*AMP(4)
     $ +AMP(5)+AMP(6)+AMP(7)+AMP(8)+AMP(15)+AMP(16)
      JAMP(2)=+IMAG1*AMP(1)+IMAG1*AMP(2)+IMAG1*AMP(3)+IMAG1*AMP(4)
     $ +AMP(9)+AMP(10)+AMP(11)+AMP(12)+AMP(13)+AMP(14)

      MATRIX = 0.D0
      DO I = 1, NCOLOR
        ZTEMP = (0.D0,0.D0)
        DO J = 1, NCOLOR
          ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
        ENDDO
        MATRIX = MATRIX+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO
      MATRIX_GD_GD_NOH=MATRIX
      ENDIF
      ENDIF
      END



